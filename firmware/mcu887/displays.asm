;  Assembly code generated by mikroVirtualMachine - V. 5.0.0.3
;  Date/Time: 16/09/2020 17:59:00
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$06CA	$	_mul_32x32_u:
$06CA	$1303			BCF	STATUS, RP1
$06CB	$1283			BCF	STATUS, RP0
;math.ppas,1570 :: 		
;math.ppas,1578 :: 		
$06CC	$3022			MOVLW	34
;math.ppas,1579 :: 		
$06CD	$00FC			MOVWF	STACK_12
;math.ppas,1580 :: 		
$06CE	$01F8			CLRF	STACK_8
;math.ppas,1581 :: 		
$06CF	$01F9			CLRF	STACK_9
;math.ppas,1582 :: 		
$06D0	$01FA			CLRF	STACK_10
;math.ppas,1584 :: 		
$06D1	$01FB			CLRF	STACK_11
;math.ppas,1588 :: 		
$06D2	$	_NEXT:
;math.ppas,1589 :: 		
$06D2	$03FC			DECF	STACK_12, F
;math.ppas,1590 :: 		
$06D3	$1903			BTFSC	STATUS, Z
;math.ppas,1591 :: 		
$06D4	$2F00			GOTO	_EXIT2
;math.ppas,1593 :: 		
$06D5	$1003			BCF	STATUS, C
;math.ppas,1602 :: 		
$06D6	$	_LOOP:
;math.ppas,1603 :: 		
$06D6	$0CFB			RRF	STACK_11, F
;math.ppas,1604 :: 		
$06D7	$0CFA			RRF	STACK_10, F
;math.ppas,1605 :: 		
$06D8	$0CF9			RRF	STACK_9, F
;math.ppas,1606 :: 		
$06D9	$0CF8			RRF	STACK_8, F
;math.ppas,1607 :: 		
$06DA	$0CF3			RRF	STACK_3, F
;math.ppas,1608 :: 		
$06DB	$0CF2			RRF	STACK_2, F
;math.ppas,1609 :: 		
$06DC	$0CF1			RRF	STACK_1, F
;math.ppas,1614 :: 		
$06DD	$0CF0			RRF	STACK_0, F
;math.ppas,1615 :: 		
$06DE	$1C03			BTFSS	STATUS, C
;math.ppas,1616 :: 		
$06DF	$2ED2			GOTO	_NEXT
;math.ppas,1617 :: 		
$06E0	$03FC			DECF	STACK_12, F
;math.ppas,1618 :: 		
$06E1	$1903			BTFSC	STATUS, Z
;math.ppas,1625 :: 		
$06E2	$2EF2			GOTO	_EXIT1
;math.ppas,1626 :: 		
$06E3	$0874			MOVF	STACK_4, W
;math.ppas,1627 :: 		
$06E4	$07F8			ADDWF	STACK_8, F
;math.ppas,1628 :: 		
$06E5	$0875			MOVF	STACK_5, W
;math.ppas,1629 :: 		
$06E6	$1803			BTFSC	STATUS, C
;math.ppas,1630 :: 		
$06E7	$0F75			INCFSZ	STACK_5, W
;math.ppas,1631 :: 		
$06E8	$07F9			ADDWF	STACK_9, F
;math.ppas,1632 :: 		
$06E9	$0876			MOVF	STACK_6, W
;math.ppas,1633 :: 		
$06EA	$1803			BTFSC	STATUS, C
;math.ppas,1634 :: 		
$06EB	$0F76			INCFSZ	STACK_6, W
;math.ppas,1635 :: 		
$06EC	$07FA			ADDWF	STACK_10, F
;math.ppas,1636 :: 		
$06ED	$0877			MOVF	STACK_7, W
;math.ppas,1637 :: 		
$06EE	$1803			BTFSC	STATUS, C
;math.ppas,1638 :: 		
$06EF	$0F77			INCFSZ	STACK_7, W
;math.ppas,1640 :: 		
$06F0	$07FB			ADDWF	STACK_11, F
;math.ppas,1642 :: 		
$06F1	$2ED6			GOTO	_LOOP
;math.ppas,1647 :: 		
$06F2	$	_EXIT1:
;math.ppas,1648 :: 		
$06F2	$0874			MOVF	STACK_4, W
;math.ppas,1649 :: 		
$06F3	$07F8			ADDWF	STACK_8, F
;math.ppas,1650 :: 		
$06F4	$0875			MOVF	STACK_5, W
;math.ppas,1651 :: 		
$06F5	$1803			BTFSC	STATUS, C
;math.ppas,1652 :: 		
$06F6	$0F75			INCFSZ	STACK_5, W
;math.ppas,1653 :: 		
$06F7	$07F9			ADDWF	STACK_9, F
;math.ppas,1654 :: 		
$06F8	$0876			MOVF	STACK_6, W
;math.ppas,1655 :: 		
$06F9	$1803			BTFSC	STATUS, C
;math.ppas,1656 :: 		
$06FA	$0F76			INCFSZ	STACK_6, W
;math.ppas,1657 :: 		
$06FB	$07FA			ADDWF	STACK_10, F
;math.ppas,1658 :: 		
$06FC	$0877			MOVF	STACK_7, W
;math.ppas,1659 :: 		
$06FD	$1803			BTFSC	STATUS, C
;math.ppas,1660 :: 		
$06FE	$0F77			INCFSZ	STACK_7, W
;math.ppas,1663 :: 		
$06FF	$07FB			ADDWF	STACK_11, F
;math.ppas,1664 :: 		
$0700	$	_EXIT2:
;math.ppas,1665 :: 		
$0700	$	math_L_13:
;math.ppas,1666 :: 		
$0700	$0008			RETURN
$02D9	$	_sdiv3232l:
$02D9	$1303			BCF	STATUS, RP1
$02DA	$1283			BCF	STATUS, RP0
;math.ppas,539 :: 		
;math.ppas,541 :: 		
$02DB	$0874			MOVF	STACK_4, W
;math.ppas,542 :: 		
$02DC	$02F8			SUBWF	STACK_8, F
;math.ppas,543 :: 		
$02DD	$0875			MOVF	STACK_5, W
;math.ppas,544 :: 		
$02DE	$1C03			BTFSS	STATUS, C
;math.ppas,545 :: 		
$02DF	$0F75			INCFSZ	STACK_5, W
;math.ppas,546 :: 		
$02E0	$02F9			SUBWF	STACK_9, F
;math.ppas,547 :: 		
$02E1	$0876			MOVF	STACK_6, W
;math.ppas,548 :: 		
$02E2	$1C03			BTFSS	STATUS, C
;math.ppas,549 :: 		
$02E3	$0F76			INCFSZ	STACK_6, W
;math.ppas,550 :: 		
$02E4	$02FA			SUBWF	STACK_10, F
;math.ppas,551 :: 		
$02E5	$0877			MOVF	STACK_7, W
;math.ppas,552 :: 		
$02E6	$1C03			BTFSS	STATUS, C
;math.ppas,553 :: 		
$02E7	$0F77			INCFSZ	STACK_7, W
;math.ppas,554 :: 		
$02E8	$02FB			SUBWF	STACK_11, F
;math.ppas,556 :: 		
$02E9	$0DF3			RLF	STACK_3, F
;math.ppas,557 :: 		
$02EA	$3007			MOVLW	7
;math.ppas,559 :: 		
$02EB	$00FC			MOVWF	STACK_12
;math.ppas,560 :: 		
$02EC	$	LOOPS3232A:
;math.ppas,561 :: 		
$02EC	$0D73			RLF	STACK_3, W
;math.ppas,562 :: 		
$02ED	$0DF8			RLF	STACK_8, F
;math.ppas,563 :: 		
$02EE	$0DF9			RLF	STACK_9, F
;math.ppas,564 :: 		
$02EF	$0DFA			RLF	STACK_10, F
;math.ppas,565 :: 		
$02F0	$0DFB			RLF	STACK_11, F
;math.ppas,566 :: 		
$02F1	$0874			MOVF	STACK_4, W
;math.ppas,567 :: 		
$02F2	$1C73			BTFSS	STACK_3, 0
;math.ppas,569 :: 		
$02F3	$2B02			GOTO	SADD22LA
;math.ppas,570 :: 		
$02F4	$02F8			SUBWF	STACK_8, F
;math.ppas,571 :: 		
$02F5	$0875			MOVF	STACK_5, W
;math.ppas,572 :: 		
$02F6	$1C03			BTFSS	STATUS, C
;math.ppas,573 :: 		
$02F7	$0F75			INCFSZ	STACK_5, W
;math.ppas,574 :: 		
$02F8	$02F9			SUBWF	STACK_9, F
;math.ppas,575 :: 		
$02F9	$0876			MOVF	STACK_6, W
;math.ppas,576 :: 		
$02FA	$1C03			BTFSS	STATUS, C
;math.ppas,577 :: 		
$02FB	$0F76			INCFSZ	STACK_6, W
;math.ppas,578 :: 		
$02FC	$02FA			SUBWF	STACK_10, F
;math.ppas,579 :: 		
$02FD	$0877			MOVF	STACK_7, W
;math.ppas,580 :: 		
$02FE	$1C03			BTFSS	STATUS, C
;math.ppas,581 :: 		
$02FF	$0F77			INCFSZ	STACK_7, W
;math.ppas,582 :: 		
$0300	$02FB			SUBWF	STACK_11, F
;math.ppas,584 :: 		
$0301	$2B0F			GOTO	SOK22LA
;math.ppas,585 :: 		
$0302	$	SADD22LA:
;math.ppas,586 :: 		
$0302	$07F8			ADDWF	STACK_8, F
;math.ppas,587 :: 		
$0303	$0875			MOVF	STACK_5, W
;math.ppas,588 :: 		
$0304	$1803			BTFSC	STATUS, C
;math.ppas,589 :: 		
$0305	$0F75			INCFSZ	STACK_5, W
;math.ppas,590 :: 		
$0306	$07F9			ADDWF	STACK_9, F
;math.ppas,591 :: 		
$0307	$0876			MOVF	STACK_6, W
;math.ppas,592 :: 		
$0308	$1803			BTFSC	STATUS, C
;math.ppas,593 :: 		
$0309	$0F76			INCFSZ	STACK_6, W
;math.ppas,594 :: 		
$030A	$07FA			ADDWF	STACK_10, F
;math.ppas,595 :: 		
$030B	$0877			MOVF	STACK_7, W
;math.ppas,596 :: 		
$030C	$1803			BTFSC	STATUS, C
;math.ppas,597 :: 		
$030D	$0F77			INCFSZ	STACK_7, W
;math.ppas,599 :: 		
$030E	$07FB			ADDWF	STACK_11, F
;math.ppas,600 :: 		
$030F	$	SOK22LA:
;math.ppas,602 :: 		
$030F	$0DF3			RLF	STACK_3, F
;math.ppas,603 :: 		
$0310	$0BFC			DECFSZ	STACK_12, F
;math.ppas,605 :: 		
$0311	$2AEC			GOTO	LOOPS3232A
;math.ppas,606 :: 		
$0312	$0D72			RLF	STACK_2, W
;math.ppas,607 :: 		
$0313	$0DF8			RLF	STACK_8, F
;math.ppas,608 :: 		
$0314	$0DF9			RLF	STACK_9, F
;math.ppas,609 :: 		
$0315	$0DFA			RLF	STACK_10, F
;math.ppas,610 :: 		
$0316	$0DFB			RLF	STACK_11, F
;math.ppas,611 :: 		
$0317	$0874			MOVF	STACK_4, W
;math.ppas,612 :: 		
$0318	$1C73			BTFSS	STACK_3, 0
;math.ppas,614 :: 		
$0319	$2B28			GOTO	SADD22L8
;math.ppas,615 :: 		
$031A	$02F8			SUBWF	STACK_8, F
;math.ppas,616 :: 		
$031B	$0875			MOVF	STACK_5, W
;math.ppas,617 :: 		
$031C	$1C03			BTFSS	STATUS, C
;math.ppas,618 :: 		
$031D	$0F75			INCFSZ	STACK_5, W
;math.ppas,619 :: 		
$031E	$02F9			SUBWF	STACK_9, F
;math.ppas,620 :: 		
$031F	$0876			MOVF	STACK_6, W
;math.ppas,621 :: 		
$0320	$1C03			BTFSS	STATUS, C
;math.ppas,622 :: 		
$0321	$0F76			INCFSZ	STACK_6, W
;math.ppas,623 :: 		
$0322	$02FA			SUBWF	STACK_10, F
;math.ppas,624 :: 		
$0323	$0877			MOVF	STACK_7, W
;math.ppas,625 :: 		
$0324	$1C03			BTFSS	STATUS, C
;math.ppas,626 :: 		
$0325	$0F77			INCFSZ	STACK_7, W
;math.ppas,627 :: 		
$0326	$02FB			SUBWF	STACK_11, F
;math.ppas,629 :: 		
$0327	$2B35			GOTO	SOK22L8
;math.ppas,630 :: 		
$0328	$	SADD22L8:
;math.ppas,631 :: 		
$0328	$07F8			ADDWF	STACK_8, F
;math.ppas,632 :: 		
$0329	$0875			MOVF	STACK_5, W
;math.ppas,633 :: 		
$032A	$1803			BTFSC	STATUS, C
;math.ppas,634 :: 		
$032B	$0F75			INCFSZ	STACK_5, W
;math.ppas,635 :: 		
$032C	$07F9			ADDWF	STACK_9, F
;math.ppas,636 :: 		
$032D	$0876			MOVF	STACK_6, W
;math.ppas,637 :: 		
$032E	$1803			BTFSC	STATUS, C
;math.ppas,638 :: 		
$032F	$0F76			INCFSZ	STACK_6, W
;math.ppas,639 :: 		
$0330	$07FA			ADDWF	STACK_10, F
;math.ppas,640 :: 		
$0331	$0877			MOVF	STACK_7, W
;math.ppas,641 :: 		
$0332	$1803			BTFSC	STATUS, C
;math.ppas,642 :: 		
$0333	$0F77			INCFSZ	STACK_7, W
;math.ppas,644 :: 		
$0334	$07FB			ADDWF	STACK_11, F
;math.ppas,645 :: 		
$0335	$	SOK22L8:
;math.ppas,647 :: 		
$0335	$0DF2			RLF	STACK_2, F
;math.ppas,648 :: 		
$0336	$3007			MOVLW	7
;math.ppas,650 :: 		
$0337	$00FC			MOVWF	STACK_12
;math.ppas,651 :: 		
$0338	$	LOOPS3232B:
;math.ppas,652 :: 		
$0338	$0D72			RLF	STACK_2, W
;math.ppas,653 :: 		
$0339	$0DF8			RLF	STACK_8, F
;math.ppas,654 :: 		
$033A	$0DF9			RLF	STACK_9, F
;math.ppas,655 :: 		
$033B	$0DFA			RLF	STACK_10, F
;math.ppas,656 :: 		
$033C	$0DFB			RLF	STACK_11, F
;math.ppas,657 :: 		
$033D	$0874			MOVF	STACK_4, W
;math.ppas,658 :: 		
$033E	$1C72			BTFSS	STACK_2, 0
;math.ppas,660 :: 		
$033F	$2B4E			GOTO	SADD22LB
;math.ppas,661 :: 		
$0340	$02F8			SUBWF	STACK_8, F
;math.ppas,662 :: 		
$0341	$0875			MOVF	STACK_5, W
;math.ppas,663 :: 		
$0342	$1C03			BTFSS	STATUS, C
;math.ppas,664 :: 		
$0343	$0F75			INCFSZ	STACK_5, W
;math.ppas,665 :: 		
$0344	$02F9			SUBWF	STACK_9, F
;math.ppas,666 :: 		
$0345	$0876			MOVF	STACK_6, W
;math.ppas,667 :: 		
$0346	$1C03			BTFSS	STATUS, C
;math.ppas,668 :: 		
$0347	$0F76			INCFSZ	STACK_6, W
;math.ppas,669 :: 		
$0348	$02FA			SUBWF	STACK_10, F
;math.ppas,670 :: 		
$0349	$0877			MOVF	STACK_7, W
;math.ppas,671 :: 		
$034A	$1C03			BTFSS	STATUS, C
;math.ppas,672 :: 		
$034B	$0F77			INCFSZ	STACK_7, W
;math.ppas,673 :: 		
$034C	$02FB			SUBWF	STACK_11, F
;math.ppas,675 :: 		
$034D	$2B5B			GOTO	SOK22LB
;math.ppas,676 :: 		
$034E	$	SADD22LB:
;math.ppas,677 :: 		
$034E	$07F8			ADDWF	STACK_8, F
;math.ppas,678 :: 		
$034F	$0875			MOVF	STACK_5, W
;math.ppas,679 :: 		
$0350	$1803			BTFSC	STATUS, C
;math.ppas,680 :: 		
$0351	$0F75			INCFSZ	STACK_5, W
;math.ppas,681 :: 		
$0352	$07F9			ADDWF	STACK_9, F
;math.ppas,682 :: 		
$0353	$0876			MOVF	STACK_6, W
;math.ppas,683 :: 		
$0354	$1803			BTFSC	STATUS, C
;math.ppas,684 :: 		
$0355	$0F76			INCFSZ	STACK_6, W
;math.ppas,685 :: 		
$0356	$07FA			ADDWF	STACK_10, F
;math.ppas,686 :: 		
$0357	$0877			MOVF	STACK_7, W
;math.ppas,687 :: 		
$0358	$1803			BTFSC	STATUS, C
;math.ppas,688 :: 		
$0359	$0F77			INCFSZ	STACK_7, W
;math.ppas,690 :: 		
$035A	$07FB			ADDWF	STACK_11, F
;math.ppas,691 :: 		
$035B	$	SOK22LB:
;math.ppas,693 :: 		
$035B	$0DF2			RLF	STACK_2, F
;math.ppas,694 :: 		
$035C	$0BFC			DECFSZ	STACK_12, F
;math.ppas,696 :: 		
$035D	$2B38			GOTO	LOOPS3232B
;math.ppas,697 :: 		
$035E	$0D71			RLF	STACK_1, W
;math.ppas,698 :: 		
$035F	$0DF8			RLF	STACK_8, F
;math.ppas,699 :: 		
$0360	$0DF9			RLF	STACK_9, F
;math.ppas,700 :: 		
$0361	$0DFA			RLF	STACK_10, F
;math.ppas,701 :: 		
$0362	$0DFB			RLF	STACK_11, F
;math.ppas,702 :: 		
$0363	$0874			MOVF	STACK_4, W
;math.ppas,703 :: 		
$0364	$1C72			BTFSS	STACK_2, 0
;math.ppas,705 :: 		
$0365	$2B74			GOTO	SADD22L16
;math.ppas,706 :: 		
$0366	$02F8			SUBWF	STACK_8, F
;math.ppas,707 :: 		
$0367	$0875			MOVF	STACK_5, W
;math.ppas,708 :: 		
$0368	$1C03			BTFSS	STATUS, C
;math.ppas,709 :: 		
$0369	$0F75			INCFSZ	STACK_5, W
;math.ppas,710 :: 		
$036A	$02F9			SUBWF	STACK_9, F
;math.ppas,711 :: 		
$036B	$0876			MOVF	STACK_6, W
;math.ppas,712 :: 		
$036C	$1C03			BTFSS	STATUS, C
;math.ppas,713 :: 		
$036D	$0F76			INCFSZ	STACK_6, W
;math.ppas,714 :: 		
$036E	$02FA			SUBWF	STACK_10, F
;math.ppas,715 :: 		
$036F	$0877			MOVF	STACK_7, W
;math.ppas,716 :: 		
$0370	$1C03			BTFSS	STATUS, C
;math.ppas,717 :: 		
$0371	$0F77			INCFSZ	STACK_7, W
;math.ppas,718 :: 		
$0372	$02FB			SUBWF	STACK_11, F
;math.ppas,720 :: 		
$0373	$2B81			GOTO	SOK22L16
;math.ppas,721 :: 		
$0374	$	SADD22L16:
;math.ppas,722 :: 		
$0374	$07F8			ADDWF	STACK_8, F
;math.ppas,723 :: 		
$0375	$0875			MOVF	STACK_5, W
;math.ppas,724 :: 		
$0376	$1803			BTFSC	STATUS, C
;math.ppas,725 :: 		
$0377	$0F75			INCFSZ	STACK_5, W
;math.ppas,726 :: 		
$0378	$07F9			ADDWF	STACK_9, F
;math.ppas,727 :: 		
$0379	$0876			MOVF	STACK_6, W
;math.ppas,728 :: 		
$037A	$1803			BTFSC	STATUS, C
;math.ppas,729 :: 		
$037B	$0F76			INCFSZ	STACK_6, W
;math.ppas,730 :: 		
$037C	$07FA			ADDWF	STACK_10, F
;math.ppas,731 :: 		
$037D	$0877			MOVF	STACK_7, W
;math.ppas,732 :: 		
$037E	$1803			BTFSC	STATUS, C
;math.ppas,733 :: 		
$037F	$0F77			INCFSZ	STACK_7, W
;math.ppas,735 :: 		
$0380	$07FB			ADDWF	STACK_11, F
;math.ppas,736 :: 		
$0381	$	SOK22L16:
;math.ppas,738 :: 		
$0381	$0DF1			RLF	STACK_1, F
;math.ppas,739 :: 		
$0382	$3007			MOVLW	7
;math.ppas,741 :: 		
$0383	$00FC			MOVWF	STACK_12
;math.ppas,742 :: 		
$0384	$	LOOPS3232C:
;math.ppas,743 :: 		
$0384	$0D71			RLF	STACK_1, W
;math.ppas,744 :: 		
$0385	$0DF8			RLF	STACK_8, F
;math.ppas,745 :: 		
$0386	$0DF9			RLF	STACK_9, F
;math.ppas,746 :: 		
$0387	$0DFA			RLF	STACK_10, F
;math.ppas,747 :: 		
$0388	$0DFB			RLF	STACK_11, F
;math.ppas,748 :: 		
$0389	$0874			MOVF	STACK_4, W
;math.ppas,749 :: 		
$038A	$1C71			BTFSS	STACK_1, 0
;math.ppas,751 :: 		
$038B	$2B9A			GOTO	SADD22LC
;math.ppas,752 :: 		
$038C	$02F8			SUBWF	STACK_8, F
;math.ppas,753 :: 		
$038D	$0875			MOVF	STACK_5, W
;math.ppas,754 :: 		
$038E	$1C03			BTFSS	STATUS, C
;math.ppas,755 :: 		
$038F	$0F75			INCFSZ	STACK_5, W
;math.ppas,756 :: 		
$0390	$02F9			SUBWF	STACK_9, F
;math.ppas,757 :: 		
$0391	$0876			MOVF	STACK_6, W
;math.ppas,758 :: 		
$0392	$1C03			BTFSS	STATUS, C
;math.ppas,759 :: 		
$0393	$0F76			INCFSZ	STACK_6, W
;math.ppas,760 :: 		
$0394	$02FA			SUBWF	STACK_10, F
;math.ppas,761 :: 		
$0395	$0877			MOVF	STACK_7, W
;math.ppas,762 :: 		
$0396	$1C03			BTFSS	STATUS, C
;math.ppas,763 :: 		
$0397	$0F77			INCFSZ	STACK_7, W
;math.ppas,764 :: 		
$0398	$02FB			SUBWF	STACK_11, F
;math.ppas,766 :: 		
$0399	$2BA7			GOTO	SOK22LC
;math.ppas,767 :: 		
$039A	$	SADD22LC:
;math.ppas,768 :: 		
$039A	$07F8			ADDWF	STACK_8, F
;math.ppas,769 :: 		
$039B	$0875			MOVF	STACK_5, W
;math.ppas,770 :: 		
$039C	$1803			BTFSC	STATUS, C
;math.ppas,771 :: 		
$039D	$0F75			INCFSZ	STACK_5, W
;math.ppas,772 :: 		
$039E	$07F9			ADDWF	STACK_9, F
;math.ppas,773 :: 		
$039F	$0876			MOVF	STACK_6, W
;math.ppas,774 :: 		
$03A0	$1803			BTFSC	STATUS, C
;math.ppas,775 :: 		
$03A1	$0F76			INCFSZ	STACK_6, W
;math.ppas,776 :: 		
$03A2	$07FA			ADDWF	STACK_10, F
;math.ppas,777 :: 		
$03A3	$0877			MOVF	STACK_7, W
;math.ppas,778 :: 		
$03A4	$1803			BTFSC	STATUS, C
;math.ppas,779 :: 		
$03A5	$0F77			INCFSZ	STACK_7, W
;math.ppas,781 :: 		
$03A6	$07FB			ADDWF	STACK_11, F
;math.ppas,782 :: 		
$03A7	$	SOK22LC:
;math.ppas,784 :: 		
$03A7	$0DF1			RLF	STACK_1, F
;math.ppas,785 :: 		
$03A8	$0BFC			DECFSZ	STACK_12, F
;math.ppas,787 :: 		
$03A9	$2B84			GOTO	LOOPS3232C
;math.ppas,788 :: 		
$03AA	$0D70			RLF	STACK_0, W
;math.ppas,789 :: 		
$03AB	$0DF8			RLF	STACK_8, F
;math.ppas,790 :: 		
$03AC	$0DF9			RLF	STACK_9, F
;math.ppas,791 :: 		
$03AD	$0DFA			RLF	STACK_10, F
;math.ppas,792 :: 		
$03AE	$0DFB			RLF	STACK_11, F
;math.ppas,793 :: 		
$03AF	$0874			MOVF	STACK_4, W
;math.ppas,794 :: 		
$03B0	$1C71			BTFSS	STACK_1, 0
;math.ppas,796 :: 		
$03B1	$2BC0			GOTO	SADD22L24
;math.ppas,797 :: 		
$03B2	$02F8			SUBWF	STACK_8, F
;math.ppas,798 :: 		
$03B3	$0875			MOVF	STACK_5, W
;math.ppas,799 :: 		
$03B4	$1C03			BTFSS	STATUS, C
;math.ppas,800 :: 		
$03B5	$0F75			INCFSZ	STACK_5, W
;math.ppas,801 :: 		
$03B6	$02F9			SUBWF	STACK_9, F
;math.ppas,802 :: 		
$03B7	$0876			MOVF	STACK_6, W
;math.ppas,803 :: 		
$03B8	$1C03			BTFSS	STATUS, C
;math.ppas,804 :: 		
$03B9	$0F76			INCFSZ	STACK_6, W
;math.ppas,805 :: 		
$03BA	$02FA			SUBWF	STACK_10, F
;math.ppas,806 :: 		
$03BB	$0877			MOVF	STACK_7, W
;math.ppas,807 :: 		
$03BC	$1C03			BTFSS	STATUS, C
;math.ppas,808 :: 		
$03BD	$0F77			INCFSZ	STACK_7, W
;math.ppas,809 :: 		
$03BE	$02FB			SUBWF	STACK_11, F
;math.ppas,811 :: 		
$03BF	$2BCD			GOTO	SOK22L24
;math.ppas,812 :: 		
$03C0	$	SADD22L24:
;math.ppas,813 :: 		
$03C0	$07F8			ADDWF	STACK_8, F
;math.ppas,814 :: 		
$03C1	$0875			MOVF	STACK_5, W
;math.ppas,815 :: 		
$03C2	$1803			BTFSC	STATUS, C
;math.ppas,816 :: 		
$03C3	$0F75			INCFSZ	STACK_5, W
;math.ppas,817 :: 		
$03C4	$07F9			ADDWF	STACK_9, F
;math.ppas,818 :: 		
$03C5	$0876			MOVF	STACK_6, W
;math.ppas,819 :: 		
$03C6	$1803			BTFSC	STATUS, C
;math.ppas,820 :: 		
$03C7	$0F76			INCFSZ	STACK_6, W
;math.ppas,821 :: 		
$03C8	$07FA			ADDWF	STACK_10, F
;math.ppas,822 :: 		
$03C9	$0877			MOVF	STACK_7, W
;math.ppas,823 :: 		
$03CA	$1803			BTFSC	STATUS, C
;math.ppas,824 :: 		
$03CB	$0F77			INCFSZ	STACK_7, W
;math.ppas,826 :: 		
$03CC	$07FB			ADDWF	STACK_11, F
;math.ppas,827 :: 		
$03CD	$	SOK22L24:
;math.ppas,829 :: 		
$03CD	$0DF0			RLF	STACK_0, F
;math.ppas,830 :: 		
$03CE	$3007			MOVLW	7
;math.ppas,832 :: 		
$03CF	$00FC			MOVWF	STACK_12
;math.ppas,833 :: 		
$03D0	$	LOOPS3232D:
;math.ppas,834 :: 		
$03D0	$0D70			RLF	STACK_0, W
;math.ppas,835 :: 		
$03D1	$0DF8			RLF	STACK_8, F
;math.ppas,836 :: 		
$03D2	$0DF9			RLF	STACK_9, F
;math.ppas,837 :: 		
$03D3	$0DFA			RLF	STACK_10, F
;math.ppas,838 :: 		
$03D4	$0DFB			RLF	STACK_11, F
;math.ppas,839 :: 		
$03D5	$0874			MOVF	STACK_4, W
;math.ppas,840 :: 		
$03D6	$1C70			BTFSS	STACK_0, 0
;math.ppas,842 :: 		
$03D7	$2BE6			GOTO	SADD22LD
;math.ppas,843 :: 		
$03D8	$02F8			SUBWF	STACK_8, F
;math.ppas,844 :: 		
$03D9	$0875			MOVF	STACK_5, W
;math.ppas,845 :: 		
$03DA	$1C03			BTFSS	STATUS, C
;math.ppas,846 :: 		
$03DB	$0F75			INCFSZ	STACK_5, W
;math.ppas,847 :: 		
$03DC	$02F9			SUBWF	STACK_9, F
;math.ppas,848 :: 		
$03DD	$0876			MOVF	STACK_6, W
;math.ppas,849 :: 		
$03DE	$1C03			BTFSS	STATUS, C
;math.ppas,850 :: 		
$03DF	$0F76			INCFSZ	STACK_6, W
;math.ppas,851 :: 		
$03E0	$02FA			SUBWF	STACK_10, F
;math.ppas,852 :: 		
$03E1	$0877			MOVF	STACK_7, W
;math.ppas,853 :: 		
$03E2	$1C03			BTFSS	STATUS, C
;math.ppas,854 :: 		
$03E3	$0F77			INCFSZ	STACK_7, W
;math.ppas,855 :: 		
$03E4	$02FB			SUBWF	STACK_11, F
;math.ppas,857 :: 		
$03E5	$2BF3			GOTO	SOK22LD
;math.ppas,858 :: 		
$03E6	$	SADD22LD:
;math.ppas,859 :: 		
$03E6	$07F8			ADDWF	STACK_8, F
;math.ppas,860 :: 		
$03E7	$0875			MOVF	STACK_5, W
;math.ppas,861 :: 		
$03E8	$1803			BTFSC	STATUS, C
;math.ppas,862 :: 		
$03E9	$0F75			INCFSZ	STACK_5, W
;math.ppas,863 :: 		
$03EA	$07F9			ADDWF	STACK_9, F
;math.ppas,864 :: 		
$03EB	$0876			MOVF	STACK_6, W
;math.ppas,865 :: 		
$03EC	$1803			BTFSC	STATUS, C
;math.ppas,866 :: 		
$03ED	$0F76			INCFSZ	STACK_6, W
;math.ppas,867 :: 		
$03EE	$07FA			ADDWF	STACK_10, F
;math.ppas,868 :: 		
$03EF	$0877			MOVF	STACK_7, W
;math.ppas,870 :: 		
$03F0	$1803			BTFSC	STATUS, C
;math.ppas,871 :: 		
$03F1	$0F77			INCFSZ	STACK_7, W
;math.ppas,873 :: 		
$03F2	$07FB			ADDWF	STACK_11, F
;math.ppas,874 :: 		
$03F3	$	SOK22LD:
;math.ppas,876 :: 		
$03F3	$0DF0			RLF	STACK_0, F
;math.ppas,877 :: 		
$03F4	$0BFC			DECFSZ	STACK_12, F
;math.ppas,879 :: 		
$03F5	$2BD0			GOTO	LOOPS3232D
;math.ppas,880 :: 		
$03F6	$1870			BTFSC	STACK_0, 0
;math.ppas,881 :: 		
$03F7	$2C06			GOTO	SOK22L
;math.ppas,882 :: 		
$03F8	$0874			MOVF	STACK_4, W
;math.ppas,883 :: 		
$03F9	$07F8			ADDWF	STACK_8, F
;math.ppas,884 :: 		
$03FA	$0875			MOVF	STACK_5, W
;math.ppas,885 :: 		
$03FB	$1803			BTFSC	STATUS, C
;math.ppas,886 :: 		
$03FC	$0F75			INCFSZ	STACK_5, W
;math.ppas,887 :: 		
$03FD	$07F9			ADDWF	STACK_9, F
;math.ppas,888 :: 		
$03FE	$0876			MOVF	STACK_6, W
;math.ppas,889 :: 		
$03FF	$1803			BTFSC	STATUS, C
;math.ppas,890 :: 		
$0400	$0F76			INCFSZ	STACK_6, W
;math.ppas,891 :: 		
$0401	$07FA			ADDWF	STACK_10, F
;math.ppas,892 :: 		
$0402	$0877			MOVF	STACK_7, W
;math.ppas,893 :: 		
$0403	$1803			BTFSC	STATUS, C
;math.ppas,894 :: 		
$0404	$0F77			INCFSZ	STACK_7, W
;math.ppas,895 :: 		
$0405	$07FB			ADDWF	STACK_11, F
;math.ppas,896 :: 		
$0406	$	SOK22L:
;math.ppas,897 :: 		
$0406	$	math_L_9:
;math.ppas,898 :: 		
$0406	$0008			RETURN
$08A4	$	_comfrem:
$08A4	$1303			BCF	STATUS, RP1
$08A5	$1283			BCF	STATUS, RP0
;math.ppas,901 :: 		
;math.ppas,903 :: 		
$08A6	$09FB			COMF	STACK_11, F
;math.ppas,904 :: 		
$08A7	$09FA			COMF	STACK_10, F
;math.ppas,905 :: 		
$08A8	$09F9			COMF	STACK_9, F
;math.ppas,906 :: 		
$08A9	$09F8			COMF	STACK_8, F
;math.ppas,907 :: 		
$08AA	$0AF8			INCF	STACK_8, F
;math.ppas,908 :: 		
$08AB	$1903			BTFSC	STATUS, Z
;math.ppas,909 :: 		
$08AC	$0AF9			INCF	STACK_9, F
;math.ppas,910 :: 		
$08AD	$1903			BTFSC	STATUS, Z
;math.ppas,911 :: 		
$08AE	$0AFA			INCF	STACK_10, F
;math.ppas,912 :: 		
$08AF	$1903			BTFSC	STATUS, Z
;math.ppas,913 :: 		
$08B0	$0AFB			INCF	STACK_11, F
;math.ppas,914 :: 		
$08B1	$	math_L_10:
;math.ppas,915 :: 		
$08B1	$0008			RETURN
$08B2	$	_usart_data_ready:
;USART_c67.ppas,48 :: 		
;USART_c67.ppas,50 :: 		
$08B2	$1303			BCF	STATUS, RP1
$08B3	$1283			BCF	STATUS, RP0
$08B4	$080C			MOVF	PIR1, 0
$08B5	$00F1			MOVWF	STACK_1
$08B6	$3000			MOVLW	0
$08B7	$1AF1			BTFSC	STACK_1, 5
$08B8	$3001			MOVLW	1
$08B9	$00F1			MOVWF	STACK_1
$08BA	$0871			MOVF	STACK_1, 0
$08BB	$00C7			MOVWF	_usart_data_ready_local_result
$08BC	$	USART_c67_L_18:
;USART_c67.ppas,51 :: 		
$08BC	$0847			MOVF	_usart_data_ready_local_result, 0
$08BD	$00F0			MOVWF	STACK_0
$08BE	$0008			RETURN
$087F	$	_usart_read:
;USART_c67.ppas,54 :: 		
;USART_c67.ppas,55 :: 		
$087F	$1303			BCF	STATUS, RP1
$0880	$1283			BCF	STATUS, RP0
$0881	$081A			MOVF	RCREG, 0
$0882	$00C7			MOVWF	_usart_read_local_result
;USART_c67.ppas,61 :: 		
$0883	$0818			MOVF	RCSTA, 0
$0884	$00F1			MOVWF	STACK_1
$0885	$3000			MOVLW	0
$0886	$18F1			BTFSC	STACK_1, 1
$0887	$3001			MOVLW	1
$0888	$00F1			MOVWF	STACK_1
$0889	$0871			MOVF	STACK_1, 0
$088A	$3A01			XORLW	1
$088B	$1D03			BTFSS	STATUS, Z
$088C	$288F			GOTO	USART_c67_L_21
$088D	$	USART_c67_L_20:
;USART_c67.ppas,63 :: 		
$088D	$1218			BCF	RCSTA, 4
$088E	$	USART_c67_L_24:
;USART_c67.ppas,64 :: 		
$088E	$	USART_c67_L_25:
$088E	$1618			BSF	RCSTA, 4
$088F	$	USART_c67_L_26:
;USART_c67.ppas,65 :: 		
$088F	$	USART_c67_L_21:
$088F	$	USART_c67_L_22:
$088F	$	USART_c67_L_19:
;USART_c67.ppas,66 :: 		
$088F	$0847			MOVF	_usart_read_local_result, 0
$0890	$00F0			MOVWF	STACK_0
$0891	$0008			RETURN
$0653	$	_mul_32x32_s:
$0653	$1303			BCF	STATUS, RP1
$0654	$1283			BCF	STATUS, RP0
;math.ppas,1675 :: 		
;math.ppas,1680 :: 		
$0655	$01FD			CLRF	STACK_13
;math.ppas,1683 :: 		
$0656	$	_IF_FIRST:
;math.ppas,1684 :: 		
$0656	$1FF3			BTFSS	STACK_3, 7
;math.ppas,1686 :: 		
$0657	$2E65			GOTO	_IF_SECOND
;math.ppas,1691 :: 		
$0658	$	_INVERCE_FIRST:
;math.ppas,1692 :: 		
$0658	$09F0			COMF	STACK_0, F
;math.ppas,1693 :: 		
$0659	$09F1			COMF	STACK_1, F
;math.ppas,1694 :: 		
$065A	$09F2			COMF	STACK_2, F
;math.ppas,1701 :: 		
$065B	$09F3			COMF	STACK_3, F
;math.ppas,1702 :: 		
$065C	$0AF0			INCF	STACK_0, F
;math.ppas,1703 :: 		
$065D	$1903			BTFSC	STATUS, Z
;math.ppas,1704 :: 		
$065E	$0AF1			INCF	STACK_1, F
;math.ppas,1705 :: 		
$065F	$1903			BTFSC	STATUS, Z
;math.ppas,1706 :: 		
$0660	$0AF2			INCF	STACK_2, F
;math.ppas,1707 :: 		
$0661	$1903			BTFSC	STATUS, Z
;math.ppas,1708 :: 		
$0662	$0AF3			INCF	STACK_3, F
;math.ppas,1709 :: 		
$0663	$3081			MOVLW	129
;math.ppas,1711 :: 		
$0664	$07FD			ADDWF	STACK_13, F
;math.ppas,1714 :: 		
$0665	$	_IF_SECOND:
;math.ppas,1715 :: 		
$0665	$1FF7			BTFSS	STACK_7, 7
;math.ppas,1717 :: 		
$0666	$2E73			GOTO	_MULT
;math.ppas,1722 :: 		
$0667	$	_INBERSE_SECOND:
;math.ppas,1723 :: 		
$0667	$09F4			COMF	STACK_4, F
;math.ppas,1724 :: 		
$0668	$09F5			COMF	STACK_5, F
;math.ppas,1725 :: 		
$0669	$09F6			COMF	STACK_6, F
;math.ppas,1732 :: 		
$066A	$09F7			COMF	STACK_7, F
;math.ppas,1733 :: 		
$066B	$0AF4			INCF	STACK_4, F
;math.ppas,1734 :: 		
$066C	$1903			BTFSC	STATUS, Z
;math.ppas,1735 :: 		
$066D	$0AF5			INCF	STACK_5, F
;math.ppas,1736 :: 		
$066E	$1903			BTFSC	STATUS, Z
;math.ppas,1737 :: 		
$066F	$0AF6			INCF	STACK_6, F
;math.ppas,1738 :: 		
$0670	$1903			BTFSC	STATUS, Z
;math.ppas,1739 :: 		
$0671	$0AF7			INCF	STACK_7, F
;math.ppas,1741 :: 		
$0672	$0AFD			INCF	STACK_13, F
;math.ppas,1742 :: 		
$0673	$	_MULT:
;math.ppas,1744 :: 		
$0673	$26CA			CALL	_mul_32x32_u
;math.ppas,1748 :: 		
$0674	$1C7D			BTFSS	STACK_13, 0
;math.ppas,1754 :: 		
$0675	$2E8D			GOTO	_EXIT
;math.ppas,1755 :: 		
$0676	$09F0			COMF	STACK_0, F
;math.ppas,1756 :: 		
$0677	$09F1			COMF	STACK_1, F
;math.ppas,1757 :: 		
$0678	$09F2			COMF	STACK_2, F
;math.ppas,1763 :: 		
$0679	$09F3			COMF	STACK_3, F
;math.ppas,1764 :: 		
$067A	$09F8			COMF	STACK_8, F
;math.ppas,1765 :: 		
$067B	$09F9			COMF	STACK_9, F
;math.ppas,1766 :: 		
$067C	$09FA			COMF	STACK_10, F
;math.ppas,1776 :: 		
$067D	$09FB			COMF	STACK_11, F
;math.ppas,1777 :: 		
$067E	$0AF0			INCF	STACK_0, F
;math.ppas,1778 :: 		
$067F	$1903			BTFSC	STATUS, Z
;math.ppas,1779 :: 		
$0680	$0AF1			INCF	STACK_1, F
;math.ppas,1780 :: 		
$0681	$1903			BTFSC	STATUS, Z
;math.ppas,1781 :: 		
$0682	$0AF2			INCF	STACK_2, F
;math.ppas,1782 :: 		
$0683	$1903			BTFSC	STATUS, Z
;math.ppas,1783 :: 		
$0684	$0AF3			INCF	STACK_3, F
;math.ppas,1784 :: 		
$0685	$1903			BTFSC	STATUS, Z
;math.ppas,1785 :: 		
$0686	$0AF8			INCF	STACK_8, F
;math.ppas,1786 :: 		
$0687	$1903			BTFSC	STATUS, Z
;math.ppas,1787 :: 		
$0688	$0AF9			INCF	STACK_9, F
;math.ppas,1788 :: 		
$0689	$1903			BTFSC	STATUS, Z
;math.ppas,1789 :: 		
$068A	$0AFA			INCF	STACK_10, F
;math.ppas,1790 :: 		
$068B	$1903			BTFSC	STATUS, Z
;math.ppas,1791 :: 		
$068C	$0AFB			INCF	STACK_11, F
;math.ppas,1792 :: 		
$068D	$	_EXIT:
;math.ppas,1793 :: 		
$068D	$	math_L_14:
;math.ppas,1794 :: 		
$068D	$0008			RETURN
$084C	$	_div_16x16_u:
$084C	$1303			BCF	STATUS, RP1
$084D	$1283			BCF	STATUS, RP0
;math.ppas,108 :: 		
;math.ppas,110 :: 		
$084E	$01F8			CLRF	STACK_8
;math.ppas,111 :: 		
$084F	$01F9			CLRF	STACK_9
;math.ppas,112 :: 		
$0850	$3010			MOVLW	16
;math.ppas,113 :: 		
$0851	$00FC			MOVWF	STACK_12
;math.ppas,114 :: 		
$0852	$0D71			RLF	STACK_1, W
;math.ppas,115 :: 		
$0853	$0DF8			RLF	STACK_8, F
;math.ppas,116 :: 		
$0854	$0DF9			RLF	STACK_9, F
;math.ppas,117 :: 		
$0855	$0874			MOVF	STACK_4, W
;math.ppas,118 :: 		
$0856	$02F8			SUBWF	STACK_8, F
;math.ppas,119 :: 		
$0857	$0875			MOVF	STACK_5, W
;math.ppas,120 :: 		
$0858	$1C03			BTFSS	STATUS, C
;math.ppas,121 :: 		
$0859	$0F75			INCFSZ	STACK_5, W
;math.ppas,122 :: 		
$085A	$02F9			SUBWF	STACK_9, F
;math.ppas,123 :: 		
$085B	$1803			BTFSC	STATUS, C
;math.ppas,124 :: 		
$085C	$2864			GOTO	$+8
;math.ppas,125 :: 		
$085D	$0874			MOVF	STACK_4, W
;math.ppas,126 :: 		
$085E	$07F8			ADDWF	STACK_8, F
;math.ppas,127 :: 		
$085F	$0875			MOVF	STACK_5, W
;math.ppas,128 :: 		
$0860	$1803			BTFSC	STATUS, C
;math.ppas,129 :: 		
$0861	$0F75			INCFSZ	STACK_5, W
;math.ppas,130 :: 		
$0862	$07F9			ADDWF	STACK_9, F
;math.ppas,131 :: 		
$0863	$1003			BCF	STATUS, C
;math.ppas,132 :: 		
$0864	$0DF0			RLF	STACK_0, F
;math.ppas,133 :: 		
$0865	$0DF1			RLF	STACK_1, F
;math.ppas,134 :: 		
$0866	$0BFC			DECFSZ	STACK_12, F
;math.ppas,135 :: 		
$0867	$2852			GOTO	$-21
;math.ppas,136 :: 		
$0868	$	math_L_3:
;math.ppas,137 :: 		
$0868	$0008			RETURN
$04CB	$	_div_32x32_s:
$04CB	$1303			BCF	STATUS, RP1
$04CC	$1283			BCF	STATUS, RP0
;math.ppas,925 :: 		
;math.ppas,928 :: 		
$04CD	$	FXD3232S:
;math.ppas,929 :: 		
$04CD	$01FC			CLRF	STACK_12
;math.ppas,930 :: 		
$04CE	$1BF7			BTFSC	STACK_7, 7
;math.ppas,932 :: 		
$04CF	$0AFC			INCF	STACK_12, F
;math.ppas,933 :: 		
$04D0	$01FD			CLRF	STACK_13
;math.ppas,934 :: 		
$04D1	$01FB			CLRF	STACK_11
;math.ppas,935 :: 		
$04D2	$01FA			CLRF	STACK_10
;math.ppas,936 :: 		
$04D3	$01F9			CLRF	STACK_9
;math.ppas,937 :: 		
$04D4	$01F8			CLRF	STACK_8
;math.ppas,938 :: 		
$04D5	$0873			MOVF	STACK_3, W
;math.ppas,939 :: 		
$04D6	$0472			IORWF	STACK_2, W
;math.ppas,940 :: 		
$04D7	$0471			IORWF	STACK_1, W
;math.ppas,941 :: 		
$04D8	$0470			IORWF	STACK_0, W
;math.ppas,942 :: 		
$04D9	$1903			BTFSC	STATUS, Z
;math.ppas,943 :: 		
$04DA	$2D5F			GOTO	END_ALL
;math.ppas,944 :: 		
$04DB	$0873			MOVF	STACK_3, W
;math.ppas,945 :: 		
$04DC	$0677			XORWF	STACK_7, W
;math.ppas,946 :: 		
$04DD	$00A0			MOVWF	MATH___MATH_TEMPB
;math.ppas,947 :: 		
$04DE	$1BA0			BTFSC	MATH___MATH_TEMPB, 7
;math.ppas,951 :: 		
$04DF	$09FD			COMF	STACK_13, F
;math.ppas,952 :: 		
$04E0	$1FF7			BTFSS	STACK_7, 7
;math.ppas,954 :: 		
$04E1	$2CED			GOTO	CA3232S
;math.ppas,955 :: 		
$04E2	$09F4			COMF	STACK_4, F
;math.ppas,956 :: 		
$04E3	$09F5			COMF	STACK_5, F
;math.ppas,957 :: 		
$04E4	$09F6			COMF	STACK_6, F
;math.ppas,958 :: 		
$04E5	$09F7			COMF	STACK_7, F
;math.ppas,959 :: 		
$04E6	$0AF4			INCF	STACK_4, F
;math.ppas,960 :: 		
$04E7	$1903			BTFSC	STATUS, Z
;math.ppas,961 :: 		
$04E8	$0AF5			INCF	STACK_5, F
;math.ppas,962 :: 		
$04E9	$1903			BTFSC	STATUS, Z
;math.ppas,963 :: 		
$04EA	$0AF6			INCF	STACK_6, F
;math.ppas,964 :: 		
$04EB	$1903			BTFSC	STATUS, Z
;math.ppas,966 :: 		
$04EC	$0AF7			INCF	STACK_7, F
;math.ppas,967 :: 		
$04ED	$	CA3232S:
;math.ppas,968 :: 		
$04ED	$1FF3			BTFSS	STACK_3, 7
;math.ppas,970 :: 		
$04EE	$2CFA			GOTO	C3232SX
;math.ppas,971 :: 		
$04EF	$09F0			COMF	STACK_0, F
;math.ppas,972 :: 		
$04F0	$09F1			COMF	STACK_1, F
;math.ppas,973 :: 		
$04F1	$09F2			COMF	STACK_2, F
;math.ppas,974 :: 		
$04F2	$09F3			COMF	STACK_3, F
;math.ppas,975 :: 		
$04F3	$0AF0			INCF	STACK_0, F
;math.ppas,976 :: 		
$04F4	$1903			BTFSC	STATUS, Z
;math.ppas,977 :: 		
$04F5	$0AF1			INCF	STACK_1, F
;math.ppas,978 :: 		
$04F6	$1903			BTFSC	STATUS, Z
;math.ppas,979 :: 		
$04F7	$0AF2			INCF	STACK_2, F
;math.ppas,980 :: 		
$04F8	$1903			BTFSC	STATUS, Z
;math.ppas,982 :: 		
$04F9	$0AF3			INCF	STACK_3, F
;math.ppas,983 :: 		
$04FA	$	C3232SX:
;math.ppas,984 :: 		
$04FA	$0873			MOVF	STACK_3, W
;math.ppas,985 :: 		
$04FB	$0477			IORWF	STACK_7, W
;math.ppas,986 :: 		
$04FC	$00A0			MOVWF	MATH___MATH_TEMPB
;math.ppas,987 :: 		
$04FD	$1BA0			BTFSC	MATH___MATH_TEMPB, 7
;math.ppas,988 :: 		
$04FE	$2D1B			GOTO	C3232SX1
;math.ppas,989 :: 		
$04FF	$	C3232S:
;math.ppas,992 :: 		
$04FF	$22D9			CALL	_sdiv3232l
;math.ppas,995 :: 		
$0500	$	C3232S2:
;math.ppas,996 :: 		
$0500	$1BFC			BTFSC	STACK_12, 7
;math.ppas,997 :: 		
$0501	$2D38			GOTO	C3232SX4
;math.ppas,998 :: 		
$0502	$	C3232SOK:
;math.ppas,999 :: 		
$0502	$1FFD			BTFSS	STACK_13, 7
;math.ppas,1000 :: 		
$0503	$2D5F			GOTO	END_ALL
;math.ppas,1001 :: 		
$0504	$09F0			COMF	STACK_0, F
;math.ppas,1002 :: 		
$0505	$09F1			COMF	STACK_1, F
;math.ppas,1003 :: 		
$0506	$09F2			COMF	STACK_2, F
;math.ppas,1004 :: 		
$0507	$09F3			COMF	STACK_3, F
;math.ppas,1005 :: 		
$0508	$0AF0			INCF	STACK_0, F
;math.ppas,1006 :: 		
$0509	$1903			BTFSC	STATUS, Z
;math.ppas,1007 :: 		
$050A	$0AF1			INCF	STACK_1, F
;math.ppas,1008 :: 		
$050B	$1903			BTFSC	STATUS, Z
;math.ppas,1009 :: 		
$050C	$0AF2			INCF	STACK_2, F
;math.ppas,1010 :: 		
$050D	$1903			BTFSC	STATUS, Z
;math.ppas,1012 :: 		
$050E	$0AF3			INCF	STACK_3, F
;math.ppas,1013 :: 		
$050F	$09F8			COMF	STACK_8, F
;math.ppas,1014 :: 		
$0510	$09F9			COMF	STACK_9, F
;math.ppas,1015 :: 		
$0511	$09FA			COMF	STACK_10, F
;math.ppas,1016 :: 		
$0512	$09FB			COMF	STACK_11, F
;math.ppas,1017 :: 		
$0513	$0AF8			INCF	STACK_8, F
;math.ppas,1018 :: 		
$0514	$1903			BTFSC	STATUS, Z
;math.ppas,1019 :: 		
$0515	$0AF9			INCF	STACK_9, F
;math.ppas,1020 :: 		
$0516	$1903			BTFSC	STATUS, Z
;math.ppas,1021 :: 		
$0517	$0AFA			INCF	STACK_10, F
;math.ppas,1022 :: 		
$0518	$1903			BTFSC	STATUS, Z
;math.ppas,1024 :: 		
$0519	$0AFB			INCF	STACK_11, F
;math.ppas,1025 :: 		
$051A	$2D5F			GOTO	END_ALL
;math.ppas,1026 :: 		
$051B	$	C3232SX1:
;math.ppas,1027 :: 		
$051B	$1FF7			BTFSS	STACK_7, 7
;math.ppas,1028 :: 		
$051C	$2D32			GOTO	C3232SX3
;math.ppas,1029 :: 		
$051D	$1BF3			BTFSC	STACK_3, 7
;math.ppas,1030 :: 		
$051E	$2D2C			GOTO	C3232SX2
;math.ppas,1031 :: 		
$051F	$0873			MOVF	STACK_3, W
;math.ppas,1032 :: 		
$0520	$00FB			MOVWF	STACK_11
;math.ppas,1033 :: 		
$0521	$0872			MOVF	STACK_2, W
;math.ppas,1034 :: 		
$0522	$00FA			MOVWF	STACK_10
;math.ppas,1035 :: 		
$0523	$0871			MOVF	STACK_1, W
;math.ppas,1036 :: 		
$0524	$00F9			MOVWF	STACK_9
;math.ppas,1037 :: 		
$0525	$0870			MOVF	STACK_0, W
;math.ppas,1038 :: 		
$0526	$00F8			MOVWF	STACK_8
;math.ppas,1039 :: 		
$0527	$01F3			CLRF	STACK_3
;math.ppas,1040 :: 		
$0528	$01F2			CLRF	STACK_2
;math.ppas,1041 :: 		
$0529	$01F1			CLRF	STACK_1
;math.ppas,1042 :: 		
$052A	$01F0			CLRF	STACK_0
;math.ppas,1043 :: 		
$052B	$2D02			GOTO	C3232SOK
;math.ppas,1044 :: 		
$052C	$	C3232SX2:
;math.ppas,1045 :: 		
$052C	$01F3			CLRF	STACK_3
;math.ppas,1046 :: 		
$052D	$01F2			CLRF	STACK_2
;math.ppas,1047 :: 		
$052E	$01F1			CLRF	STACK_1
;math.ppas,1048 :: 		
$052F	$01F0			CLRF	STACK_0
;math.ppas,1049 :: 		
$0530	$0AF0			INCF	STACK_0, F
;math.ppas,1051 :: 		
$0531	$3400			RETLW	0X00
;math.ppas,1052 :: 		
$0532	$	C3232SX3:
;math.ppas,1053 :: 		
$0532	$09F3			COMF	STACK_3, F
;math.ppas,1054 :: 		
$0533	$09F2			COMF	STACK_2, F
;math.ppas,1055 :: 		
$0534	$09F1			COMF	STACK_1, F
;math.ppas,1057 :: 		
$0535	$09F0			COMF	STACK_0, F
;math.ppas,1059 :: 		
$0536	$17FC			BSF	STACK_12, 7
;math.ppas,1060 :: 		
$0537	$2CFF			GOTO	C3232S
;math.ppas,1061 :: 		
$0538	$	C3232SX4:
;math.ppas,1062 :: 		
$0538	$0AF8			INCF	STACK_8, F
;math.ppas,1063 :: 		
$0539	$1903			BTFSC	STATUS, Z
;math.ppas,1064 :: 		
$053A	$0AF9			INCF	STACK_9, F
;math.ppas,1065 :: 		
$053B	$1903			BTFSC	STATUS, Z
;math.ppas,1066 :: 		
$053C	$0AFA			INCF	STACK_10, F
;math.ppas,1067 :: 		
$053D	$1903			BTFSC	STATUS, Z
;math.ppas,1068 :: 		
$053E	$0AFB			INCF	STACK_11, F
;math.ppas,1069 :: 		
$053F	$0874			MOVF	STACK_4, W
;math.ppas,1070 :: 		
$0540	$0278			SUBWF	STACK_8, W
;math.ppas,1071 :: 		
$0541	$1D03			BTFSS	STATUS, Z
;math.ppas,1072 :: 		
$0542	$2D02			GOTO	C3232SOK
;math.ppas,1073 :: 		
$0543	$0875			MOVF	STACK_5, W
;math.ppas,1074 :: 		
$0544	$0279			SUBWF	STACK_9, W
;math.ppas,1075 :: 		
$0545	$1D03			BTFSS	STATUS, Z
;math.ppas,1076 :: 		
$0546	$2D02			GOTO	C3232SOK
;math.ppas,1077 :: 		
$0547	$0876			MOVF	STACK_6, W
;math.ppas,1078 :: 		
$0548	$027A			SUBWF	STACK_10, W
;math.ppas,1079 :: 		
$0549	$1D03			BTFSS	STATUS, Z
;math.ppas,1080 :: 		
$054A	$2D02			GOTO	C3232SOK
;math.ppas,1081 :: 		
$054B	$0877			MOVF	STACK_7, W
;math.ppas,1082 :: 		
$054C	$027B			SUBWF	STACK_11, W
;math.ppas,1083 :: 		
$054D	$1D03			BTFSS	STATUS, Z
;math.ppas,1084 :: 		
$054E	$2D02			GOTO	C3232SOK
;math.ppas,1085 :: 		
$054F	$01FB			CLRF	STACK_11
;math.ppas,1086 :: 		
$0550	$01FA			CLRF	STACK_10
;math.ppas,1087 :: 		
$0551	$01F9			CLRF	STACK_9
;math.ppas,1088 :: 		
$0552	$01F8			CLRF	STACK_8
;math.ppas,1089 :: 		
$0553	$0AF0			INCF	STACK_0, F
;math.ppas,1090 :: 		
$0554	$1903			BTFSC	STATUS, Z
;math.ppas,1091 :: 		
$0555	$0AF1			INCF	STACK_1, F
;math.ppas,1092 :: 		
$0556	$1903			BTFSC	STATUS, Z
;math.ppas,1093 :: 		
$0557	$0AF2			INCF	STACK_2, F
;math.ppas,1094 :: 		
$0558	$1903			BTFSC	STATUS, Z
;math.ppas,1095 :: 		
$0559	$0AF3			INCF	STACK_3, F
;math.ppas,1096 :: 		
$055A	$1FF3			BTFSS	STACK_3, 7
;math.ppas,1097 :: 		
$055B	$2D02			GOTO	C3232SOK
;math.ppas,1098 :: 		
$055C	$01A0			CLRF	MATH___MATH_TEMPB
;math.ppas,1099 :: 		
$055D	$1620			BSF	MATH___MATH_TEMPB, 4
;math.ppas,1100 :: 		
$055E	$34FF			RETLW	0XFF
;math.ppas,1101 :: 		
$055F	$	END_ALL:
;math.ppas,1102 :: 		
$055F	$01A0			CLRF	MATH___MATH_TEMPB
;math.ppas,1103 :: 		
$0560	$1C7C			BTFSS	STACK_12, 0
;math.ppas,1104 :: 		
$0561	$2D65			GOTO	AVOID_COMFREM
;math.ppas,1106 :: 		
$0562	$158A			BSF	PCLATH, 3
$0563	$20A4			CALL	_comfrem
$0564	$118A			BCF	PCLATH, 3
;math.ppas,1108 :: 		
$0565	$	AVOID_COMFREM:
;math.ppas,1109 :: 		
$0565	$3F00			ADDLW	0X00
;math.ppas,1110 :: 		
$0566	$	math_L_11:
;math.ppas,1111 :: 		
$0566	$0008			RETURN
$0892	$	_usart_write:
;USART_c67.ppas,40 :: 		
;USART_c67.ppas,42 :: 		
$0892	$	USART_c67_L_14:
$0892	$1303			BCF	STATUS, RP1
$0893	$1683			BSF	STATUS, RP0
$0894	$0818			MOVF	TXSTA, 0
$0895	$00F1			MOVWF	STACK_1
$0896	$3000			MOVLW	0
$0897	$18F1			BTFSC	STACK_1, 1
$0898	$3001			MOVLW	1
$0899	$00F1			MOVWF	STACK_1
$089A	$0871			MOVF	STACK_1, 0
$089B	$3A00			XORLW	0
$089C	$1D03			BTFSS	STATUS, Z
$089D	$28A0			GOTO	USART_c67_L_15
;USART_c67.ppas,43 :: 		
$089E	$0000			NOP
$089F	$2892			GOTO	USART_c67_L_14
$08A0	$	USART_c67_L_15:
;USART_c67.ppas,44 :: 		
$08A0	$1283			BCF	STATUS, RP0
$08A1	$0847			MOVF	FARG_USART_Write, 0
$08A2	$0099			MOVWF	TXREG
$08A3	$	USART_c67_L_12:
;USART_c67.ppas,45 :: 		
$08A3	$0008			RETURN
$082D	$	_i2c_is_idle:
;I2C_c34.ppas,22 :: 		
;I2C_c34.ppas,23 :: 		
$082D	$1303			BCF	STATUS, RP1
$082E	$1283			BCF	STATUS, RP0
$082F	$01C7			CLRF	_i2c_is_idle_local_result, 1
;I2C_c34.ppas,24 :: 		
$0830	$1683			BSF	STATUS, RP0
$0831	$0814			MOVF	SSPSTAT, 0
$0832	$00F1			MOVWF	STACK_1
$0833	$3000			MOVLW	0
$0834	$1971			BTFSC	STACK_1, 2
$0835	$3001			MOVLW	1
$0836	$00F1			MOVWF	STACK_1
$0837	$0871			MOVF	STACK_1, 0
$0838	$3A00			XORLW	0
$0839	$1D03			BTFSS	STATUS, Z
$083A	$2845			GOTO	I2C_c34_L_11
$083B	$	I2C_c34_L_10:
;I2C_c34.ppas,25 :: 		
$083B	$301F			MOVLW	31
$083C	$0511			ANDWF	SSPCON2, 0
$083D	$00F1			MOVWF	STACK_1
$083E	$0871			MOVF	STACK_1, 0
$083F	$3A00			XORLW	0
$0840	$1D03			BTFSS	STATUS, Z
$0841	$2845			GOTO	I2C_c34_L_14
$0842	$	I2C_c34_L_13:
$0842	$30FF			MOVLW	255
$0843	$1283			BCF	STATUS, RP0
$0844	$00C7			MOVWF	_i2c_is_idle_local_result
$0845	$	I2C_c34_L_14:
$0845	$	I2C_c34_L_15:
$0845	$	I2C_c34_L_11:
$0845	$	I2C_c34_L_12:
$0845	$	I2C_c34_L_9:
;I2C_c34.ppas,26 :: 		
$0845	$1303			BCF	STATUS, RP1
$0846	$1283			BCF	STATUS, RP0
$0847	$1303			BCF	STATUS, RP1
$0848	$1283			BCF	STATUS, RP0
$0849	$0847			MOVF	_i2c_is_idle_local_result, 0
$084A	$00F0			MOVWF	STACK_0
$084B	$0008			RETURN
$0800	$	_div_16x16_s_l:
$0800	$1303			BCF	STATUS, RP1
$0801	$1283			BCF	STATUS, RP0
;math.ppas,291 :: 		
;math.ppas,293 :: 		
$0802	$0D71			RLF	STACK_1, W
;math.ppas,294 :: 		
$0803	$0DF8			RLF	STACK_8, F
;math.ppas,295 :: 		
$0804	$0DF9			RLF	STACK_9, F
;math.ppas,296 :: 		
$0805	$0874			MOVF	STACK_4, W
;math.ppas,297 :: 		
$0806	$02F8			SUBWF	STACK_8, F
;math.ppas,298 :: 		
$0807	$0875			MOVF	STACK_5, W
;math.ppas,299 :: 		
$0808	$1C03			BTFSS	STATUS, C
;math.ppas,300 :: 		
$0809	$0F75			INCFSZ	STACK_5, W
;math.ppas,301 :: 		
$080A	$02F9			SUBWF	STACK_9, F
;math.ppas,302 :: 		
$080B	$0DF0			RLF	STACK_0, F
;math.ppas,304 :: 		
$080C	$0DF1			RLF	STACK_1, F
;math.ppas,305 :: 		
$080D	$300F			MOVLW	15
;math.ppas,307 :: 		
$080E	$00FC			MOVWF	STACK_12
;math.ppas,308 :: 		
$080F	$0D71			RLF	STACK_1, W
;math.ppas,309 :: 		
$0810	$0DF8			RLF	STACK_8, F
;math.ppas,310 :: 		
$0811	$0DF9			RLF	STACK_9, F
;math.ppas,312 :: 		
$0812	$0874			MOVF	STACK_4, W
;math.ppas,313 :: 		
$0813	$1C70			BTFSS	STACK_0, 0
;math.ppas,314 :: 		
$0814	$281B			GOTO	$+7
;math.ppas,315 :: 		
$0815	$02F8			SUBWF	STACK_8, F
;math.ppas,316 :: 		
$0816	$0875			MOVF	STACK_5, W
;math.ppas,317 :: 		
$0817	$1C03			BTFSS	STATUS, C
;math.ppas,318 :: 		
$0818	$0F75			INCFSZ	STACK_5, W
;math.ppas,319 :: 		
$0819	$02F9			SUBWF	STACK_9, F
;math.ppas,321 :: 		
$081A	$2820			GOTO	$+6
;math.ppas,322 :: 		
$081B	$07F8			ADDWF	STACK_8, F
;math.ppas,323 :: 		
$081C	$0875			MOVF	STACK_5, W
;math.ppas,324 :: 		
$081D	$1803			BTFSC	STATUS, C
;math.ppas,325 :: 		
$081E	$0F75			INCFSZ	STACK_5, W
;math.ppas,327 :: 		
$081F	$07F9			ADDWF	STACK_9, F
;math.ppas,328 :: 		
$0820	$0DF0			RLF	STACK_0, F
;math.ppas,330 :: 		
$0821	$0DF1			RLF	STACK_1, F
;math.ppas,331 :: 		
$0822	$0BFC			DECFSZ	STACK_12, F
;math.ppas,333 :: 		
$0823	$280F			GOTO	$-20
;math.ppas,334 :: 		
$0824	$1870			BTFSC	STACK_0, 0
;math.ppas,335 :: 		
$0825	$282C			GOTO	$+7
;math.ppas,336 :: 		
$0826	$0874			MOVF	STACK_4, W
;math.ppas,337 :: 		
$0827	$07F8			ADDWF	STACK_8, F
;math.ppas,338 :: 		
$0828	$0875			MOVF	STACK_5, W
;math.ppas,339 :: 		
$0829	$1803			BTFSC	STATUS, C
;math.ppas,340 :: 		
$082A	$0F75			INCFSZ	STACK_5, W
;math.ppas,341 :: 		
$082B	$07F9			ADDWF	STACK_9, F
;math.ppas,342 :: 		
$082C	$	math_L_6:
;math.ppas,343 :: 		
$082C	$0008			RETURN
$05C3	$	_usart_read_text:
;USART_c67.ppas,78 :: 		
;USART_c67.ppas,79 :: 		
$05C3	$1303			BCF	STATUS, RP1
$05C4	$1283			BCF	STATUS, RP0
$05C5	$01BC			CLRF	_usart_read_text_local_i, 1
;USART_c67.ppas,80 :: 		
$05C6	$01BD			CLRF	_usart_read_text_local_j, 1
;USART_c67.ppas,81 :: 		
$05C7	$01C0			CLRF	_usart_read_text_local_lasti, 1
;USART_c67.ppas,82 :: 		
$05C8	$083B			MOVF	FARG_Usart_Read_Text+1, 0
$05C9	$0084			MOVWF	FSR
$05CA	$0800			MOVF	INDF, 0
$05CB	$00BF			MOVWF	_usart_read_text_local_data2
;USART_c67.ppas,83 :: 		
$05CC	$	USART_c67_L_29:
;USART_c67.ppas,85 :: 		
$05CC	$158A			BSF	PCLATH, 3
$05CD	$20B2			CALL	_usart_data_ready
$05CE	$118A			BCF	PCLATH, 3
$05CF	$0870			MOVF	STACK_0, 0
$05D0	$3A00			XORLW	0
$05D1	$1903			BTFSC	STATUS, Z
$05D2	$2E00			GOTO	USART_c67_L_34
$05D3	$	USART_c67_L_33:
;USART_c67.ppas,87 :: 		
$05D3	$158A			BSF	PCLATH, 3
$05D4	$207F			CALL	_usart_read
$05D5	$118A			BCF	PCLATH, 3
$05D6	$0870			MOVF	STACK_0, 0
$05D7	$00BE			MOVWF	_usart_read_text_local_data
;USART_c67.ppas,88 :: 		
$05D8	$083C			MOVF	_usart_read_text_local_i, 0
$05D9	$073A			ADDWF	FARG_Usart_Read_Text, 0
$05DA	$00F1			MOVWF	STACK_1
$05DB	$0871			MOVF	STACK_1, 0
$05DC	$0084			MOVWF	FSR
$05DD	$0871			MOVF	STACK_1, 0
$05DE	$0084			MOVWF	FSR
$05DF	$0870			MOVF	STACK_0, 0
$05E0	$0080			MOVWF	INDF
;USART_c67.ppas,89 :: 		
$05E1	$083E			MOVF	_usart_read_text_local_data, 0
$05E2	$063F			XORWF	_usart_read_text_local_data2, 0
$05E3	$1D03			BTFSS	STATUS, Z
$05E4	$2DEA			GOTO	USART_c67_L_37
$05E5	$	USART_c67_L_36:
;USART_c67.ppas,91 :: 		
$05E5	$083D			MOVF	_usart_read_text_local_j, 0
$05E6	$023C			SUBWF	_usart_read_text_local_i, 0
$05E7	$00C0			MOVWF	_usart_read_text_local_lasti
;USART_c67.ppas,92 :: 		
$05E8	$0ABD			INCF	_usart_read_text_local_j, 1
;USART_c67.ppas,93 :: 		
$05E9	$2DEC			GOTO	USART_c67_L_38
;USART_c67.ppas,94 :: 		
$05EA	$	USART_c67_L_37:
;USART_c67.ppas,96 :: 		
$05EA	$01BD			CLRF	_usart_read_text_local_j, 1
;USART_c67.ppas,97 :: 		
$05EB	$01C0			CLRF	_usart_read_text_local_lasti, 1
;USART_c67.ppas,98 :: 		
$05EC	$	USART_c67_L_38:
;USART_c67.ppas,100 :: 		
$05EC	$083D			MOVF	_usart_read_text_local_j, 0
$05ED	$073B			ADDWF	FARG_Usart_Read_Text+1, 0
$05EE	$0084			MOVWF	FSR
$05EF	$0800			MOVF	INDF, 0
$05F0	$00F1			MOVWF	STACK_1
$05F1	$0871			MOVF	STACK_1, 0
$05F2	$00BF			MOVWF	_usart_read_text_local_data2
;USART_c67.ppas,102 :: 		
$05F3	$0871			MOVF	STACK_1, 0
$05F4	$3A00			XORLW	0
$05F5	$1D03			BTFSS	STATUS, Z
$05F6	$2DF8			GOTO	USART_c67_L_40
$05F7	$	USART_c67_L_39:
;USART_c67.ppas,103 :: 		
$05F7	$2E01			GOTO	USART_c67_L_30
$05F8	$	USART_c67_L_40:
$05F8	$	USART_c67_L_41:
;USART_c67.ppas,105 :: 		
$05F8	$0ABC			INCF	_usart_read_text_local_i, 1
;USART_c67.ppas,106 :: 		
$05F9	$083C			MOVF	_usart_read_text_local_i, 0
$05FA	$3C14			SUBLW	20
$05FB	$1803			BTFSC	STATUS, C
$05FC	$2E00			GOTO	USART_c67_L_43
$05FD	$	USART_c67_L_42:
;USART_c67.ppas,108 :: 		
$05FD	$3013			MOVLW	19
$05FE	$00C0			MOVWF	_usart_read_text_local_lasti
;USART_c67.ppas,109 :: 		
$05FF	$2E01			GOTO	USART_c67_L_30
;USART_c67.ppas,110 :: 		
$0600	$	USART_c67_L_43:
$0600	$	USART_c67_L_44:
;USART_c67.ppas,111 :: 		
$0600	$	USART_c67_L_34:
$0600	$	USART_c67_L_35:
;USART_c67.ppas,112 :: 		
$0600	$2DCC			GOTO	USART_c67_L_29
$0601	$	USART_c67_L_30:
;USART_c67.ppas,113 :: 		
$0601	$0840			MOVF	_usart_read_text_local_lasti, 0
$0602	$073A			ADDWF	FARG_Usart_Read_Text, 0
$0603	$00F0			MOVWF	STACK_0
$0604	$0870			MOVF	STACK_0, 0
$0605	$0084			MOVWF	FSR
$0606	$0870			MOVF	STACK_0, 0
$0607	$0084			MOVWF	FSR
$0608	$0180			CLRF	INDF, 1
$0609	$	USART_c67_L_27:
;USART_c67.ppas,114 :: 		
$0609	$0008			RETURN
$0407	$	_strtoint:
;conv.ppas,343 :: 		
;conv.ppas,345 :: 		
$0407	$1303			BCF	STATUS, RP1
$0408	$1283			BCF	STATUS, RP0
$0409	$01BB			CLRF	_strtoint_local_result
$040A	$01BC			CLRF	_strtoint_local_result+1
;conv.ppas,346 :: 		
$040B	$3010			MOVLW	16
$040C	$00BF			MOVWF	_strtoint_local_ep
$040D	$3027			MOVLW	39
$040E	$00C0			MOVWF	_strtoint_local_ep+1
;conv.ppas,347 :: 		
$040F	$01BD			CLRF	_strtoint_local_i
$0410	$01BE			CLRF	_strtoint_local_i+1
;conv.ppas,348 :: 		
$0411	$01C3			CLRF	_strtoint_local_tmp
$0412	$01C4			CLRF	_strtoint_local_tmp+1
$0413	$01C5			CLRF	_strtoint_local_tmp+2
$0414	$01C6			CLRF	_strtoint_local_tmp+3
;conv.ppas,349 :: 		
$0415	$01C1			CLRF	_strtoint_local_negative
$0416	$01C2			CLRF	_strtoint_local_negative+1
;conv.ppas,353 :: 		
$0417	$	conv_L_172:
$0417	$083D			MOVF	_strtoint_local_i, 0
$0418	$073A			ADDWF	FARG_StrToInt, 0
$0419	$0084			MOVWF	FSR
$041A	$0800			MOVF	INDF, 0
$041B	$00F4			MOVWF	STACK_4
$041C	$0874			MOVF	STACK_4, 0
$041D	$3A00			XORLW	0
$041E	$1903			BTFSC	STATUS, Z
$041F	$2C85			GOTO	conv_L_173
;conv.ppas,355 :: 		
$0420	$083D			MOVF	_strtoint_local_i, 0
$0421	$073A			ADDWF	FARG_StrToInt, 0
$0422	$0084			MOVWF	FSR
$0423	$0800			MOVF	INDF, 0
$0424	$00F4			MOVWF	STACK_4
$0425	$0874			MOVF	STACK_4, 0
$0426	$3A2D			XORLW	45
$0427	$1D03			BTFSS	STATUS, Z
$0428	$2C30			GOTO	conv_L_177
$0429	$	conv_L_176:
;conv.ppas,357 :: 		
$0429	$30FF			MOVLW	255
$042A	$00C1			MOVWF	_strtoint_local_negative
$042B	$01C2			CLRF	_strtoint_local_negative+1
;conv.ppas,358 :: 		
$042C	$0ABD			INCF	_strtoint_local_i, 1
$042D	$1903			BTFSC	STATUS, Z
$042E	$0ABE			INCF	_strtoint_local_i+1, 1
;conv.ppas,359 :: 		
$042F	$2C17			GOTO	conv_L_172
;conv.ppas,360 :: 		
$0430	$	conv_L_177:
$0430	$	conv_L_178:
;conv.ppas,361 :: 		
$0430	$083D			MOVF	_strtoint_local_i, 0
$0431	$073A			ADDWF	FARG_StrToInt, 0
$0432	$0084			MOVWF	FSR
$0433	$0800			MOVF	INDF, 0
$0434	$00F4			MOVWF	STACK_4
$0435	$0874			MOVF	STACK_4, 0
$0436	$3A20			XORLW	32
$0437	$1903			BTFSC	STATUS, Z
$0438	$2C73			GOTO	conv_L_180
$0439	$	conv_L_179:
;conv.ppas,362 :: 		
$0439	$083D			MOVF	_strtoint_local_i, 0
$043A	$073A			ADDWF	FARG_StrToInt, 0
$043B	$0084			MOVWF	FSR
$043C	$0800			MOVF	INDF, 0
$043D	$00F0			MOVWF	STACK_0
$043E	$3030			MOVLW	48
$043F	$00F8			MOVWF	STACK_8
$0440	$01F9			CLRF	STACK_8+1
$0441	$01FA			CLRF	STACK_8+2
$0442	$01FB			CLRF	STACK_8+3
$0443	$0870			MOVF	STACK_0, 0
$0444	$00F4			MOVWF	STACK_4
$0445	$01F5			CLRF	STACK_4+1
$0446	$01F6			CLRF	STACK_4+2
$0447	$01F7			CLRF	STACK_4+3
$0448	$0874			MOVF	STACK_4, 0
$0449	$00F0			MOVWF	STACK_0
$044A	$0875			MOVF	STACK_4+1, 0
$044B	$00F1			MOVWF	STACK_0+1
$044C	$0876			MOVF	STACK_4+2, 0
$044D	$00F2			MOVWF	STACK_0+2
$044E	$0877			MOVF	STACK_4+3, 0
$044F	$00F3			MOVWF	STACK_0+3
$0450	$0878			MOVF	STACK_8, 0
$0451	$02F0			SUBWF	STACK_0, 1
$0452	$0879			MOVF	STACK_8+1, 0
$0453	$1C03			BTFSS	STATUS, C
$0454	$0F79			INCFSZ	STACK_8+1, 0
$0455	$02F1			SUBWF	STACK_0+1, 1
$0456	$087A			MOVF	STACK_8+2, 0
$0457	$1C03			BTFSS	STATUS, C
$0458	$0F7A			INCFSZ	STACK_8+2, 0
$0459	$02F2			SUBWF	STACK_0+2, 1
$045A	$087B			MOVF	STACK_8+3, 0
$045B	$1C03			BTFSS	STATUS, C
$045C	$0F7B			INCFSZ	STACK_8+3, 0
$045D	$02F3			SUBWF	STACK_0+3, 1
$045E	$083F			MOVF	_strtoint_local_ep, 0
$045F	$00F4			MOVWF	STACK_4
$0460	$0840			MOVF	_strtoint_local_ep+1, 0
$0461	$00F5			MOVWF	STACK_4+1
$0462	$01F6			CLRF	STACK_4+2
$0463	$01F7			CLRF	STACK_4+3
$0464	$2653			CALL	_mul_32x32_s
$0465	$0870			MOVF	STACK_0, 0
$0466	$07C3			ADDWF	_strtoint_local_tmp, 1
$0467	$0871			MOVF	STACK_0+1, 0
$0468	$1803			BTFSC	STATUS, C
$0469	$0F71			INCFSZ	STACK_0+1, 0
$046A	$07C4			ADDWF	_strtoint_local_tmp+1, 1
$046B	$0872			MOVF	STACK_0+2, 0
$046C	$1803			BTFSC	STATUS, C
$046D	$0F72			INCFSZ	STACK_0+2, 0
$046E	$07C5			ADDWF	_strtoint_local_tmp+2, 1
$046F	$0873			MOVF	STACK_0+3, 0
$0470	$1803			BTFSC	STATUS, C
$0471	$0F73			INCFSZ	STACK_0+3, 0
$0472	$07C6			ADDWF	_strtoint_local_tmp+3, 1
$0473	$	conv_L_180:
$0473	$	conv_L_181:
;conv.ppas,363 :: 		
$0473	$300A			MOVLW	10
$0474	$00F4			MOVWF	STACK_4
$0475	$01F5			CLRF	STACK_4+1
$0476	$083F			MOVF	_strtoint_local_ep, 0
$0477	$00F0			MOVWF	STACK_0
$0478	$0840			MOVF	_strtoint_local_ep+1, 0
$0479	$00F1			MOVWF	STACK_0+1
$047A	$158A			BSF	PCLATH, 3
$047B	$204C			CALL	_div_16x16_u
$047C	$118A			BCF	PCLATH, 3
$047D	$0870			MOVF	STACK_0, 0
$047E	$00BF			MOVWF	_strtoint_local_ep
$047F	$0871			MOVF	STACK_0+1, 0
$0480	$00C0			MOVWF	_strtoint_local_ep+1
;conv.ppas,365 :: 		
$0481	$0ABD			INCF	_strtoint_local_i, 1
$0482	$1903			BTFSC	STATUS, Z
$0483	$0ABE			INCF	_strtoint_local_i+1, 1
;conv.ppas,366 :: 		
$0484	$2C17			GOTO	conv_L_172
$0485	$	conv_L_173:
;conv.ppas,370 :: 		
$0485	$0841			MOVF	_strtoint_local_negative, 0
$0486	$0442			IORWF	_strtoint_local_negative+1, 0
$0487	$1903			BTFSC	STATUS, Z
$0488	$2C8D			GOTO	conv_L_183
$0489	$	conv_L_182:
$0489	$3006			MOVLW	6
$048A	$00BF			MOVWF	_strtoint_local_ep
$048B	$01C0			CLRF	_strtoint_local_ep+1
$048C	$2C90			GOTO	conv_L_184
;conv.ppas,371 :: 		
$048D	$	conv_L_183:
$048D	$3005			MOVLW	5
$048E	$00BF			MOVWF	_strtoint_local_ep
$048F	$01C0			CLRF	_strtoint_local_ep+1
$0490	$	conv_L_184:
;conv.ppas,373 :: 		
$0490	$	conv_L_186:
$0490	$083E			MOVF	_strtoint_local_i+1, 0
$0491	$0640			XORWF	_strtoint_local_ep+1, 0
$0492	$1D03			BTFSS	STATUS, Z
$0493	$2C96			GOTO	L_StrToInt_20
$0494	$083F			MOVF	_strtoint_local_ep, 0
$0495	$063D			XORWF	_strtoint_local_i, 0
$0496	$	L_StrToInt_20:
$0496	$1903			BTFSC	STATUS, Z
$0497	$2CB2			GOTO	conv_L_187
;conv.ppas,375 :: 		
$0498	$300A			MOVLW	10
$0499	$00F4			MOVWF	STACK_4
$049A	$01F5			CLRF	STACK_4+1
$049B	$01F6			CLRF	STACK_4+2
$049C	$01F7			CLRF	STACK_4+3
$049D	$0843			MOVF	_strtoint_local_tmp, 0
$049E	$00F0			MOVWF	STACK_0
$049F	$0844			MOVF	_strtoint_local_tmp+1, 0
$04A0	$00F1			MOVWF	STACK_0+1
$04A1	$0845			MOVF	_strtoint_local_tmp+2, 0
$04A2	$00F2			MOVWF	STACK_0+2
$04A3	$0846			MOVF	_strtoint_local_tmp+3, 0
$04A4	$00F3			MOVWF	STACK_0+3
$04A5	$24CB			CALL	_div_32x32_s
$04A6	$0870			MOVF	STACK_0, 0
$04A7	$00C3			MOVWF	_strtoint_local_tmp
$04A8	$0871			MOVF	STACK_0+1, 0
$04A9	$00C4			MOVWF	_strtoint_local_tmp+1
$04AA	$0872			MOVF	STACK_0+2, 0
$04AB	$00C5			MOVWF	_strtoint_local_tmp+2
$04AC	$0873			MOVF	STACK_0+3, 0
$04AD	$00C6			MOVWF	_strtoint_local_tmp+3
;conv.ppas,376 :: 		
$04AE	$0ABD			INCF	_strtoint_local_i, 1
$04AF	$1903			BTFSC	STATUS, Z
$04B0	$0ABE			INCF	_strtoint_local_i+1, 1
;conv.ppas,377 :: 		
$04B1	$2C90			GOTO	conv_L_186
$04B2	$	conv_L_187:
;conv.ppas,380 :: 		
$04B2	$0843			MOVF	_strtoint_local_tmp, 0
$04B3	$00BB			MOVWF	_strtoint_local_result
$04B4	$0844			MOVF	_strtoint_local_tmp+1, 0
$04B5	$00BC			MOVWF	_strtoint_local_result+1
;conv.ppas,382 :: 		
$04B6	$3000			MOVLW	0
$04B7	$0642			XORWF	_strtoint_local_negative+1, 0
$04B8	$1D03			BTFSS	STATUS, Z
$04B9	$2CBC			GOTO	L_StrToInt_21
$04BA	$30FF			MOVLW	255
$04BB	$0641			XORWF	_strtoint_local_negative, 0
$04BC	$	L_StrToInt_21:
$04BC	$1D03			BTFSS	STATUS, Z
$04BD	$2CC6			GOTO	conv_L_191
$04BE	$	conv_L_190:
;conv.ppas,383 :: 		
$04BE	$083B			MOVF	_strtoint_local_result, 0
$04BF	$3C00			SUBLW	0
$04C0	$00BB			MOVWF	_strtoint_local_result
$04C1	$083C			MOVF	_strtoint_local_result+1, 0
$04C2	$1C03			BTFSS	STATUS, C
$04C3	$3F01			ADDLW	1
$04C4	$01BC			CLRF	_strtoint_local_result+1
$04C5	$02BC			SUBWF	_strtoint_local_result+1, 1
$04C6	$	conv_L_191:
$04C6	$	conv_L_192:
$04C6	$	conv_L_170:
;conv.ppas,384 :: 		
$04C6	$083B			MOVF	_strtoint_local_result, 0
$04C7	$00F0			MOVWF	STACK_0
$04C8	$083C			MOVF	_strtoint_local_result+1, 0
$04C9	$00F1			MOVWF	STACK_0+1
$04CA	$0008			RETURN
$0869	$	_usart_write_text:
;USART_c67.ppas,121 :: 		
;USART_c67.ppas,122 :: 		
$0869	$1303			BCF	STATUS, RP1
$086A	$1283			BCF	STATUS, RP0
$086B	$01BB			CLRF	_usart_write_text_local_i, 1
;USART_c67.ppas,123 :: 		
$086C	$083A			MOVF	FARG_Usart_Write_Text, 0
$086D	$0084			MOVWF	FSR
$086E	$0800			MOVF	INDF, 0
$086F	$00BC			MOVWF	_usart_write_text_local_data
;USART_c67.ppas,124 :: 		
$0870	$	USART_c67_L_47:
$0870	$083C			MOVF	_usart_write_text_local_data, 0
$0871	$3A00			XORLW	0
$0872	$1903			BTFSC	STATUS, Z
$0873	$287E			GOTO	USART_c67_L_48
;USART_c67.ppas,126 :: 		
$0874	$083C			MOVF	_usart_write_text_local_data, 0
$0875	$00C7			MOVWF	FARG_USART_Write
$0876	$2092			CALL	_usart_write
;USART_c67.ppas,127 :: 		
$0877	$0ABB			INCF	_usart_write_text_local_i, 1
;USART_c67.ppas,128 :: 		
$0878	$083B			MOVF	_usart_write_text_local_i, 0
$0879	$073A			ADDWF	FARG_Usart_Write_Text, 0
$087A	$0084			MOVWF	FSR
$087B	$0800			MOVF	INDF, 0
$087C	$00BC			MOVWF	_usart_write_text_local_data
;USART_c67.ppas,129 :: 		
$087D	$2870			GOTO	USART_c67_L_47
$087E	$	USART_c67_L_48:
$087E	$	USART_c67_L_45:
;USART_c67.ppas,130 :: 		
$087E	$0008			RETURN
$068E	$	_i2c_start:
;I2C_c34.ppas,34 :: 		
;I2C_c34.ppas,35 :: 		
$068E	$1303			BCF	STATUS, RP1
$068F	$1283			BCF	STATUS, RP0
$0690	$01BB			CLRF	_i2c_start_local_j
$0691	$01BC			CLRF	_i2c_start_local_j+1
$0692	$	I2C_c34_L_17:
$0692	$083C			MOVF	_i2c_start_local_j+1, 0
$0693	$3C12			SUBLW	18
$0694	$1D03			BTFSS	STATUS, Z
$0695	$2E98			GOTO	L_I2C_Start_0
$0696	$083B			MOVF	_i2c_start_local_j, 0
$0697	$3C8E			SUBLW	142
$0698	$	L_I2C_Start_0:
$0698	$1C03			BTFSS	STATUS, C
$0699	$2EAE			GOTO	I2C_c34_L_20
;I2C_c34.ppas,36 :: 		
$069A	$158A			BSF	PCLATH, 3
$069B	$202D			CALL	_i2c_is_idle
$069C	$118A			BCF	PCLATH, 3
$069D	$0870			MOVF	STACK_0, 0
$069E	$3A00			XORLW	0
$069F	$1903			BTFSC	STATUS, Z
$06A0	$2EA2			GOTO	I2C_c34_L_22
$06A1	$	I2C_c34_L_21:
;I2C_c34.ppas,37 :: 		
$06A1	$2EAE			GOTO	I2C_c34_L_20
$06A2	$	I2C_c34_L_22:
$06A2	$	I2C_c34_L_23:
$06A2	$083C			MOVF	_i2c_start_local_j+1, 0
$06A3	$3A12			XORLW	18
$06A4	$1D03			BTFSS	STATUS, Z
$06A5	$2EA8			GOTO	L_I2C_Start_1
$06A6	$308E			MOVLW	142
$06A7	$063B			XORWF	_i2c_start_local_j, 0
$06A8	$	L_I2C_Start_1:
$06A8	$1903			BTFSC	STATUS, Z
$06A9	$2EAE			GOTO	I2C_c34_L_20
$06AA	$	I2C_c34_L_18:
$06AA	$0ABB			INCF	_i2c_start_local_j, 1
$06AB	$1903			BTFSC	STATUS, Z
$06AC	$0ABC			INCF	_i2c_start_local_j+1, 1
$06AD	$2E92			GOTO	I2C_c34_L_17
$06AE	$	I2C_c34_L_20:
;I2C_c34.ppas,39 :: 		
$06AE	$3012			MOVLW	18
$06AF	$023C			SUBWF	_i2c_start_local_j+1, 0
$06B0	$1D03			BTFSS	STATUS, Z
$06B1	$2EB4			GOTO	L_I2C_Start_2
$06B2	$308F			MOVLW	143
$06B3	$023B			SUBWF	_i2c_start_local_j, 0
$06B4	$	L_I2C_Start_2:
$06B4	$1C03			BTFSS	STATUS, C
$06B5	$2EB9			GOTO	I2C_c34_L_25
$06B6	$	I2C_c34_L_24:
;I2C_c34.ppas,40 :: 		
$06B6	$307B			MOVLW	123
$06B7	$00BA			MOVWF	_i2c_start_local_result
$06B8	$2EC7			GOTO	I2C_c34_L_26
;I2C_c34.ppas,41 :: 		
$06B9	$	I2C_c34_L_25:
;I2C_c34.ppas,42 :: 		
$06B9	$	I2C_c34_L_27:
$06B9	$1683			BSF	STATUS, RP0
$06BA	$1411			BSF	SSPCON2, 0
$06BB	$	I2C_c34_L_28:
;I2C_c34.ppas,43 :: 		
$06BB	$	I2C_c34_L_30:
$06BB	$0811			MOVF	SSPCON2, 0
$06BC	$00F1			MOVWF	STACK_1
$06BD	$3001			MOVLW	1
$06BE	$05F1			ANDWF	STACK_1, 1
$06BF	$0871			MOVF	STACK_1, 0
$06C0	$3A00			XORLW	0
$06C1	$1903			BTFSC	STATUS, Z
$06C2	$2EC5			GOTO	I2C_c34_L_31
;I2C_c34.ppas,44 :: 		
$06C3	$0000			NOP
$06C4	$2EBB			GOTO	I2C_c34_L_30
$06C5	$	I2C_c34_L_31:
;I2C_c34.ppas,45 :: 		
$06C5	$1283			BCF	STATUS, RP0
$06C6	$01BA			CLRF	_i2c_start_local_result, 1
;I2C_c34.ppas,46 :: 		
$06C7	$	I2C_c34_L_26:
$06C7	$	I2C_c34_L_16:
;I2C_c34.ppas,47 :: 		
$06C7	$083A			MOVF	_i2c_start_local_result, 0
$06C8	$00F0			MOVWF	STACK_0
$06C9	$0008			RETURN
$0701	$	_i2c_wr:
;I2C_c34.ppas,81 :: 		
;I2C_c34.ppas,82 :: 		
$0701	$1303			BCF	STATUS, RP1
$0702	$1283			BCF	STATUS, RP0
$0703	$083A			MOVF	FARG_I2C_Wr, 0
$0704	$0093			MOVWF	SSPBUF
;I2C_c34.ppas,83 :: 		
$0705	$118C			BCF	PIR1, 3
$0706	$	I2C_c34_L_70:
;I2C_c34.ppas,84 :: 		
$0706	$	I2C_c34_L_72:
$0706	$1683			BSF	STATUS, RP0
$0707	$0814			MOVF	SSPSTAT, 0
$0708	$00F1			MOVWF	STACK_1
$0709	$3000			MOVLW	0
$070A	$1971			BTFSC	STACK_1, 2
$070B	$3001			MOVLW	1
$070C	$00F1			MOVWF	STACK_1
$070D	$0871			MOVF	STACK_1, 0
$070E	$3A00			XORLW	0
$070F	$1D03			BTFSS	STATUS, Z
$0710	$2F06			GOTO	I2C_c34_L_72
$0711	$	I2C_c34_L_73:
;I2C_c34.ppas,85 :: 		
$0711	$	I2C_c34_L_77:
$0711	$1283			BCF	STATUS, RP0
$0712	$080C			MOVF	PIR1, 0
$0713	$00F1			MOVWF	STACK_1
$0714	$3000			MOVLW	0
$0715	$19F1			BTFSC	STACK_1, 3
$0716	$3001			MOVLW	1
$0717	$00F1			MOVWF	STACK_1
$0718	$0871			MOVF	STACK_1, 0
$0719	$3A00			XORLW	0
$071A	$1903			BTFSC	STATUS, Z
$071B	$2F11			GOTO	I2C_c34_L_77
$071C	$	I2C_c34_L_78:
;I2C_c34.ppas,86 :: 		
$071C	$1683			BSF	STATUS, RP0
$071D	$0811			MOVF	SSPCON2, 0
$071E	$00F1			MOVWF	STACK_1
$071F	$3000			MOVLW	0
$0720	$1B71			BTFSC	STACK_1, 6
$0721	$3001			MOVLW	1
$0722	$00F1			MOVWF	STACK_1
$0723	$0871			MOVF	STACK_1, 0
$0724	$3A00			XORLW	0
$0725	$1D03			BTFSS	STATUS, Z
$0726	$2F2A			GOTO	I2C_c34_L_82
$0727	$	I2C_c34_L_81:
$0727	$1283			BCF	STATUS, RP0
$0728	$01BB			CLRF	_i2c_wr_local_result, 1
$0729	$2F31			GOTO	I2C_c34_L_83
;I2C_c34.ppas,87 :: 		
$072A	$	I2C_c34_L_82:
;I2C_c34.ppas,88 :: 		
$072A	$	I2C_c34_L_84:
$072A	$1303			BCF	STATUS, RP1
$072B	$1283			BCF	STATUS, RP0
$072C	$1683			BSF	STATUS, RP0
$072D	$1511			BSF	SSPCON2, 2
$072E	$	I2C_c34_L_85:
;I2C_c34.ppas,89 :: 		
$072E	$3002			MOVLW	2
$072F	$1283			BCF	STATUS, RP0
$0730	$00BB			MOVWF	_i2c_wr_local_result
;I2C_c34.ppas,90 :: 		
$0731	$	I2C_c34_L_83:
$0731	$	I2C_c34_L_68:
;I2C_c34.ppas,91 :: 		
$0731	$083B			MOVF	_i2c_wr_local_result, 0
$0732	$00F0			MOVWF	STACK_0
$0733	$0008			RETURN
$08C9	$	_i2c_stop:
;I2C_c34.ppas,97 :: 		
;I2C_c34.ppas,98 :: 		
$08C9	$	I2C_c34_L_87:
$08C9	$1303			BCF	STATUS, RP1
$08CA	$1683			BSF	STATUS, RP0
$08CB	$1511			BSF	SSPCON2, 2
$08CC	$	I2C_c34_L_88:
$08CC	$	I2C_c34_L_86:
;I2C_c34.ppas,99 :: 		
$08CC	$0008			RETURN
$0734	$	_usart_init:
;USART_c67.ppas,22 :: 		
;USART_c67.ppas,24 :: 		
$0734	$	USART_c67_L_1:
$0734	$1303			BCF	STATUS, RP1
$0735	$1683			BSF	STATUS, RP0
$0736	$1698			BSF	TXSTA, 5
$0737	$	USART_c67_L_2:
;USART_c67.ppas,25 :: 		
$0737	$3090			MOVLW	144
$0738	$1283			BCF	STATUS, RP0
$0739	$0098			MOVWF	RCSTA
;USART_c67.ppas,31 :: 		
$073A	$	USART_c67_L_3:
$073A	$1683			BSF	STATUS, RP0
$073B	$1787			BSF	TRISC, 7
$073C	$	USART_c67_L_4:
;USART_c67.ppas,32 :: 		
$073C	$1307			BCF	TRISC, 6
$073D	$	USART_c67_L_6:
;USART_c67.ppas,35 :: 		
$073D	$	USART_c67_L_8:
$073D	$1283			BCF	STATUS, RP0
$073E	$080C			MOVF	PIR1, 0
$073F	$00F1			MOVWF	STACK_1
$0740	$3000			MOVLW	0
$0741	$1AF1			BTFSC	STACK_1, 5
$0742	$3001			MOVLW	1
$0743	$00F1			MOVWF	STACK_1
$0744	$0871			MOVF	STACK_1, 0
$0745	$3A01			XORLW	1
$0746	$1903			BTFSC	STATUS, Z
$0747	$2F3D			GOTO	USART_c67_L_8
;USART_c67.ppas,36 :: 		
$0748	$	USART_c67_L_9:
$0748	$	USART_c67_L_0:
;USART_c67.ppas,37 :: 		
$0748	$0008			RETURN
$08BF	$	_i2c_init:
;I2C_c34.ppas,8 :: 		
;I2C_c34.ppas,9 :: 		
$08BF	$1303			BCF	STATUS, RP1
$08C0	$1683			BSF	STATUS, RP0
$08C1	$1314			BCF	SSPSTAT, 6
$08C2	$	I2C_c34_L_2:
;I2C_c34.ppas,10 :: 		
$08C2	$1394			BCF	SSPSTAT, 7
$08C3	$	I2C_c34_L_4:
;I2C_c34.ppas,11 :: 		
$08C3	$	I2C_c34_L_5:
$08C3	$1607			BSF	TRISC, 4
$08C4	$	I2C_c34_L_6:
;I2C_c34.ppas,12 :: 		
$08C4	$	I2C_c34_L_7:
$08C4	$1587			BSF	TRISC, 3
$08C5	$	I2C_c34_L_8:
;I2C_c34.ppas,13 :: 		
$08C5	$3038			MOVLW	56
$08C6	$1283			BCF	STATUS, RP0
$08C7	$0094			MOVWF	SSPCON
$08C8	$	I2C_c34_L_0:
;I2C_c34.ppas,15 :: 		
$08C8	$0008			RETURN
$060A	$	_mul_16x16_s:
$060A	$1303			BCF	STATUS, RP1
$060B	$1283			BCF	STATUS, RP0
;math.ppas,203 :: 		
;math.ppas,205 :: 		
$060C	$01FB			CLRF	STACK_11
;math.ppas,206 :: 		
$060D	$01FA			CLRF	STACK_10
;math.ppas,207 :: 		
$060E	$01F9			CLRF	STACK_9
;math.ppas,208 :: 		
$060F	$3080			MOVLW	128
;math.ppas,210 :: 		
$0610	$00F8			MOVWF	STACK_8
;math.ppas,212 :: 		
$0611	$01FD			CLRF	STACK_13
;math.ppas,213 :: 		
$0612	$1FF1			BTFSS	STACK_1, 7
;math.ppas,214 :: 		
$0613	$2E1A			GOTO	$+7
;math.ppas,215 :: 		
$0614	$09F1			COMF	STACK_1, F
;math.ppas,216 :: 		
$0615	$09F0			COMF	STACK_0, F
;math.ppas,217 :: 		
$0616	$0AF0			INCF	STACK_0, F
;math.ppas,218 :: 		
$0617	$1903			BTFSC	STATUS, Z
;math.ppas,219 :: 		
$0618	$0AF1			INCF	STACK_1, F
;math.ppas,221 :: 		
$0619	$0AFD			INCF	STACK_13, F
;math.ppas,222 :: 		
$061A	$1FF5			BTFSS	STACK_5, 7
;math.ppas,223 :: 		
$061B	$2E22			GOTO	$+7
;math.ppas,224 :: 		
$061C	$09F5			COMF	STACK_5, F
;math.ppas,225 :: 		
$061D	$09F4			COMF	STACK_4, F
;math.ppas,226 :: 		
$061E	$0AF4			INCF	STACK_4, F
;math.ppas,227 :: 		
$061F	$1903			BTFSC	STATUS, Z
;math.ppas,228 :: 		
$0620	$0AF5			INCF	STACK_5, F
;math.ppas,230 :: 		
$0621	$0AFD			INCF	STACK_13, F
;math.ppas,231 :: 		
$0622	$0CF1			RRF	STACK_1, F
;math.ppas,233 :: 		
$0623	$0CF0			RRF	STACK_0, F
;math.ppas,234 :: 		
$0624	$1C03			BTFSS	STATUS, C
;math.ppas,235 :: 		
$0625	$2E2F			GOTO	$+10
;math.ppas,236 :: 		
$0626	$0874			MOVF	STACK_4, W
;math.ppas,238 :: 		
$0627	$07F9			ADDWF	STACK_9, F
;math.ppas,239 :: 		
$0628	$0875			MOVF	STACK_5, W
;math.ppas,240 :: 		
$0629	$1803			BTFSC	STATUS, C
;math.ppas,241 :: 		
$062A	$0F75			INCFSZ	STACK_5, W
;math.ppas,242 :: 		
$062B	$07FA			ADDWF	STACK_10, F
;math.ppas,243 :: 		
$062C	$1803			BTFSC	STATUS, C
;math.ppas,244 :: 		
$062D	$0AFB			INCF	STACK_11, F
;math.ppas,246 :: 		
$062E	$1003			BCF	STATUS, C
;math.ppas,247 :: 		
$062F	$1FF0			BTFSS	STACK_0, 7
;math.ppas,248 :: 		
$0630	$2E37			GOTO	$+7
;math.ppas,249 :: 		
$0631	$0874			MOVF	STACK_4, W
;math.ppas,250 :: 		
$0632	$07FA			ADDWF	STACK_10, F
;math.ppas,251 :: 		
$0633	$1803			BTFSC	STATUS, C
;math.ppas,252 :: 		
$0634	$0AFB			INCF	STACK_11, F
;math.ppas,253 :: 		
$0635	$0875			MOVF	STACK_5, W
;math.ppas,255 :: 		
$0636	$07FB			ADDWF	STACK_11, F
;math.ppas,256 :: 		
$0637	$0CFB			RRF	STACK_11, F
;math.ppas,257 :: 		
$0638	$0CFA			RRF	STACK_10, F
;math.ppas,258 :: 		
$0639	$0CF9			RRF	STACK_9, F
;math.ppas,260 :: 		
$063A	$0CF8			RRF	STACK_8, F
;math.ppas,261 :: 		
$063B	$1C03			BTFSS	STATUS, C
;math.ppas,262 :: 		
$063C	$2E22			GOTO	$-26
;math.ppas,263 :: 		
$063D	$1C7D			BTFSS	STACK_13, 0
;math.ppas,265 :: 		
$063E	$2E4A			GOTO	$+12
;math.ppas,266 :: 		
$063F	$09FB			COMF	STACK_11, F
;math.ppas,267 :: 		
$0640	$09FA			COMF	STACK_10, F
;math.ppas,268 :: 		
$0641	$09F9			COMF	STACK_9, F
;math.ppas,270 :: 		
$0642	$09F8			COMF	STACK_8, F
;math.ppas,271 :: 		
$0643	$0AF8			INCF	STACK_8, F
;math.ppas,272 :: 		
$0644	$1903			BTFSC	STATUS, Z
;math.ppas,273 :: 		
$0645	$0AF9			INCF	STACK_9, F
;math.ppas,274 :: 		
$0646	$1903			BTFSC	STATUS, Z
;math.ppas,275 :: 		
$0647	$0AFA			INCF	STACK_10, F
;math.ppas,276 :: 		
$0648	$1903			BTFSC	STATUS, Z
;math.ppas,278 :: 		
$0649	$0AFB			INCF	STACK_11, F
;math.ppas,279 :: 		
$064A	$087B			MOVF	STACK_11, W
;math.ppas,280 :: 		
$064B	$00F3			MOVWF	STACK_3
;math.ppas,281 :: 		
$064C	$087A			MOVF	STACK_10, W
;math.ppas,282 :: 		
$064D	$00F2			MOVWF	STACK_2
;math.ppas,283 :: 		
$064E	$0879			MOVF	STACK_9, W
;math.ppas,284 :: 		
$064F	$00F1			MOVWF	STACK_1
;math.ppas,285 :: 		
$0650	$0878			MOVF	STACK_8, W
;math.ppas,286 :: 		
$0651	$00F0			MOVWF	STACK_0
;math.ppas,287 :: 		
$0652	$	math_L_5:
;math.ppas,288 :: 		
$0652	$0008			RETURN
$0567	$	_div_16x16_s:
$0567	$1303			BCF	STATUS, RP1
$0568	$1283			BCF	STATUS, RP0
;math.ppas,346 :: 		
;math.ppas,348 :: 		
$0569	$01FD			CLRF	STACK_13
;math.ppas,349 :: 		
$056A	$01F9			CLRF	STACK_9
;math.ppas,350 :: 		
$056B	$01F8			CLRF	STACK_8
;math.ppas,351 :: 		
$056C	$0871			MOVF	STACK_1, W
;math.ppas,352 :: 		
$056D	$0470			IORWF	STACK_0, W
;math.ppas,353 :: 		
$056E	$1903			BTFSC	STATUS, Z
;math.ppas,355 :: 		
$056F	$3400			RETLW	0
;math.ppas,356 :: 		
$0570	$0871			MOVF	STACK_1, W
;math.ppas,357 :: 		
$0571	$0675			XORWF	STACK_5, W
;math.ppas,358 :: 		
$0572	$00FA			MOVWF	STACK_10
;math.ppas,359 :: 		
$0573	$1BFA			BTFSC	STACK_10, 7
;math.ppas,361 :: 		
$0574	$09FD			COMF	STACK_13, F
;math.ppas,363 :: 		
$0575	$01FB			CLRF	STACK_11
;math.ppas,364 :: 		
$0576	$1FF5			BTFSS	STACK_5, 7
;math.ppas,366 :: 		
$0577	$2D7D			GOTO	$+6
;math.ppas,367 :: 		
$0578	$09F4			COMF	STACK_4, F
;math.ppas,368 :: 		
$0579	$09F5			COMF	STACK_5, F
;math.ppas,369 :: 		
$057A	$0AF4			INCF	STACK_4, F
;math.ppas,370 :: 		
$057B	$1903			BTFSC	STATUS, Z
;math.ppas,372 :: 		
$057C	$0AF5			INCF	STACK_5, F
;math.ppas,373 :: 		
$057D	$1FF1			BTFSS	STACK_1, 7
;math.ppas,375 :: 		
$057E	$2D84			GOTO	$+6
;math.ppas,376 :: 		
$057F	$09F0			COMF	STACK_0, F
;math.ppas,377 :: 		
$0580	$09F1			COMF	STACK_1, F
;math.ppas,378 :: 		
$0581	$0AF0			INCF	STACK_0, F
;math.ppas,379 :: 		
$0582	$1903			BTFSC	STATUS, Z
;math.ppas,381 :: 		
$0583	$0AF1			INCF	STACK_1, F
;math.ppas,382 :: 		
$0584	$0871			MOVF	STACK_1, W
;math.ppas,383 :: 		
$0585	$0475			IORWF	STACK_5, W
;math.ppas,384 :: 		
$0586	$00FA			MOVWF	STACK_10
;math.ppas,385 :: 		
$0587	$1BFA			BTFSC	STACK_10, 7
;math.ppas,386 :: 		
$0588	$2D99			GOTO	$+17
;math.ppas,388 :: 		
$0589	$158A			BSF	PCLATH, 3
$058A	$2000			CALL	_div_16x16_s_l
$058B	$118A			BCF	PCLATH, 3
;math.ppas,390 :: 		
$058C	$187B			BTFSC	STACK_11, 0
;math.ppas,392 :: 		
$058D	$2DAE			GOTO	$+33
;math.ppas,393 :: 		
$058E	$1FFD			BTFSS	STACK_13, 7
;math.ppas,395 :: 		
$058F	$3400			RETLW	0
;math.ppas,396 :: 		
$0590	$09F0			COMF	STACK_0, F
;math.ppas,397 :: 		
$0591	$09F1			COMF	STACK_1, F
;math.ppas,398 :: 		
$0592	$0AF0			INCF	STACK_0, F
;math.ppas,399 :: 		
$0593	$1903			BTFSC	STATUS, Z
;math.ppas,401 :: 		
$0594	$0AF1			INCF	STACK_1, F
;math.ppas,402 :: 		
$0595	$09F8			COMF	STACK_8, F
;math.ppas,403 :: 		
$0596	$09F9			COMF	STACK_9, F
;math.ppas,404 :: 		
$0597	$0AF8			INCF	STACK_8, F
;math.ppas,405 :: 		
$0598	$1903			BTFSC	STATUS, Z
;math.ppas,407 :: 		
$0599	$0AF9			INCF	STACK_9, F
;math.ppas,409 :: 		
$059A	$3400			RETLW	0
;math.ppas,410 :: 		
$059B	$1FF5			BTFSS	STACK_5, 7
;math.ppas,411 :: 		
$059C	$2DAA			GOTO	$+14
;math.ppas,412 :: 		
$059D	$1BF1			BTFSC	STACK_1, 7
;math.ppas,413 :: 		
$059E	$2DA6			GOTO	$+8
;math.ppas,414 :: 		
$059F	$0871			MOVF	STACK_1, W
;math.ppas,415 :: 		
$05A0	$00F9			MOVWF	STACK_9
;math.ppas,416 :: 		
$05A1	$0870			MOVF	STACK_0, W
;math.ppas,417 :: 		
$05A2	$00F8			MOVWF	STACK_8
;math.ppas,418 :: 		
$05A3	$01F1			CLRF	STACK_1
;math.ppas,419 :: 		
$05A4	$01F0			CLRF	STACK_0
;math.ppas,420 :: 		
$05A5	$2D8E			GOTO	$-23
;math.ppas,421 :: 		
$05A6	$01F1			CLRF	STACK_1
;math.ppas,422 :: 		
$05A7	$01F0			CLRF	STACK_0
;math.ppas,423 :: 		
$05A8	$0AF0			INCF	STACK_0, F
;math.ppas,425 :: 		
$05A9	$3400			RETLW	0
;math.ppas,426 :: 		
$05AA	$09F1			COMF	STACK_1, F
;math.ppas,427 :: 		
$05AB	$09F0			COMF	STACK_0, F
;math.ppas,428 :: 		
$05AC	$0AFB			INCF	STACK_11, F
;math.ppas,430 :: 		
$05AD	$2D8B			GOTO	$-34
;math.ppas,431 :: 		
$05AE	$0AF8			INCF	STACK_8, F
;math.ppas,432 :: 		
$05AF	$1903			BTFSC	STATUS, Z
;math.ppas,433 :: 		
$05B0	$0AF9			INCF	STACK_9, F
;math.ppas,434 :: 		
$05B1	$0874			MOVF	STACK_4, W
;math.ppas,435 :: 		
$05B2	$0278			SUBWF	STACK_8, W
;math.ppas,436 :: 		
$05B3	$1D03			BTFSS	STATUS, Z
;math.ppas,437 :: 		
$05B4	$2D8E			GOTO	$-38
;math.ppas,438 :: 		
$05B5	$0875			MOVF	STACK_5, W
;math.ppas,439 :: 		
$05B6	$0279			SUBWF	STACK_9, W
;math.ppas,440 :: 		
$05B7	$1D03			BTFSS	STATUS, Z
;math.ppas,441 :: 		
$05B8	$2D8E			GOTO	$-42
;math.ppas,442 :: 		
$05B9	$01F9			CLRF	STACK_9
;math.ppas,443 :: 		
$05BA	$01F8			CLRF	STACK_8
;math.ppas,444 :: 		
$05BB	$0AF0			INCF	STACK_0, F
;math.ppas,445 :: 		
$05BC	$1903			BTFSC	STATUS, Z
;math.ppas,446 :: 		
$05BD	$0AF1			INCF	STACK_1, F
;math.ppas,447 :: 		
$05BE	$1FF1			BTFSS	STACK_1, 7
;math.ppas,448 :: 		
$05BF	$2D8E			GOTO	$-49
;math.ppas,449 :: 		
$05C0	$0000			NOP
;math.ppas,450 :: 		
$05C1	$34FF			RETLW	255
;math.ppas,451 :: 		
$05C2	$	math_L_7:
;math.ppas,452 :: 		
$05C2	$0008			RETURN
$0004	$	_main:
;displays.pbas,13 :: 		main:
$0004	$	_main_main:
;displays.pbas,14 :: 		TRISA=%11111000
$0004	$30F8			MOVLW	248
$0005	$1303			BCF	STATUS, RP1
$0006	$1683			BSF	STATUS, RP0
$0007	$0085			MOVWF	TRISA
;displays.pbas,15 :: 		TRISB=%11111111
$0008	$30FF			MOVLW	255
$0009	$0086			MOVWF	TRISB
;displays.pbas,16 :: 		TRISC=%10000001
$000A	$3081			MOVLW	129
$000B	$0087			MOVWF	TRISC
;displays.pbas,17 :: 		INTCON=%00000000
$000C	$018B			CLRF	INTCON, 1
;displays.pbas,18 :: 		ANSEL=%00000000
$000D	$1703			BSF	STATUS, RP1
$000E	$0188			CLRF	ANSEL, 1
;displays.pbas,19 :: 		ANSELH=%00000000
$000F	$0189			CLRF	ANSELH, 1
;displays.pbas,20 :: 		portA=0
$0010	$1303			BCF	STATUS, RP1
$0011	$1283			BCF	STATUS, RP0
$0012	$0185			CLRF	PORTA, 1
;displays.pbas,21 :: 		portB=0
$0013	$0186			CLRF	PORTB, 1
;displays.pbas,23 :: 		USART_INIT(9600)
$0014	$3019			MOVLW	25
$0015	$1683			BSF	STATUS, RP0
$0016	$0099			MOVWF	SPBRG
$0017	$1518			BSF	TXSTA, BRGH
$0018	$2734			CALL	_usart_init
;displays.pbas,25 :: 		I2C_INIT(100000)
$0019	$300A			MOVLW	10
$001A	$1683			BSF	STATUS, RP0
$001B	$0093			MOVWF	SSPADD
$001C	$158A			BSF	PCLATH, 3
$001D	$20BF			CALL	_i2c_init
$001E	$118A			BCF	PCLATH, 3
;displays.pbas,27 :: 		executa:
$001F	$	_main_executa:
;displays.pbas,29 :: 		if Usart_Data_Ready() > 0 then
$001F	$158A			BSF	PCLATH, 3
$0020	$20B2			CALL	_usart_data_ready
$0021	$118A			BCF	PCLATH, 3
$0022	$0870			MOVF	STACK_0, 0
$0023	$3C00			SUBLW	0
$0024	$1803			BTFSC	STATUS, C
$0025	$2ABD			GOTO	displays_L_2
$0026	$	displays_L_1:
;displays.pbas,30 :: 		Usart_Read_Text(recebe,"/")
$0026	$3021			MOVLW	_recebe
$0027	$00BA			MOVWF	FARG_Usart_Read_Text
$0028	$302F			MOVLW	47
$0029	$00B6			MOVWF	?main_Local_Text+0
$002A	$01B7			CLRF	?main_Local_Text+1
$002B	$3036			MOVLW	?main_Local_Text
$002C	$00BB			MOVWF	FARG_Usart_Read_Text+1
$002D	$25C3			CALL	_usart_read_text
;displays.pbas,31 :: 		valorRecebido = StrToInt(recebe)
$002E	$3021			MOVLW	_recebe
$002F	$00BA			MOVWF	FARG_StrToInt
$0030	$2407			CALL	_strtoint
$0031	$0870			MOVF	STACK_0, 0
$0032	$00A8			MOVWF	_valorrecebido
$0033	$0871			MOVF	STACK_0+1, 0
$0034	$00A9			MOVWF	_valorrecebido+1
;displays.pbas,33 :: 		if (valorRecebido > 9) and (valorRecebido < 46) then
$0035	$3080			MOVLW	128
$0036	$00F3			MOVWF	STACK_3
$0037	$3080			MOVLW	128
$0038	$0671			XORWF	STACK_0+1, 0
$0039	$0273			SUBWF	STACK_3, 0
$003A	$1D03			BTFSS	STATUS, Z
$003B	$283E			GOTO	L_main_0
$003C	$0870			MOVF	STACK_0, 0
$003D	$3C09			SUBLW	9
$003E	$	L_main_0:
$003E	$30FF			MOVLW	255
$003F	$1803			BTFSC	STATUS, C
$0040	$3000			MOVLW	0
$0041	$00F3			MOVWF	STACK_3
$0042	$3080			MOVLW	128
$0043	$0671			XORWF	STACK_0+1, 0
$0044	$00F2			MOVWF	STACK_2
$0045	$3080			MOVLW	128
$0046	$0272			SUBWF	STACK_2, 0
$0047	$1D03			BTFSS	STATUS, Z
$0048	$284B			GOTO	L_main_1
$0049	$302E			MOVLW	46
$004A	$0270			SUBWF	STACK_0, 0
$004B	$	L_main_1:
$004B	$30FF			MOVLW	255
$004C	$1803			BTFSC	STATUS, C
$004D	$3000			MOVLW	0
$004E	$00F2			MOVWF	STACK_2
$004F	$0872			MOVF	STACK_2, 0
$0050	$0573			ANDWF	STACK_3, 0
$0051	$00F0			MOVWF	STACK_0
$0052	$1903			BTFSC	STATUS, Z
$0053	$2A8E			GOTO	displays_L_5
$0054	$	displays_L_4:
;displays.pbas,34 :: 		if (valorRecebido >= 10) And (valorRecebido < 16) then
$0054	$3080			MOVLW	128
$0055	$0629			XORWF	_valorrecebido+1, 0
$0056	$00F2			MOVWF	STACK_2
$0057	$3080			MOVLW	128
$0058	$0272			SUBWF	STACK_2, 0
$0059	$1D03			BTFSS	STATUS, Z
$005A	$285D			GOTO	L_main_2
$005B	$300A			MOVLW	10
$005C	$0228			SUBWF	_valorrecebido, 0
$005D	$	L_main_2:
$005D	$30FF			MOVLW	255
$005E	$1C03			BTFSS	STATUS, C
$005F	$3000			MOVLW	0
$0060	$00F2			MOVWF	STACK_2
$0061	$3080			MOVLW	128
$0062	$0629			XORWF	_valorrecebido+1, 0
$0063	$00F0			MOVWF	STACK_0
$0064	$3080			MOVLW	128
$0065	$0270			SUBWF	STACK_0, 0
$0066	$1D03			BTFSS	STATUS, Z
$0067	$286A			GOTO	L_main_3
$0068	$3010			MOVLW	16
$0069	$0228			SUBWF	_valorrecebido, 0
$006A	$	L_main_3:
$006A	$30FF			MOVLW	255
$006B	$1803			BTFSC	STATUS, C
$006C	$3000			MOVLW	0
$006D	$00F0			MOVWF	STACK_0
$006E	$0872			MOVF	STACK_2, 0
$006F	$05F0			ANDWF	STACK_0, 1
$0070	$1903			BTFSC	STATUS, Z
$0071	$28DE			GOTO	displays_L_8
$0072	$	displays_L_7:
;displays.pbas,35 :: 		valorRecebido = valorRecebido - 10
$0072	$300A			MOVLW	10
$0073	$0228			SUBWF	_valorrecebido, 0
$0074	$00F0			MOVWF	STACK_0
$0075	$3000			MOVLW	0
$0076	$1C03			BTFSS	STATUS, C
$0077	$3F01			ADDLW	1
$0078	$0229			SUBWF	_valorrecebido+1, 0
$0079	$00F1			MOVWF	STACK_0+1
$007A	$0870			MOVF	STACK_0, 0
$007B	$00A8			MOVWF	_valorrecebido
$007C	$0871			MOVF	STACK_0+1, 0
$007D	$00A9			MOVWF	_valorrecebido+1
;displays.pbas,36 :: 		valorConvertido = (valorRecebido * 255) / 5
$007E	$30FF			MOVLW	255
$007F	$00F4			MOVWF	STACK_4
$0080	$01F5			CLRF	STACK_4+1
$0081	$260A			CALL	_mul_16x16_s
$0082	$3005			MOVLW	5
$0083	$00F4			MOVWF	STACK_4
$0084	$01F5			CLRF	STACK_4+1
$0085	$2567			CALL	_div_16x16_s
$0086	$0870			MOVF	STACK_0, 0
$0087	$00AA			MOVWF	_valorconvertido
$0088	$0871			MOVF	STACK_0+1, 0
$0089	$00AB			MOVWF	_valorconvertido+1
;displays.pbas,37 :: 		valorPorcent = ((valorConvertido * 100) / 255)
$008A	$3064			MOVLW	100
$008B	$00F4			MOVWF	STACK_4
$008C	$01F5			CLRF	STACK_4+1
$008D	$260A			CALL	_mul_16x16_s
$008E	$30FF			MOVLW	255
$008F	$00F4			MOVWF	STACK_4
$0090	$01F5			CLRF	STACK_4+1
$0091	$2567			CALL	_div_16x16_s
$0092	$0870			MOVF	STACK_0, 0
$0093	$00AC			MOVWF	_valorporcent
$0094	$0871			MOVF	STACK_0+1, 0
$0095	$00AD			MOVWF	_valorporcent+1
;displays.pbas,39 :: 		if valorPorcent > 99 then
$0096	$3080			MOVLW	128
$0097	$00F2			MOVWF	STACK_2
$0098	$3080			MOVLW	128
$0099	$0671			XORWF	STACK_0+1, 0
$009A	$0272			SUBWF	STACK_2, 0
$009B	$1D03			BTFSS	STATUS, Z
$009C	$289F			GOTO	L_main_4
$009D	$0870			MOVF	STACK_0, 0
$009E	$3C63			SUBLW	99
$009F	$	L_main_4:
$009F	$1803			BTFSC	STATUS, C
$00A0	$28A4			GOTO	displays_L_11
$00A1	$	displays_L_10:
;displays.pbas,40 :: 		valorPorcent = 99
$00A1	$3063			MOVLW	99
$00A2	$00AC			MOVWF	_valorporcent
$00A3	$01AD			CLRF	_valorporcent+1
$00A4	$	displays_L_11:
;displays.pbas,41 :: 		end if
$00A4	$	displays_L_12:
;displays.pbas,42 :: 		dez = valorPorcent div 10
$00A4	$300A			MOVLW	10
$00A5	$00F4			MOVWF	STACK_4
$00A6	$01F5			CLRF	STACK_4+1
$00A7	$082C			MOVF	_valorporcent, 0
$00A8	$00F0			MOVWF	STACK_0
$00A9	$082D			MOVF	_valorporcent+1, 0
$00AA	$00F1			MOVWF	STACK_0+1
$00AB	$2567			CALL	_div_16x16_s
$00AC	$0870			MOVF	STACK_0, 0
$00AD	$00B8			MOVWF	FLOC_main+2
$00AE	$0871			MOVF	STACK_0+1, 0
$00AF	$00B9			MOVWF	FLOC_main+3
$00B0	$0838			MOVF	FLOC_main+2, 0
$00B1	$00AE			MOVWF	_dez
$00B2	$0839			MOVF	FLOC_main+3, 0
$00B3	$00AF			MOVWF	_dez+1
;displays.pbas,43 :: 		uni = valorPorcent - (dez * 10)
$00B4	$0838			MOVF	FLOC_main+2, 0
$00B5	$00F0			MOVWF	STACK_0
$00B6	$0839			MOVF	FLOC_main+3, 0
$00B7	$00F1			MOVWF	STACK_0+1
$00B8	$300A			MOVLW	10
$00B9	$00F4			MOVWF	STACK_4
$00BA	$01F5			CLRF	STACK_4+1
$00BB	$260A			CALL	_mul_16x16_s
$00BC	$0870			MOVF	STACK_0, 0
$00BD	$022C			SUBWF	_valorporcent, 0
$00BE	$00F0			MOVWF	STACK_0
$00BF	$0871			MOVF	STACK_0+1, 0
$00C0	$1C03			BTFSS	STATUS, C
$00C1	$3F01			ADDLW	1
$00C2	$022D			SUBWF	_valorporcent+1, 0
$00C3	$00F1			MOVWF	STACK_0+1
$00C4	$0870			MOVF	STACK_0, 0
$00C5	$00B0			MOVWF	_uni
$00C6	$0871			MOVF	STACK_0+1, 0
$00C7	$00B1			MOVWF	_uni+1
;displays.pbas,44 :: 		valorPortas = dez + (uni  * 16)
$00C8	$3004			MOVLW	4
$00C9	$00F4			MOVWF	STACK_4
$00CA	$0874			MOVF	STACK_4, 0
$00CB	$	L_main_5:
$00CB	$1903			BTFSC	STATUS, Z
$00CC	$28D2			GOTO	L_main_6
$00CD	$0DF0			RLF	STACK_0, 1
$00CE	$0DF1			RLF	STACK_0+1, 1
$00CF	$1070			BCF	STACK_0, 0
$00D0	$3FFF			ADDLW	255
$00D1	$28CB			GOTO	L_main_5
$00D2	$	L_main_6:
$00D2	$0870			MOVF	STACK_0, 0
$00D3	$0738			ADDWF	FLOC_main+2, 0
$00D4	$00B2			MOVWF	_valorportas
$00D5	$0839			MOVF	FLOC_main+3, 0
$00D6	$1803			BTFSC	STATUS, C
$00D7	$3F01			ADDLW	1
$00D8	$0771			ADDWF	STACK_0+1, 0
$00D9	$00B3			MOVWF	_valorportas+1
;displays.pbas,45 :: 		escrita = 0x42
$00DA	$3042			MOVLW	66
$00DB	$00B4			MOVWF	_escrita
$00DC	$01B5			CLRF	_escrita+1
;displays.pbas,46 :: 		gosub escreve_I2C
$00DD	$22BE			CALL	_main_escreve_i2c
$00DE	$	displays_L_8:
;displays.pbas,47 :: 		end if
$00DE	$	displays_L_9:
;displays.pbas,48 :: 		if (valorRecebido >= 20) And (valorRecebido < 26) then
$00DE	$3080			MOVLW	128
$00DF	$1303			BCF	STATUS, RP1
$00E0	$1283			BCF	STATUS, RP0
$00E1	$0629			XORWF	_valorrecebido+1, 0
$00E2	$00F2			MOVWF	STACK_2
$00E3	$3080			MOVLW	128
$00E4	$0272			SUBWF	STACK_2, 0
$00E5	$1D03			BTFSS	STATUS, Z
$00E6	$28E9			GOTO	L_main_7
$00E7	$3014			MOVLW	20
$00E8	$0228			SUBWF	_valorrecebido, 0
$00E9	$	L_main_7:
$00E9	$30FF			MOVLW	255
$00EA	$1C03			BTFSS	STATUS, C
$00EB	$3000			MOVLW	0
$00EC	$00F2			MOVWF	STACK_2
$00ED	$3080			MOVLW	128
$00EE	$0629			XORWF	_valorrecebido+1, 0
$00EF	$00F0			MOVWF	STACK_0
$00F0	$3080			MOVLW	128
$00F1	$0270			SUBWF	STACK_0, 0
$00F2	$1D03			BTFSS	STATUS, Z
$00F3	$28F6			GOTO	L_main_8
$00F4	$301A			MOVLW	26
$00F5	$0228			SUBWF	_valorrecebido, 0
$00F6	$	L_main_8:
$00F6	$30FF			MOVLW	255
$00F7	$1803			BTFSC	STATUS, C
$00F8	$3000			MOVLW	0
$00F9	$00F0			MOVWF	STACK_0
$00FA	$0872			MOVF	STACK_2, 0
$00FB	$05F0			ANDWF	STACK_0, 1
$00FC	$1903			BTFSC	STATUS, Z
$00FD	$296A			GOTO	displays_L_14
$00FE	$	displays_L_13:
;displays.pbas,49 :: 		valorRecebido = valorRecebido - 20
$00FE	$3014			MOVLW	20
$00FF	$0228			SUBWF	_valorrecebido, 0
$0100	$00F0			MOVWF	STACK_0
$0101	$3000			MOVLW	0
$0102	$1C03			BTFSS	STATUS, C
$0103	$3F01			ADDLW	1
$0104	$0229			SUBWF	_valorrecebido+1, 0
$0105	$00F1			MOVWF	STACK_0+1
$0106	$0870			MOVF	STACK_0, 0
$0107	$00A8			MOVWF	_valorrecebido
$0108	$0871			MOVF	STACK_0+1, 0
$0109	$00A9			MOVWF	_valorrecebido+1
;displays.pbas,50 :: 		valorConvertido = (valorRecebido * 255) / 5
$010A	$30FF			MOVLW	255
$010B	$00F4			MOVWF	STACK_4
$010C	$01F5			CLRF	STACK_4+1
$010D	$260A			CALL	_mul_16x16_s
$010E	$3005			MOVLW	5
$010F	$00F4			MOVWF	STACK_4
$0110	$01F5			CLRF	STACK_4+1
$0111	$2567			CALL	_div_16x16_s
$0112	$0870			MOVF	STACK_0, 0
$0113	$00AA			MOVWF	_valorconvertido
$0114	$0871			MOVF	STACK_0+1, 0
$0115	$00AB			MOVWF	_valorconvertido+1
;displays.pbas,51 :: 		valorPorcent = ((valorConvertido * 100) / 255)
$0116	$3064			MOVLW	100
$0117	$00F4			MOVWF	STACK_4
$0118	$01F5			CLRF	STACK_4+1
$0119	$260A			CALL	_mul_16x16_s
$011A	$30FF			MOVLW	255
$011B	$00F4			MOVWF	STACK_4
$011C	$01F5			CLRF	STACK_4+1
$011D	$2567			CALL	_div_16x16_s
$011E	$0870			MOVF	STACK_0, 0
$011F	$00AC			MOVWF	_valorporcent
$0120	$0871			MOVF	STACK_0+1, 0
$0121	$00AD			MOVWF	_valorporcent+1
;displays.pbas,53 :: 		if valorPorcent > 99 then
$0122	$3080			MOVLW	128
$0123	$00F2			MOVWF	STACK_2
$0124	$3080			MOVLW	128
$0125	$0671			XORWF	STACK_0+1, 0
$0126	$0272			SUBWF	STACK_2, 0
$0127	$1D03			BTFSS	STATUS, Z
$0128	$292B			GOTO	L_main_9
$0129	$0870			MOVF	STACK_0, 0
$012A	$3C63			SUBLW	99
$012B	$	L_main_9:
$012B	$1803			BTFSC	STATUS, C
$012C	$2930			GOTO	displays_L_17
$012D	$	displays_L_16:
;displays.pbas,54 :: 		valorPorcent = 99
$012D	$3063			MOVLW	99
$012E	$00AC			MOVWF	_valorporcent
$012F	$01AD			CLRF	_valorporcent+1
$0130	$	displays_L_17:
;displays.pbas,55 :: 		end if
$0130	$	displays_L_18:
;displays.pbas,57 :: 		dez = valorPorcent div 10
$0130	$300A			MOVLW	10
$0131	$00F4			MOVWF	STACK_4
$0132	$01F5			CLRF	STACK_4+1
$0133	$082C			MOVF	_valorporcent, 0
$0134	$00F0			MOVWF	STACK_0
$0135	$082D			MOVF	_valorporcent+1, 0
$0136	$00F1			MOVWF	STACK_0+1
$0137	$2567			CALL	_div_16x16_s
$0138	$0870			MOVF	STACK_0, 0
$0139	$00B8			MOVWF	FLOC_main+2
$013A	$0871			MOVF	STACK_0+1, 0
$013B	$00B9			MOVWF	FLOC_main+3
$013C	$0838			MOVF	FLOC_main+2, 0
$013D	$00AE			MOVWF	_dez
$013E	$0839			MOVF	FLOC_main+3, 0
$013F	$00AF			MOVWF	_dez+1
;displays.pbas,58 :: 		uni = valorPorcent - (dez * 10)
$0140	$0838			MOVF	FLOC_main+2, 0
$0141	$00F0			MOVWF	STACK_0
$0142	$0839			MOVF	FLOC_main+3, 0
$0143	$00F1			MOVWF	STACK_0+1
$0144	$300A			MOVLW	10
$0145	$00F4			MOVWF	STACK_4
$0146	$01F5			CLRF	STACK_4+1
$0147	$260A			CALL	_mul_16x16_s
$0148	$0870			MOVF	STACK_0, 0
$0149	$022C			SUBWF	_valorporcent, 0
$014A	$00F0			MOVWF	STACK_0
$014B	$0871			MOVF	STACK_0+1, 0
$014C	$1C03			BTFSS	STATUS, C
$014D	$3F01			ADDLW	1
$014E	$022D			SUBWF	_valorporcent+1, 0
$014F	$00F1			MOVWF	STACK_0+1
$0150	$0870			MOVF	STACK_0, 0
$0151	$00B0			MOVWF	_uni
$0152	$0871			MOVF	STACK_0+1, 0
$0153	$00B1			MOVWF	_uni+1
;displays.pbas,59 :: 		valorPortas = dez + (uni  * 16)
$0154	$3004			MOVLW	4
$0155	$00F4			MOVWF	STACK_4
$0156	$0874			MOVF	STACK_4, 0
$0157	$	L_main_10:
$0157	$1903			BTFSC	STATUS, Z
$0158	$295E			GOTO	L_main_11
$0159	$0DF0			RLF	STACK_0, 1
$015A	$0DF1			RLF	STACK_0+1, 1
$015B	$1070			BCF	STACK_0, 0
$015C	$3FFF			ADDLW	255
$015D	$2957			GOTO	L_main_10
$015E	$	L_main_11:
$015E	$0870			MOVF	STACK_0, 0
$015F	$0738			ADDWF	FLOC_main+2, 0
$0160	$00B2			MOVWF	_valorportas
$0161	$0839			MOVF	FLOC_main+3, 0
$0162	$1803			BTFSC	STATUS, C
$0163	$3F01			ADDLW	1
$0164	$0771			ADDWF	STACK_0+1, 0
$0165	$00B3			MOVWF	_valorportas+1
;displays.pbas,60 :: 		escrita = 0x44
$0166	$3044			MOVLW	68
$0167	$00B4			MOVWF	_escrita
$0168	$01B5			CLRF	_escrita+1
;displays.pbas,61 :: 		gosub escreve_I2C
$0169	$22BE			CALL	_main_escreve_i2c
$016A	$	displays_L_14:
;displays.pbas,62 :: 		end if
$016A	$	displays_L_15:
;displays.pbas,63 :: 		if (valorRecebido >= 30) And (valorRecebido < 36) then
$016A	$3080			MOVLW	128
$016B	$1303			BCF	STATUS, RP1
$016C	$1283			BCF	STATUS, RP0
$016D	$0629			XORWF	_valorrecebido+1, 0
$016E	$00F2			MOVWF	STACK_2
$016F	$3080			MOVLW	128
$0170	$0272			SUBWF	STACK_2, 0
$0171	$1D03			BTFSS	STATUS, Z
$0172	$2975			GOTO	L_main_12
$0173	$301E			MOVLW	30
$0174	$0228			SUBWF	_valorrecebido, 0
$0175	$	L_main_12:
$0175	$30FF			MOVLW	255
$0176	$1C03			BTFSS	STATUS, C
$0177	$3000			MOVLW	0
$0178	$00F2			MOVWF	STACK_2
$0179	$3080			MOVLW	128
$017A	$0629			XORWF	_valorrecebido+1, 0
$017B	$00F0			MOVWF	STACK_0
$017C	$3080			MOVLW	128
$017D	$0270			SUBWF	STACK_0, 0
$017E	$1D03			BTFSS	STATUS, Z
$017F	$2982			GOTO	L_main_13
$0180	$3024			MOVLW	36
$0181	$0228			SUBWF	_valorrecebido, 0
$0182	$	L_main_13:
$0182	$30FF			MOVLW	255
$0183	$1803			BTFSC	STATUS, C
$0184	$3000			MOVLW	0
$0185	$00F0			MOVWF	STACK_0
$0186	$0872			MOVF	STACK_2, 0
$0187	$05F0			ANDWF	STACK_0, 1
$0188	$1903			BTFSC	STATUS, Z
$0189	$29F6			GOTO	displays_L_20
$018A	$	displays_L_19:
;displays.pbas,64 :: 		valorRecebido = valorRecebido - 30
$018A	$301E			MOVLW	30
$018B	$0228			SUBWF	_valorrecebido, 0
$018C	$00F0			MOVWF	STACK_0
$018D	$3000			MOVLW	0
$018E	$1C03			BTFSS	STATUS, C
$018F	$3F01			ADDLW	1
$0190	$0229			SUBWF	_valorrecebido+1, 0
$0191	$00F1			MOVWF	STACK_0+1
$0192	$0870			MOVF	STACK_0, 0
$0193	$00A8			MOVWF	_valorrecebido
$0194	$0871			MOVF	STACK_0+1, 0
$0195	$00A9			MOVWF	_valorrecebido+1
;displays.pbas,65 :: 		valorConvertido = (valorRecebido * 255) / 5
$0196	$30FF			MOVLW	255
$0197	$00F4			MOVWF	STACK_4
$0198	$01F5			CLRF	STACK_4+1
$0199	$260A			CALL	_mul_16x16_s
$019A	$3005			MOVLW	5
$019B	$00F4			MOVWF	STACK_4
$019C	$01F5			CLRF	STACK_4+1
$019D	$2567			CALL	_div_16x16_s
$019E	$0870			MOVF	STACK_0, 0
$019F	$00AA			MOVWF	_valorconvertido
$01A0	$0871			MOVF	STACK_0+1, 0
$01A1	$00AB			MOVWF	_valorconvertido+1
;displays.pbas,66 :: 		valorPorcent = ((valorConvertido * 100) / 255)
$01A2	$3064			MOVLW	100
$01A3	$00F4			MOVWF	STACK_4
$01A4	$01F5			CLRF	STACK_4+1
$01A5	$260A			CALL	_mul_16x16_s
$01A6	$30FF			MOVLW	255
$01A7	$00F4			MOVWF	STACK_4
$01A8	$01F5			CLRF	STACK_4+1
$01A9	$2567			CALL	_div_16x16_s
$01AA	$0870			MOVF	STACK_0, 0
$01AB	$00AC			MOVWF	_valorporcent
$01AC	$0871			MOVF	STACK_0+1, 0
$01AD	$00AD			MOVWF	_valorporcent+1
;displays.pbas,68 :: 		if valorPorcent > 99 then
$01AE	$3080			MOVLW	128
$01AF	$00F2			MOVWF	STACK_2
$01B0	$3080			MOVLW	128
$01B1	$0671			XORWF	STACK_0+1, 0
$01B2	$0272			SUBWF	STACK_2, 0
$01B3	$1D03			BTFSS	STATUS, Z
$01B4	$29B7			GOTO	L_main_14
$01B5	$0870			MOVF	STACK_0, 0
$01B6	$3C63			SUBLW	99
$01B7	$	L_main_14:
$01B7	$1803			BTFSC	STATUS, C
$01B8	$29BC			GOTO	displays_L_23
$01B9	$	displays_L_22:
;displays.pbas,69 :: 		valorPorcent = 99
$01B9	$3063			MOVLW	99
$01BA	$00AC			MOVWF	_valorporcent
$01BB	$01AD			CLRF	_valorporcent+1
$01BC	$	displays_L_23:
;displays.pbas,70 :: 		end if
$01BC	$	displays_L_24:
;displays.pbas,72 :: 		dez = valorPorcent div 10
$01BC	$300A			MOVLW	10
$01BD	$00F4			MOVWF	STACK_4
$01BE	$01F5			CLRF	STACK_4+1
$01BF	$082C			MOVF	_valorporcent, 0
$01C0	$00F0			MOVWF	STACK_0
$01C1	$082D			MOVF	_valorporcent+1, 0
$01C2	$00F1			MOVWF	STACK_0+1
$01C3	$2567			CALL	_div_16x16_s
$01C4	$0870			MOVF	STACK_0, 0
$01C5	$00B8			MOVWF	FLOC_main+2
$01C6	$0871			MOVF	STACK_0+1, 0
$01C7	$00B9			MOVWF	FLOC_main+3
$01C8	$0838			MOVF	FLOC_main+2, 0
$01C9	$00AE			MOVWF	_dez
$01CA	$0839			MOVF	FLOC_main+3, 0
$01CB	$00AF			MOVWF	_dez+1
;displays.pbas,73 :: 		uni = valorPorcent - (dez * 10)
$01CC	$0838			MOVF	FLOC_main+2, 0
$01CD	$00F0			MOVWF	STACK_0
$01CE	$0839			MOVF	FLOC_main+3, 0
$01CF	$00F1			MOVWF	STACK_0+1
$01D0	$300A			MOVLW	10
$01D1	$00F4			MOVWF	STACK_4
$01D2	$01F5			CLRF	STACK_4+1
$01D3	$260A			CALL	_mul_16x16_s
$01D4	$0870			MOVF	STACK_0, 0
$01D5	$022C			SUBWF	_valorporcent, 0
$01D6	$00F0			MOVWF	STACK_0
$01D7	$0871			MOVF	STACK_0+1, 0
$01D8	$1C03			BTFSS	STATUS, C
$01D9	$3F01			ADDLW	1
$01DA	$022D			SUBWF	_valorporcent+1, 0
$01DB	$00F1			MOVWF	STACK_0+1
$01DC	$0870			MOVF	STACK_0, 0
$01DD	$00B0			MOVWF	_uni
$01DE	$0871			MOVF	STACK_0+1, 0
$01DF	$00B1			MOVWF	_uni+1
;displays.pbas,74 :: 		valorPortas = dez + (uni  * 16)
$01E0	$3004			MOVLW	4
$01E1	$00F4			MOVWF	STACK_4
$01E2	$0874			MOVF	STACK_4, 0
$01E3	$	L_main_15:
$01E3	$1903			BTFSC	STATUS, Z
$01E4	$29EA			GOTO	L_main_16
$01E5	$0DF0			RLF	STACK_0, 1
$01E6	$0DF1			RLF	STACK_0+1, 1
$01E7	$1070			BCF	STACK_0, 0
$01E8	$3FFF			ADDLW	255
$01E9	$29E3			GOTO	L_main_15
$01EA	$	L_main_16:
$01EA	$0870			MOVF	STACK_0, 0
$01EB	$0738			ADDWF	FLOC_main+2, 0
$01EC	$00B2			MOVWF	_valorportas
$01ED	$0839			MOVF	FLOC_main+3, 0
$01EE	$1803			BTFSC	STATUS, C
$01EF	$3F01			ADDLW	1
$01F0	$0771			ADDWF	STACK_0+1, 0
$01F1	$00B3			MOVWF	_valorportas+1
;displays.pbas,75 :: 		escrita = 0x46
$01F2	$3046			MOVLW	70
$01F3	$00B4			MOVWF	_escrita
$01F4	$01B5			CLRF	_escrita+1
;displays.pbas,76 :: 		gosub escreve_I2C
$01F5	$22BE			CALL	_main_escreve_i2c
$01F6	$	displays_L_20:
;displays.pbas,77 :: 		end if
$01F6	$	displays_L_21:
;displays.pbas,78 :: 		if (valorRecebido >= 40) And (valorRecebido < 46) then
$01F6	$3080			MOVLW	128
$01F7	$1303			BCF	STATUS, RP1
$01F8	$1283			BCF	STATUS, RP0
$01F9	$0629			XORWF	_valorrecebido+1, 0
$01FA	$00F2			MOVWF	STACK_2
$01FB	$3080			MOVLW	128
$01FC	$0272			SUBWF	STACK_2, 0
$01FD	$1D03			BTFSS	STATUS, Z
$01FE	$2A01			GOTO	L_main_17
$01FF	$3028			MOVLW	40
$0200	$0228			SUBWF	_valorrecebido, 0
$0201	$	L_main_17:
$0201	$30FF			MOVLW	255
$0202	$1C03			BTFSS	STATUS, C
$0203	$3000			MOVLW	0
$0204	$00F2			MOVWF	STACK_2
$0205	$3080			MOVLW	128
$0206	$0629			XORWF	_valorrecebido+1, 0
$0207	$00F0			MOVWF	STACK_0
$0208	$3080			MOVLW	128
$0209	$0270			SUBWF	STACK_0, 0
$020A	$1D03			BTFSS	STATUS, Z
$020B	$2A0E			GOTO	L_main_18
$020C	$302E			MOVLW	46
$020D	$0228			SUBWF	_valorrecebido, 0
$020E	$	L_main_18:
$020E	$30FF			MOVLW	255
$020F	$1803			BTFSC	STATUS, C
$0210	$3000			MOVLW	0
$0211	$00F0			MOVWF	STACK_0
$0212	$0872			MOVF	STACK_2, 0
$0213	$05F0			ANDWF	STACK_0, 1
$0214	$1903			BTFSC	STATUS, Z
$0215	$2A8E			GOTO	displays_L_26
$0216	$	displays_L_25:
;displays.pbas,79 :: 		valorRecebido = valorRecebido - 40
$0216	$3028			MOVLW	40
$0217	$0228			SUBWF	_valorrecebido, 0
$0218	$00F0			MOVWF	STACK_0
$0219	$3000			MOVLW	0
$021A	$1C03			BTFSS	STATUS, C
$021B	$3F01			ADDLW	1
$021C	$0229			SUBWF	_valorrecebido+1, 0
$021D	$00F1			MOVWF	STACK_0+1
$021E	$0870			MOVF	STACK_0, 0
$021F	$00A8			MOVWF	_valorrecebido
$0220	$0871			MOVF	STACK_0+1, 0
$0221	$00A9			MOVWF	_valorrecebido+1
;displays.pbas,80 :: 		valorConvertido = (valorRecebido * 255) / 5
$0222	$30FF			MOVLW	255
$0223	$00F4			MOVWF	STACK_4
$0224	$01F5			CLRF	STACK_4+1
$0225	$260A			CALL	_mul_16x16_s
$0226	$3005			MOVLW	5
$0227	$00F4			MOVWF	STACK_4
$0228	$01F5			CLRF	STACK_4+1
$0229	$2567			CALL	_div_16x16_s
$022A	$0870			MOVF	STACK_0, 0
$022B	$00AA			MOVWF	_valorconvertido
$022C	$0871			MOVF	STACK_0+1, 0
$022D	$00AB			MOVWF	_valorconvertido+1
;displays.pbas,81 :: 		valorPorcent = ((valorConvertido * 100) / 255)
$022E	$3064			MOVLW	100
$022F	$00F4			MOVWF	STACK_4
$0230	$01F5			CLRF	STACK_4+1
$0231	$260A			CALL	_mul_16x16_s
$0232	$30FF			MOVLW	255
$0233	$00F4			MOVWF	STACK_4
$0234	$01F5			CLRF	STACK_4+1
$0235	$2567			CALL	_div_16x16_s
$0236	$0870			MOVF	STACK_0, 0
$0237	$00AC			MOVWF	_valorporcent
$0238	$0871			MOVF	STACK_0+1, 0
$0239	$00AD			MOVWF	_valorporcent+1
;displays.pbas,83 :: 		if valorPorcent > 99 then
$023A	$3080			MOVLW	128
$023B	$00F2			MOVWF	STACK_2
$023C	$3080			MOVLW	128
$023D	$0671			XORWF	STACK_0+1, 0
$023E	$0272			SUBWF	STACK_2, 0
$023F	$1D03			BTFSS	STATUS, Z
$0240	$2A43			GOTO	L_main_19
$0241	$0870			MOVF	STACK_0, 0
$0242	$3C63			SUBLW	99
$0243	$	L_main_19:
$0243	$1803			BTFSC	STATUS, C
$0244	$2A48			GOTO	displays_L_29
$0245	$	displays_L_28:
;displays.pbas,84 :: 		valorPorcent = 99
$0245	$3063			MOVLW	99
$0246	$00AC			MOVWF	_valorporcent
$0247	$01AD			CLRF	_valorporcent+1
$0248	$	displays_L_29:
;displays.pbas,85 :: 		end if
$0248	$	displays_L_30:
;displays.pbas,87 :: 		dez = valorPorcent div 10
$0248	$300A			MOVLW	10
$0249	$00F4			MOVWF	STACK_4
$024A	$01F5			CLRF	STACK_4+1
$024B	$082C			MOVF	_valorporcent, 0
$024C	$00F0			MOVWF	STACK_0
$024D	$082D			MOVF	_valorporcent+1, 0
$024E	$00F1			MOVWF	STACK_0+1
$024F	$2567			CALL	_div_16x16_s
$0250	$0870			MOVF	STACK_0, 0
$0251	$00B8			MOVWF	FLOC_main+2
$0252	$0871			MOVF	STACK_0+1, 0
$0253	$00B9			MOVWF	FLOC_main+3
$0254	$0838			MOVF	FLOC_main+2, 0
$0255	$00AE			MOVWF	_dez
$0256	$0839			MOVF	FLOC_main+3, 0
$0257	$00AF			MOVWF	_dez+1
;displays.pbas,88 :: 		uni = valorPorcent - (dez * 10)
$0258	$0838			MOVF	FLOC_main+2, 0
$0259	$00F0			MOVWF	STACK_0
$025A	$0839			MOVF	FLOC_main+3, 0
$025B	$00F1			MOVWF	STACK_0+1
$025C	$300A			MOVLW	10
$025D	$00F4			MOVWF	STACK_4
$025E	$01F5			CLRF	STACK_4+1
$025F	$260A			CALL	_mul_16x16_s
$0260	$0870			MOVF	STACK_0, 0
$0261	$022C			SUBWF	_valorporcent, 0
$0262	$00F0			MOVWF	STACK_0
$0263	$0871			MOVF	STACK_0+1, 0
$0264	$1C03			BTFSS	STATUS, C
$0265	$3F01			ADDLW	1
$0266	$022D			SUBWF	_valorporcent+1, 0
$0267	$00F1			MOVWF	STACK_0+1
$0268	$0870			MOVF	STACK_0, 0
$0269	$00B0			MOVWF	_uni
$026A	$0871			MOVF	STACK_0+1, 0
$026B	$00B1			MOVWF	_uni+1
;displays.pbas,89 :: 		valorPortas = dez + (uni  * 16)
$026C	$3004			MOVLW	4
$026D	$00F4			MOVWF	STACK_4
$026E	$0874			MOVF	STACK_4, 0
$026F	$	L_main_20:
$026F	$1903			BTFSC	STATUS, Z
$0270	$2A76			GOTO	L_main_21
$0271	$0DF0			RLF	STACK_0, 1
$0272	$0DF1			RLF	STACK_0+1, 1
$0273	$1070			BCF	STACK_0, 0
$0274	$3FFF			ADDLW	255
$0275	$2A6F			GOTO	L_main_20
$0276	$	L_main_21:
$0276	$0870			MOVF	STACK_0, 0
$0277	$0738			ADDWF	FLOC_main+2, 0
$0278	$00B2			MOVWF	_valorportas
$0279	$0839			MOVF	FLOC_main+3, 0
$027A	$1803			BTFSC	STATUS, C
$027B	$3F01			ADDLW	1
$027C	$0771			ADDWF	STACK_0+1, 0
$027D	$00B3			MOVWF	_valorportas+1
;displays.pbas,90 :: 		escrita = 0x42
$027E	$3042			MOVLW	66
$027F	$00B4			MOVWF	_escrita
$0280	$01B5			CLRF	_escrita+1
;displays.pbas,91 :: 		gosub escreve_I2C
$0281	$22BE			CALL	_main_escreve_i2c
;displays.pbas,92 :: 		escrita = 0x44
$0282	$3044			MOVLW	68
$0283	$1303			BCF	STATUS, RP1
$0284	$1283			BCF	STATUS, RP0
$0285	$00B4			MOVWF	_escrita
$0286	$01B5			CLRF	_escrita+1
;displays.pbas,93 :: 		gosub escreve_I2C
$0287	$22BE			CALL	_main_escreve_i2c
;displays.pbas,94 :: 		escrita = 0x46
$0288	$3046			MOVLW	70
$0289	$1303			BCF	STATUS, RP1
$028A	$1283			BCF	STATUS, RP0
$028B	$00B4			MOVWF	_escrita
$028C	$01B5			CLRF	_escrita+1
;displays.pbas,95 :: 		gosub escreve_I2C
$028D	$22BE			CALL	_main_escreve_i2c
$028E	$	displays_L_26:
;displays.pbas,96 :: 		end if
$028E	$	displays_L_27:
$028E	$	displays_L_5:
;displays.pbas,97 :: 		end if
$028E	$	displays_L_6:
;displays.pbas,99 :: 		Usart_Write_Text(recebe)
$028E	$3021			MOVLW	_recebe
$028F	$1303			BCF	STATUS, RP1
$0290	$1283			BCF	STATUS, RP0
$0291	$00BA			MOVWF	FARG_Usart_Write_Text
$0292	$158A			BSF	PCLATH, 3
$0293	$2069			CALL	_usart_write_text
$0294	$118A			BCF	PCLATH, 3
;displays.pbas,100 :: 		delay_ms(5)
$0295	$3007			MOVLW	7
$0296	$00FB			MOVWF	STACK_11
$0297	$30FF			MOVLW	255
$0298	$00FA			MOVWF	STACK_10
$0299	$0BFB			DECFSZ	STACK_11, F
$029A	$2A9C			GOTO	$+2
$029B	$2A9F			GOTO	$+4
$029C	$0BFA			DECFSZ	STACK_10, F
$029D	$2A9C			GOTO	$-1
$029E	$2A99			GOTO	$-5
$029F	$3078			MOVLW	120
$02A0	$00FA			MOVWF	STACK_10
$02A1	$0BFA			DECFSZ	STACK_10, F
$02A2	$2AA1			GOTO	$-1
$02A3	$0000			NOP
$02A4	$0000			NOP
;displays.pbas,101 :: 		USART_Write_Text("/")
$02A5	$302F			MOVLW	47
$02A6	$00B6			MOVWF	?main_Local_Text+0
$02A7	$01B7			CLRF	?main_Local_Text+1
$02A8	$3036			MOVLW	?main_Local_Text
$02A9	$00BA			MOVWF	FARG_Usart_Write_Text
$02AA	$158A			BSF	PCLATH, 3
$02AB	$2069			CALL	_usart_write_text
$02AC	$118A			BCF	PCLATH, 3
;displays.pbas,102 :: 		delay_ms(5)
$02AD	$3007			MOVLW	7
$02AE	$00FB			MOVWF	STACK_11
$02AF	$30FF			MOVLW	255
$02B0	$00FA			MOVWF	STACK_10
$02B1	$0BFB			DECFSZ	STACK_11, F
$02B2	$2AB4			GOTO	$+2
$02B3	$2AB7			GOTO	$+4
$02B4	$0BFA			DECFSZ	STACK_10, F
$02B5	$2AB4			GOTO	$-1
$02B6	$2AB1			GOTO	$-5
$02B7	$3078			MOVLW	120
$02B8	$00FA			MOVWF	STACK_10
$02B9	$0BFA			DECFSZ	STACK_10, F
$02BA	$2AB9			GOTO	$-1
$02BB	$0000			NOP
$02BC	$0000			NOP
$02BD	$	displays_L_2:
;displays.pbas,103 :: 		end if
$02BD	$	displays_L_3:
;displays.pbas,106 :: 		goto executa
$02BD	$281F			GOTO	_main_executa
;displays.pbas,108 :: 		escreve_I2C:
$02BE	$	_main_escreve_i2c:
;displays.pbas,110 :: 		I2C_Start
$02BE	$268E			CALL	_i2c_start
;displays.pbas,111 :: 		I2C_Wr(escrita)
$02BF	$0834			MOVF	_escrita, 0
$02C0	$00BA			MOVWF	FARG_I2C_Wr
$02C1	$2701			CALL	_i2c_wr
;displays.pbas,112 :: 		I2C_Wr(valorPortas)
$02C2	$0832			MOVF	_valorportas, 0
$02C3	$00BA			MOVWF	FARG_I2C_Wr
$02C4	$2701			CALL	_i2c_wr
;displays.pbas,113 :: 		I2C_Stop
$02C5	$158A			BSF	PCLATH, 3
$02C6	$20C9			CALL	_i2c_stop
$02C7	$118A			BCF	PCLATH, 3
;displays.pbas,114 :: 		delay_ms(10)
$02C8	$300D			MOVLW	13
$02C9	$00FB			MOVWF	STACK_11
$02CA	$30FF			MOVLW	255
$02CB	$00FA			MOVWF	STACK_10
$02CC	$0BFB			DECFSZ	STACK_11, F
$02CD	$2ACF			GOTO	$+2
$02CE	$2AD2			GOTO	$+4
$02CF	$0BFA			DECFSZ	STACK_10, F
$02D0	$2ACF			GOTO	$-1
$02D1	$2ACC			GOTO	$-5
$02D2	$30F3			MOVLW	243
$02D3	$00FA			MOVWF	STACK_10
$02D4	$0BFA			DECFSZ	STACK_10, F
$02D5	$2AD4			GOTO	$-1
$02D6	$0000			NOP
;displays.pbas,116 :: 		return
$02D7	$0008			RETURN
$02D8	$	displays_L_0:
$02D8	$2AD8			GOTO	$
