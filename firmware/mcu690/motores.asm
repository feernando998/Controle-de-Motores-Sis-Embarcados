;  Assembly code generated by mikroVirtualMachine - V. 5.0.0.3
;  Date/Time: 15/09/2020 17:36:11
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$0675	$	_mul_32x32_u:
$0675	$1303			BCF	STATUS, RP1
$0676	$1283			BCF	STATUS, RP0
;math.ppas,1570 :: 		
;math.ppas,1578 :: 		
$0677	$3022			MOVLW	34
;math.ppas,1579 :: 		
$0678	$00FC			MOVWF	STACK_12
;math.ppas,1580 :: 		
$0679	$01F8			CLRF	STACK_8
;math.ppas,1581 :: 		
$067A	$01F9			CLRF	STACK_9
;math.ppas,1582 :: 		
$067B	$01FA			CLRF	STACK_10
;math.ppas,1584 :: 		
$067C	$01FB			CLRF	STACK_11
;math.ppas,1588 :: 		
$067D	$	_NEXT:
;math.ppas,1589 :: 		
$067D	$03FC			DECF	STACK_12, F
;math.ppas,1590 :: 		
$067E	$1903			BTFSC	STATUS, Z
;math.ppas,1591 :: 		
$067F	$2EAB			GOTO	_EXIT2
;math.ppas,1593 :: 		
$0680	$1003			BCF	STATUS, C
;math.ppas,1602 :: 		
$0681	$	_LOOP:
;math.ppas,1603 :: 		
$0681	$0CFB			RRF	STACK_11, F
;math.ppas,1604 :: 		
$0682	$0CFA			RRF	STACK_10, F
;math.ppas,1605 :: 		
$0683	$0CF9			RRF	STACK_9, F
;math.ppas,1606 :: 		
$0684	$0CF8			RRF	STACK_8, F
;math.ppas,1607 :: 		
$0685	$0CF3			RRF	STACK_3, F
;math.ppas,1608 :: 		
$0686	$0CF2			RRF	STACK_2, F
;math.ppas,1609 :: 		
$0687	$0CF1			RRF	STACK_1, F
;math.ppas,1614 :: 		
$0688	$0CF0			RRF	STACK_0, F
;math.ppas,1615 :: 		
$0689	$1C03			BTFSS	STATUS, C
;math.ppas,1616 :: 		
$068A	$2E7D			GOTO	_NEXT
;math.ppas,1617 :: 		
$068B	$03FC			DECF	STACK_12, F
;math.ppas,1618 :: 		
$068C	$1903			BTFSC	STATUS, Z
;math.ppas,1625 :: 		
$068D	$2E9D			GOTO	_EXIT1
;math.ppas,1626 :: 		
$068E	$0874			MOVF	STACK_4, W
;math.ppas,1627 :: 		
$068F	$07F8			ADDWF	STACK_8, F
;math.ppas,1628 :: 		
$0690	$0875			MOVF	STACK_5, W
;math.ppas,1629 :: 		
$0691	$1803			BTFSC	STATUS, C
;math.ppas,1630 :: 		
$0692	$0F75			INCFSZ	STACK_5, W
;math.ppas,1631 :: 		
$0693	$07F9			ADDWF	STACK_9, F
;math.ppas,1632 :: 		
$0694	$0876			MOVF	STACK_6, W
;math.ppas,1633 :: 		
$0695	$1803			BTFSC	STATUS, C
;math.ppas,1634 :: 		
$0696	$0F76			INCFSZ	STACK_6, W
;math.ppas,1635 :: 		
$0697	$07FA			ADDWF	STACK_10, F
;math.ppas,1636 :: 		
$0698	$0877			MOVF	STACK_7, W
;math.ppas,1637 :: 		
$0699	$1803			BTFSC	STATUS, C
;math.ppas,1638 :: 		
$069A	$0F77			INCFSZ	STACK_7, W
;math.ppas,1640 :: 		
$069B	$07FB			ADDWF	STACK_11, F
;math.ppas,1642 :: 		
$069C	$2E81			GOTO	_LOOP
;math.ppas,1647 :: 		
$069D	$	_EXIT1:
;math.ppas,1648 :: 		
$069D	$0874			MOVF	STACK_4, W
;math.ppas,1649 :: 		
$069E	$07F8			ADDWF	STACK_8, F
;math.ppas,1650 :: 		
$069F	$0875			MOVF	STACK_5, W
;math.ppas,1651 :: 		
$06A0	$1803			BTFSC	STATUS, C
;math.ppas,1652 :: 		
$06A1	$0F75			INCFSZ	STACK_5, W
;math.ppas,1653 :: 		
$06A2	$07F9			ADDWF	STACK_9, F
;math.ppas,1654 :: 		
$06A3	$0876			MOVF	STACK_6, W
;math.ppas,1655 :: 		
$06A4	$1803			BTFSC	STATUS, C
;math.ppas,1656 :: 		
$06A5	$0F76			INCFSZ	STACK_6, W
;math.ppas,1657 :: 		
$06A6	$07FA			ADDWF	STACK_10, F
;math.ppas,1658 :: 		
$06A7	$0877			MOVF	STACK_7, W
;math.ppas,1659 :: 		
$06A8	$1803			BTFSC	STATUS, C
;math.ppas,1660 :: 		
$06A9	$0F77			INCFSZ	STACK_7, W
;math.ppas,1663 :: 		
$06AA	$07FB			ADDWF	STACK_11, F
;math.ppas,1664 :: 		
$06AB	$	_EXIT2:
;math.ppas,1665 :: 		
$06AB	$	math_L_13:
;math.ppas,1666 :: 		
$06AB	$0008			RETURN
$0186	$	_sdiv3232l:
$0186	$1303			BCF	STATUS, RP1
$0187	$1283			BCF	STATUS, RP0
;math.ppas,539 :: 		
;math.ppas,541 :: 		
$0188	$0874			MOVF	STACK_4, W
;math.ppas,542 :: 		
$0189	$02F8			SUBWF	STACK_8, F
;math.ppas,543 :: 		
$018A	$0875			MOVF	STACK_5, W
;math.ppas,544 :: 		
$018B	$1C03			BTFSS	STATUS, C
;math.ppas,545 :: 		
$018C	$0F75			INCFSZ	STACK_5, W
;math.ppas,546 :: 		
$018D	$02F9			SUBWF	STACK_9, F
;math.ppas,547 :: 		
$018E	$0876			MOVF	STACK_6, W
;math.ppas,548 :: 		
$018F	$1C03			BTFSS	STATUS, C
;math.ppas,549 :: 		
$0190	$0F76			INCFSZ	STACK_6, W
;math.ppas,550 :: 		
$0191	$02FA			SUBWF	STACK_10, F
;math.ppas,551 :: 		
$0192	$0877			MOVF	STACK_7, W
;math.ppas,552 :: 		
$0193	$1C03			BTFSS	STATUS, C
;math.ppas,553 :: 		
$0194	$0F77			INCFSZ	STACK_7, W
;math.ppas,554 :: 		
$0195	$02FB			SUBWF	STACK_11, F
;math.ppas,556 :: 		
$0196	$0DF3			RLF	STACK_3, F
;math.ppas,557 :: 		
$0197	$3007			MOVLW	7
;math.ppas,559 :: 		
$0198	$00FC			MOVWF	STACK_12
;math.ppas,560 :: 		
$0199	$	LOOPS3232A:
;math.ppas,561 :: 		
$0199	$0D73			RLF	STACK_3, W
;math.ppas,562 :: 		
$019A	$0DF8			RLF	STACK_8, F
;math.ppas,563 :: 		
$019B	$0DF9			RLF	STACK_9, F
;math.ppas,564 :: 		
$019C	$0DFA			RLF	STACK_10, F
;math.ppas,565 :: 		
$019D	$0DFB			RLF	STACK_11, F
;math.ppas,566 :: 		
$019E	$0874			MOVF	STACK_4, W
;math.ppas,567 :: 		
$019F	$1C73			BTFSS	STACK_3, 0
;math.ppas,569 :: 		
$01A0	$29AF			GOTO	SADD22LA
;math.ppas,570 :: 		
$01A1	$02F8			SUBWF	STACK_8, F
;math.ppas,571 :: 		
$01A2	$0875			MOVF	STACK_5, W
;math.ppas,572 :: 		
$01A3	$1C03			BTFSS	STATUS, C
;math.ppas,573 :: 		
$01A4	$0F75			INCFSZ	STACK_5, W
;math.ppas,574 :: 		
$01A5	$02F9			SUBWF	STACK_9, F
;math.ppas,575 :: 		
$01A6	$0876			MOVF	STACK_6, W
;math.ppas,576 :: 		
$01A7	$1C03			BTFSS	STATUS, C
;math.ppas,577 :: 		
$01A8	$0F76			INCFSZ	STACK_6, W
;math.ppas,578 :: 		
$01A9	$02FA			SUBWF	STACK_10, F
;math.ppas,579 :: 		
$01AA	$0877			MOVF	STACK_7, W
;math.ppas,580 :: 		
$01AB	$1C03			BTFSS	STATUS, C
;math.ppas,581 :: 		
$01AC	$0F77			INCFSZ	STACK_7, W
;math.ppas,582 :: 		
$01AD	$02FB			SUBWF	STACK_11, F
;math.ppas,584 :: 		
$01AE	$29BC			GOTO	SOK22LA
;math.ppas,585 :: 		
$01AF	$	SADD22LA:
;math.ppas,586 :: 		
$01AF	$07F8			ADDWF	STACK_8, F
;math.ppas,587 :: 		
$01B0	$0875			MOVF	STACK_5, W
;math.ppas,588 :: 		
$01B1	$1803			BTFSC	STATUS, C
;math.ppas,589 :: 		
$01B2	$0F75			INCFSZ	STACK_5, W
;math.ppas,590 :: 		
$01B3	$07F9			ADDWF	STACK_9, F
;math.ppas,591 :: 		
$01B4	$0876			MOVF	STACK_6, W
;math.ppas,592 :: 		
$01B5	$1803			BTFSC	STATUS, C
;math.ppas,593 :: 		
$01B6	$0F76			INCFSZ	STACK_6, W
;math.ppas,594 :: 		
$01B7	$07FA			ADDWF	STACK_10, F
;math.ppas,595 :: 		
$01B8	$0877			MOVF	STACK_7, W
;math.ppas,596 :: 		
$01B9	$1803			BTFSC	STATUS, C
;math.ppas,597 :: 		
$01BA	$0F77			INCFSZ	STACK_7, W
;math.ppas,599 :: 		
$01BB	$07FB			ADDWF	STACK_11, F
;math.ppas,600 :: 		
$01BC	$	SOK22LA:
;math.ppas,602 :: 		
$01BC	$0DF3			RLF	STACK_3, F
;math.ppas,603 :: 		
$01BD	$0BFC			DECFSZ	STACK_12, F
;math.ppas,605 :: 		
$01BE	$2999			GOTO	LOOPS3232A
;math.ppas,606 :: 		
$01BF	$0D72			RLF	STACK_2, W
;math.ppas,607 :: 		
$01C0	$0DF8			RLF	STACK_8, F
;math.ppas,608 :: 		
$01C1	$0DF9			RLF	STACK_9, F
;math.ppas,609 :: 		
$01C2	$0DFA			RLF	STACK_10, F
;math.ppas,610 :: 		
$01C3	$0DFB			RLF	STACK_11, F
;math.ppas,611 :: 		
$01C4	$0874			MOVF	STACK_4, W
;math.ppas,612 :: 		
$01C5	$1C73			BTFSS	STACK_3, 0
;math.ppas,614 :: 		
$01C6	$29D5			GOTO	SADD22L8
;math.ppas,615 :: 		
$01C7	$02F8			SUBWF	STACK_8, F
;math.ppas,616 :: 		
$01C8	$0875			MOVF	STACK_5, W
;math.ppas,617 :: 		
$01C9	$1C03			BTFSS	STATUS, C
;math.ppas,618 :: 		
$01CA	$0F75			INCFSZ	STACK_5, W
;math.ppas,619 :: 		
$01CB	$02F9			SUBWF	STACK_9, F
;math.ppas,620 :: 		
$01CC	$0876			MOVF	STACK_6, W
;math.ppas,621 :: 		
$01CD	$1C03			BTFSS	STATUS, C
;math.ppas,622 :: 		
$01CE	$0F76			INCFSZ	STACK_6, W
;math.ppas,623 :: 		
$01CF	$02FA			SUBWF	STACK_10, F
;math.ppas,624 :: 		
$01D0	$0877			MOVF	STACK_7, W
;math.ppas,625 :: 		
$01D1	$1C03			BTFSS	STATUS, C
;math.ppas,626 :: 		
$01D2	$0F77			INCFSZ	STACK_7, W
;math.ppas,627 :: 		
$01D3	$02FB			SUBWF	STACK_11, F
;math.ppas,629 :: 		
$01D4	$29E2			GOTO	SOK22L8
;math.ppas,630 :: 		
$01D5	$	SADD22L8:
;math.ppas,631 :: 		
$01D5	$07F8			ADDWF	STACK_8, F
;math.ppas,632 :: 		
$01D6	$0875			MOVF	STACK_5, W
;math.ppas,633 :: 		
$01D7	$1803			BTFSC	STATUS, C
;math.ppas,634 :: 		
$01D8	$0F75			INCFSZ	STACK_5, W
;math.ppas,635 :: 		
$01D9	$07F9			ADDWF	STACK_9, F
;math.ppas,636 :: 		
$01DA	$0876			MOVF	STACK_6, W
;math.ppas,637 :: 		
$01DB	$1803			BTFSC	STATUS, C
;math.ppas,638 :: 		
$01DC	$0F76			INCFSZ	STACK_6, W
;math.ppas,639 :: 		
$01DD	$07FA			ADDWF	STACK_10, F
;math.ppas,640 :: 		
$01DE	$0877			MOVF	STACK_7, W
;math.ppas,641 :: 		
$01DF	$1803			BTFSC	STATUS, C
;math.ppas,642 :: 		
$01E0	$0F77			INCFSZ	STACK_7, W
;math.ppas,644 :: 		
$01E1	$07FB			ADDWF	STACK_11, F
;math.ppas,645 :: 		
$01E2	$	SOK22L8:
;math.ppas,647 :: 		
$01E2	$0DF2			RLF	STACK_2, F
;math.ppas,648 :: 		
$01E3	$3007			MOVLW	7
;math.ppas,650 :: 		
$01E4	$00FC			MOVWF	STACK_12
;math.ppas,651 :: 		
$01E5	$	LOOPS3232B:
;math.ppas,652 :: 		
$01E5	$0D72			RLF	STACK_2, W
;math.ppas,653 :: 		
$01E6	$0DF8			RLF	STACK_8, F
;math.ppas,654 :: 		
$01E7	$0DF9			RLF	STACK_9, F
;math.ppas,655 :: 		
$01E8	$0DFA			RLF	STACK_10, F
;math.ppas,656 :: 		
$01E9	$0DFB			RLF	STACK_11, F
;math.ppas,657 :: 		
$01EA	$0874			MOVF	STACK_4, W
;math.ppas,658 :: 		
$01EB	$1C72			BTFSS	STACK_2, 0
;math.ppas,660 :: 		
$01EC	$29FB			GOTO	SADD22LB
;math.ppas,661 :: 		
$01ED	$02F8			SUBWF	STACK_8, F
;math.ppas,662 :: 		
$01EE	$0875			MOVF	STACK_5, W
;math.ppas,663 :: 		
$01EF	$1C03			BTFSS	STATUS, C
;math.ppas,664 :: 		
$01F0	$0F75			INCFSZ	STACK_5, W
;math.ppas,665 :: 		
$01F1	$02F9			SUBWF	STACK_9, F
;math.ppas,666 :: 		
$01F2	$0876			MOVF	STACK_6, W
;math.ppas,667 :: 		
$01F3	$1C03			BTFSS	STATUS, C
;math.ppas,668 :: 		
$01F4	$0F76			INCFSZ	STACK_6, W
;math.ppas,669 :: 		
$01F5	$02FA			SUBWF	STACK_10, F
;math.ppas,670 :: 		
$01F6	$0877			MOVF	STACK_7, W
;math.ppas,671 :: 		
$01F7	$1C03			BTFSS	STATUS, C
;math.ppas,672 :: 		
$01F8	$0F77			INCFSZ	STACK_7, W
;math.ppas,673 :: 		
$01F9	$02FB			SUBWF	STACK_11, F
;math.ppas,675 :: 		
$01FA	$2A08			GOTO	SOK22LB
;math.ppas,676 :: 		
$01FB	$	SADD22LB:
;math.ppas,677 :: 		
$01FB	$07F8			ADDWF	STACK_8, F
;math.ppas,678 :: 		
$01FC	$0875			MOVF	STACK_5, W
;math.ppas,679 :: 		
$01FD	$1803			BTFSC	STATUS, C
;math.ppas,680 :: 		
$01FE	$0F75			INCFSZ	STACK_5, W
;math.ppas,681 :: 		
$01FF	$07F9			ADDWF	STACK_9, F
;math.ppas,682 :: 		
$0200	$0876			MOVF	STACK_6, W
;math.ppas,683 :: 		
$0201	$1803			BTFSC	STATUS, C
;math.ppas,684 :: 		
$0202	$0F76			INCFSZ	STACK_6, W
;math.ppas,685 :: 		
$0203	$07FA			ADDWF	STACK_10, F
;math.ppas,686 :: 		
$0204	$0877			MOVF	STACK_7, W
;math.ppas,687 :: 		
$0205	$1803			BTFSC	STATUS, C
;math.ppas,688 :: 		
$0206	$0F77			INCFSZ	STACK_7, W
;math.ppas,690 :: 		
$0207	$07FB			ADDWF	STACK_11, F
;math.ppas,691 :: 		
$0208	$	SOK22LB:
;math.ppas,693 :: 		
$0208	$0DF2			RLF	STACK_2, F
;math.ppas,694 :: 		
$0209	$0BFC			DECFSZ	STACK_12, F
;math.ppas,696 :: 		
$020A	$29E5			GOTO	LOOPS3232B
;math.ppas,697 :: 		
$020B	$0D71			RLF	STACK_1, W
;math.ppas,698 :: 		
$020C	$0DF8			RLF	STACK_8, F
;math.ppas,699 :: 		
$020D	$0DF9			RLF	STACK_9, F
;math.ppas,700 :: 		
$020E	$0DFA			RLF	STACK_10, F
;math.ppas,701 :: 		
$020F	$0DFB			RLF	STACK_11, F
;math.ppas,702 :: 		
$0210	$0874			MOVF	STACK_4, W
;math.ppas,703 :: 		
$0211	$1C72			BTFSS	STACK_2, 0
;math.ppas,705 :: 		
$0212	$2A21			GOTO	SADD22L16
;math.ppas,706 :: 		
$0213	$02F8			SUBWF	STACK_8, F
;math.ppas,707 :: 		
$0214	$0875			MOVF	STACK_5, W
;math.ppas,708 :: 		
$0215	$1C03			BTFSS	STATUS, C
;math.ppas,709 :: 		
$0216	$0F75			INCFSZ	STACK_5, W
;math.ppas,710 :: 		
$0217	$02F9			SUBWF	STACK_9, F
;math.ppas,711 :: 		
$0218	$0876			MOVF	STACK_6, W
;math.ppas,712 :: 		
$0219	$1C03			BTFSS	STATUS, C
;math.ppas,713 :: 		
$021A	$0F76			INCFSZ	STACK_6, W
;math.ppas,714 :: 		
$021B	$02FA			SUBWF	STACK_10, F
;math.ppas,715 :: 		
$021C	$0877			MOVF	STACK_7, W
;math.ppas,716 :: 		
$021D	$1C03			BTFSS	STATUS, C
;math.ppas,717 :: 		
$021E	$0F77			INCFSZ	STACK_7, W
;math.ppas,718 :: 		
$021F	$02FB			SUBWF	STACK_11, F
;math.ppas,720 :: 		
$0220	$2A2E			GOTO	SOK22L16
;math.ppas,721 :: 		
$0221	$	SADD22L16:
;math.ppas,722 :: 		
$0221	$07F8			ADDWF	STACK_8, F
;math.ppas,723 :: 		
$0222	$0875			MOVF	STACK_5, W
;math.ppas,724 :: 		
$0223	$1803			BTFSC	STATUS, C
;math.ppas,725 :: 		
$0224	$0F75			INCFSZ	STACK_5, W
;math.ppas,726 :: 		
$0225	$07F9			ADDWF	STACK_9, F
;math.ppas,727 :: 		
$0226	$0876			MOVF	STACK_6, W
;math.ppas,728 :: 		
$0227	$1803			BTFSC	STATUS, C
;math.ppas,729 :: 		
$0228	$0F76			INCFSZ	STACK_6, W
;math.ppas,730 :: 		
$0229	$07FA			ADDWF	STACK_10, F
;math.ppas,731 :: 		
$022A	$0877			MOVF	STACK_7, W
;math.ppas,732 :: 		
$022B	$1803			BTFSC	STATUS, C
;math.ppas,733 :: 		
$022C	$0F77			INCFSZ	STACK_7, W
;math.ppas,735 :: 		
$022D	$07FB			ADDWF	STACK_11, F
;math.ppas,736 :: 		
$022E	$	SOK22L16:
;math.ppas,738 :: 		
$022E	$0DF1			RLF	STACK_1, F
;math.ppas,739 :: 		
$022F	$3007			MOVLW	7
;math.ppas,741 :: 		
$0230	$00FC			MOVWF	STACK_12
;math.ppas,742 :: 		
$0231	$	LOOPS3232C:
;math.ppas,743 :: 		
$0231	$0D71			RLF	STACK_1, W
;math.ppas,744 :: 		
$0232	$0DF8			RLF	STACK_8, F
;math.ppas,745 :: 		
$0233	$0DF9			RLF	STACK_9, F
;math.ppas,746 :: 		
$0234	$0DFA			RLF	STACK_10, F
;math.ppas,747 :: 		
$0235	$0DFB			RLF	STACK_11, F
;math.ppas,748 :: 		
$0236	$0874			MOVF	STACK_4, W
;math.ppas,749 :: 		
$0237	$1C71			BTFSS	STACK_1, 0
;math.ppas,751 :: 		
$0238	$2A47			GOTO	SADD22LC
;math.ppas,752 :: 		
$0239	$02F8			SUBWF	STACK_8, F
;math.ppas,753 :: 		
$023A	$0875			MOVF	STACK_5, W
;math.ppas,754 :: 		
$023B	$1C03			BTFSS	STATUS, C
;math.ppas,755 :: 		
$023C	$0F75			INCFSZ	STACK_5, W
;math.ppas,756 :: 		
$023D	$02F9			SUBWF	STACK_9, F
;math.ppas,757 :: 		
$023E	$0876			MOVF	STACK_6, W
;math.ppas,758 :: 		
$023F	$1C03			BTFSS	STATUS, C
;math.ppas,759 :: 		
$0240	$0F76			INCFSZ	STACK_6, W
;math.ppas,760 :: 		
$0241	$02FA			SUBWF	STACK_10, F
;math.ppas,761 :: 		
$0242	$0877			MOVF	STACK_7, W
;math.ppas,762 :: 		
$0243	$1C03			BTFSS	STATUS, C
;math.ppas,763 :: 		
$0244	$0F77			INCFSZ	STACK_7, W
;math.ppas,764 :: 		
$0245	$02FB			SUBWF	STACK_11, F
;math.ppas,766 :: 		
$0246	$2A54			GOTO	SOK22LC
;math.ppas,767 :: 		
$0247	$	SADD22LC:
;math.ppas,768 :: 		
$0247	$07F8			ADDWF	STACK_8, F
;math.ppas,769 :: 		
$0248	$0875			MOVF	STACK_5, W
;math.ppas,770 :: 		
$0249	$1803			BTFSC	STATUS, C
;math.ppas,771 :: 		
$024A	$0F75			INCFSZ	STACK_5, W
;math.ppas,772 :: 		
$024B	$07F9			ADDWF	STACK_9, F
;math.ppas,773 :: 		
$024C	$0876			MOVF	STACK_6, W
;math.ppas,774 :: 		
$024D	$1803			BTFSC	STATUS, C
;math.ppas,775 :: 		
$024E	$0F76			INCFSZ	STACK_6, W
;math.ppas,776 :: 		
$024F	$07FA			ADDWF	STACK_10, F
;math.ppas,777 :: 		
$0250	$0877			MOVF	STACK_7, W
;math.ppas,778 :: 		
$0251	$1803			BTFSC	STATUS, C
;math.ppas,779 :: 		
$0252	$0F77			INCFSZ	STACK_7, W
;math.ppas,781 :: 		
$0253	$07FB			ADDWF	STACK_11, F
;math.ppas,782 :: 		
$0254	$	SOK22LC:
;math.ppas,784 :: 		
$0254	$0DF1			RLF	STACK_1, F
;math.ppas,785 :: 		
$0255	$0BFC			DECFSZ	STACK_12, F
;math.ppas,787 :: 		
$0256	$2A31			GOTO	LOOPS3232C
;math.ppas,788 :: 		
$0257	$0D70			RLF	STACK_0, W
;math.ppas,789 :: 		
$0258	$0DF8			RLF	STACK_8, F
;math.ppas,790 :: 		
$0259	$0DF9			RLF	STACK_9, F
;math.ppas,791 :: 		
$025A	$0DFA			RLF	STACK_10, F
;math.ppas,792 :: 		
$025B	$0DFB			RLF	STACK_11, F
;math.ppas,793 :: 		
$025C	$0874			MOVF	STACK_4, W
;math.ppas,794 :: 		
$025D	$1C71			BTFSS	STACK_1, 0
;math.ppas,796 :: 		
$025E	$2A6D			GOTO	SADD22L24
;math.ppas,797 :: 		
$025F	$02F8			SUBWF	STACK_8, F
;math.ppas,798 :: 		
$0260	$0875			MOVF	STACK_5, W
;math.ppas,799 :: 		
$0261	$1C03			BTFSS	STATUS, C
;math.ppas,800 :: 		
$0262	$0F75			INCFSZ	STACK_5, W
;math.ppas,801 :: 		
$0263	$02F9			SUBWF	STACK_9, F
;math.ppas,802 :: 		
$0264	$0876			MOVF	STACK_6, W
;math.ppas,803 :: 		
$0265	$1C03			BTFSS	STATUS, C
;math.ppas,804 :: 		
$0266	$0F76			INCFSZ	STACK_6, W
;math.ppas,805 :: 		
$0267	$02FA			SUBWF	STACK_10, F
;math.ppas,806 :: 		
$0268	$0877			MOVF	STACK_7, W
;math.ppas,807 :: 		
$0269	$1C03			BTFSS	STATUS, C
;math.ppas,808 :: 		
$026A	$0F77			INCFSZ	STACK_7, W
;math.ppas,809 :: 		
$026B	$02FB			SUBWF	STACK_11, F
;math.ppas,811 :: 		
$026C	$2A7A			GOTO	SOK22L24
;math.ppas,812 :: 		
$026D	$	SADD22L24:
;math.ppas,813 :: 		
$026D	$07F8			ADDWF	STACK_8, F
;math.ppas,814 :: 		
$026E	$0875			MOVF	STACK_5, W
;math.ppas,815 :: 		
$026F	$1803			BTFSC	STATUS, C
;math.ppas,816 :: 		
$0270	$0F75			INCFSZ	STACK_5, W
;math.ppas,817 :: 		
$0271	$07F9			ADDWF	STACK_9, F
;math.ppas,818 :: 		
$0272	$0876			MOVF	STACK_6, W
;math.ppas,819 :: 		
$0273	$1803			BTFSC	STATUS, C
;math.ppas,820 :: 		
$0274	$0F76			INCFSZ	STACK_6, W
;math.ppas,821 :: 		
$0275	$07FA			ADDWF	STACK_10, F
;math.ppas,822 :: 		
$0276	$0877			MOVF	STACK_7, W
;math.ppas,823 :: 		
$0277	$1803			BTFSC	STATUS, C
;math.ppas,824 :: 		
$0278	$0F77			INCFSZ	STACK_7, W
;math.ppas,826 :: 		
$0279	$07FB			ADDWF	STACK_11, F
;math.ppas,827 :: 		
$027A	$	SOK22L24:
;math.ppas,829 :: 		
$027A	$0DF0			RLF	STACK_0, F
;math.ppas,830 :: 		
$027B	$3007			MOVLW	7
;math.ppas,832 :: 		
$027C	$00FC			MOVWF	STACK_12
;math.ppas,833 :: 		
$027D	$	LOOPS3232D:
;math.ppas,834 :: 		
$027D	$0D70			RLF	STACK_0, W
;math.ppas,835 :: 		
$027E	$0DF8			RLF	STACK_8, F
;math.ppas,836 :: 		
$027F	$0DF9			RLF	STACK_9, F
;math.ppas,837 :: 		
$0280	$0DFA			RLF	STACK_10, F
;math.ppas,838 :: 		
$0281	$0DFB			RLF	STACK_11, F
;math.ppas,839 :: 		
$0282	$0874			MOVF	STACK_4, W
;math.ppas,840 :: 		
$0283	$1C70			BTFSS	STACK_0, 0
;math.ppas,842 :: 		
$0284	$2A93			GOTO	SADD22LD
;math.ppas,843 :: 		
$0285	$02F8			SUBWF	STACK_8, F
;math.ppas,844 :: 		
$0286	$0875			MOVF	STACK_5, W
;math.ppas,845 :: 		
$0287	$1C03			BTFSS	STATUS, C
;math.ppas,846 :: 		
$0288	$0F75			INCFSZ	STACK_5, W
;math.ppas,847 :: 		
$0289	$02F9			SUBWF	STACK_9, F
;math.ppas,848 :: 		
$028A	$0876			MOVF	STACK_6, W
;math.ppas,849 :: 		
$028B	$1C03			BTFSS	STATUS, C
;math.ppas,850 :: 		
$028C	$0F76			INCFSZ	STACK_6, W
;math.ppas,851 :: 		
$028D	$02FA			SUBWF	STACK_10, F
;math.ppas,852 :: 		
$028E	$0877			MOVF	STACK_7, W
;math.ppas,853 :: 		
$028F	$1C03			BTFSS	STATUS, C
;math.ppas,854 :: 		
$0290	$0F77			INCFSZ	STACK_7, W
;math.ppas,855 :: 		
$0291	$02FB			SUBWF	STACK_11, F
;math.ppas,857 :: 		
$0292	$2AA0			GOTO	SOK22LD
;math.ppas,858 :: 		
$0293	$	SADD22LD:
;math.ppas,859 :: 		
$0293	$07F8			ADDWF	STACK_8, F
;math.ppas,860 :: 		
$0294	$0875			MOVF	STACK_5, W
;math.ppas,861 :: 		
$0295	$1803			BTFSC	STATUS, C
;math.ppas,862 :: 		
$0296	$0F75			INCFSZ	STACK_5, W
;math.ppas,863 :: 		
$0297	$07F9			ADDWF	STACK_9, F
;math.ppas,864 :: 		
$0298	$0876			MOVF	STACK_6, W
;math.ppas,865 :: 		
$0299	$1803			BTFSC	STATUS, C
;math.ppas,866 :: 		
$029A	$0F76			INCFSZ	STACK_6, W
;math.ppas,867 :: 		
$029B	$07FA			ADDWF	STACK_10, F
;math.ppas,868 :: 		
$029C	$0877			MOVF	STACK_7, W
;math.ppas,870 :: 		
$029D	$1803			BTFSC	STATUS, C
;math.ppas,871 :: 		
$029E	$0F77			INCFSZ	STACK_7, W
;math.ppas,873 :: 		
$029F	$07FB			ADDWF	STACK_11, F
;math.ppas,874 :: 		
$02A0	$	SOK22LD:
;math.ppas,876 :: 		
$02A0	$0DF0			RLF	STACK_0, F
;math.ppas,877 :: 		
$02A1	$0BFC			DECFSZ	STACK_12, F
;math.ppas,879 :: 		
$02A2	$2A7D			GOTO	LOOPS3232D
;math.ppas,880 :: 		
$02A3	$1870			BTFSC	STACK_0, 0
;math.ppas,881 :: 		
$02A4	$2AB3			GOTO	SOK22L
;math.ppas,882 :: 		
$02A5	$0874			MOVF	STACK_4, W
;math.ppas,883 :: 		
$02A6	$07F8			ADDWF	STACK_8, F
;math.ppas,884 :: 		
$02A7	$0875			MOVF	STACK_5, W
;math.ppas,885 :: 		
$02A8	$1803			BTFSC	STATUS, C
;math.ppas,886 :: 		
$02A9	$0F75			INCFSZ	STACK_5, W
;math.ppas,887 :: 		
$02AA	$07F9			ADDWF	STACK_9, F
;math.ppas,888 :: 		
$02AB	$0876			MOVF	STACK_6, W
;math.ppas,889 :: 		
$02AC	$1803			BTFSC	STATUS, C
;math.ppas,890 :: 		
$02AD	$0F76			INCFSZ	STACK_6, W
;math.ppas,891 :: 		
$02AE	$07FA			ADDWF	STACK_10, F
;math.ppas,892 :: 		
$02AF	$0877			MOVF	STACK_7, W
;math.ppas,893 :: 		
$02B0	$1803			BTFSC	STATUS, C
;math.ppas,894 :: 		
$02B1	$0F77			INCFSZ	STACK_7, W
;math.ppas,895 :: 		
$02B2	$07FB			ADDWF	STACK_11, F
;math.ppas,896 :: 		
$02B3	$	SOK22L:
;math.ppas,897 :: 		
$02B3	$	math_L_9:
;math.ppas,898 :: 		
$02B3	$0008			RETURN
$082B	$	_comfrem:
$082B	$1303			BCF	STATUS, RP1
$082C	$1283			BCF	STATUS, RP0
;math.ppas,901 :: 		
;math.ppas,903 :: 		
$082D	$09FB			COMF	STACK_11, F
;math.ppas,904 :: 		
$082E	$09FA			COMF	STACK_10, F
;math.ppas,905 :: 		
$082F	$09F9			COMF	STACK_9, F
;math.ppas,906 :: 		
$0830	$09F8			COMF	STACK_8, F
;math.ppas,907 :: 		
$0831	$0AF8			INCF	STACK_8, F
;math.ppas,908 :: 		
$0832	$1903			BTFSC	STATUS, Z
;math.ppas,909 :: 		
$0833	$0AF9			INCF	STACK_9, F
;math.ppas,910 :: 		
$0834	$1903			BTFSC	STATUS, Z
;math.ppas,911 :: 		
$0835	$0AFA			INCF	STACK_10, F
;math.ppas,912 :: 		
$0836	$1903			BTFSC	STATUS, Z
;math.ppas,913 :: 		
$0837	$0AFB			INCF	STACK_11, F
;math.ppas,914 :: 		
$0838	$	math_L_10:
;math.ppas,915 :: 		
$0838	$0008			RETURN
$075A	$	_res032:
$075A	$1303			BCF	STATUS, RP1
$075B	$1283			BCF	STATUS, RP0
;math_double.ppas,56 :: 		
;math_double.ppas,61 :: 		
$075C	$01F2			CLRF	STACK_2
;math_double.ppas,62 :: 		
$075D	$01F1			CLRF	STACK_1
;math_double.ppas,63 :: 		
$075E	$01F0			CLRF	STACK_0
;math_double.ppas,64 :: 		
$075F	$01F8			CLRF	STACK_8
;math_double.ppas,65 :: 		
$0760	$01F3			CLRF	STACK_3
;math_double.ppas,66 :: 		
$0761	$3000			MOVLW	0
;math_double.ppas,67 :: 		
$0762	$	math_double_L_3:
;math_double.ppas,68 :: 		
$0762	$0008			RETURN
$080F	$	_setfun32:
$080F	$1303			BCF	STATUS, RP1
$0810	$1283			BCF	STATUS, RP0
;math_double.ppas,71 :: 		
;math_double.ppas,78 :: 		
$0811	$157B			BSF	STACK_11, 2
;math_double.ppas,79 :: 		
$0812	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,80 :: 		
$0813	$281B			GOTO	SETFUN32EEE
;math_double.ppas,81 :: 		
$0814	$3001			MOVLW	0X01
;math_double.ppas,82 :: 		
$0815	$00F3			MOVWF	STACK_3
;math_double.ppas,83 :: 		
$0816	$01F2			CLRF	STACK_2
;math_double.ppas,84 :: 		
$0817	$01F1			CLRF	STACK_1
;math_double.ppas,85 :: 		
$0818	$01F0			CLRF	STACK_0
;math_double.ppas,86 :: 		
$0819	$0DFA			RLF	STACK_10, F
;math_double.ppas,87 :: 		
$081A	$0CF2			RRF	STACK_2, F
;math_double.ppas,88 :: 		
$081B	$	SETFUN32EEE:
;math_double.ppas,89 :: 		
$081B	$30FF			MOVLW	0XFF
;math_double.ppas,90 :: 		
$081C	$	math_double_L_4:
;math_double.ppas,91 :: 		
$081C	$0008			RETURN
$0853	$	_fixsign32:
$0853	$1303			BCF	STATUS, RP1
$0854	$1283			BCF	STATUS, RP0
;math_double.ppas,45 :: 		
;math_double.ppas,49 :: 		
$0855	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,50 :: 		
$0856	$13F2			BCF	STACK_2, 7
;math_double.ppas,51 :: 		
$0857	$3000			MOVLW	0
;math_double.ppas,52 :: 		
$0858	$	math_double_L_2:
;math_double.ppas,53 :: 		
$0858	$0008			RETURN
$081D	$	_setfov32:
$081D	$1303			BCF	STATUS, RP1
$081E	$1283			BCF	STATUS, RP0
;math_double.ppas,11 :: 		
;math_double.ppas,18 :: 		
$081F	$14FB			BSF	STACK_11, 1
;math_double.ppas,19 :: 		
$0820	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,20 :: 		
$0821	$2829			GOTO	SETFOV32EEE
;math_double.ppas,21 :: 		
$0822	$30FF			MOVLW	0XFF
;math_double.ppas,22 :: 		
$0823	$00F3			MOVWF	STACK_3
;math_double.ppas,23 :: 		
$0824	$00F2			MOVWF	STACK_2
;math_double.ppas,24 :: 		
$0825	$00F1			MOVWF	STACK_1
;math_double.ppas,25 :: 		
$0826	$00F0			MOVWF	STACK_0
;math_double.ppas,26 :: 		
$0827	$0DFA			RLF	STACK_10, F
;math_double.ppas,27 :: 		
$0828	$0CF2			RRF	STACK_2, F
;math_double.ppas,28 :: 		
$0829	$	SETFOV32EEE:
;math_double.ppas,29 :: 		
$0829	$30FF			MOVLW	0XFF
;math_double.ppas,30 :: 		
$082A	$	math_double_L_0:
;math_double.ppas,31 :: 		
$082A	$0008			RETURN
$0839	$	_usart_data_ready:
;USART_b75.ppas,48 :: 		
;USART_b75.ppas,50 :: 		
$0839	$1303			BCF	STATUS, RP1
$083A	$1283			BCF	STATUS, RP0
$083B	$080C			MOVF	PIR1, 0
$083C	$00F1			MOVWF	STACK_1
$083D	$3000			MOVLW	0
$083E	$1AF1			BTFSC	STACK_1, 5
$083F	$3001			MOVLW	1
$0840	$00F1			MOVWF	STACK_1
$0841	$0871			MOVF	STACK_1, 0
$0842	$00C4			MOVWF	_usart_data_ready_local_result
$0843	$	USART_b75_L_18:
;USART_b75.ppas,51 :: 		
$0843	$0844			MOVF	_usart_data_ready_local_result, 0
$0844	$00F0			MOVWF	STACK_0
$0845	$0008			RETURN
$0722	$	_usart_read:
;USART_b75.ppas,54 :: 		
;USART_b75.ppas,55 :: 		
$0722	$1303			BCF	STATUS, RP1
$0723	$1283			BCF	STATUS, RP0
$0724	$081A			MOVF	RCREG, 0
$0725	$00C4			MOVWF	_usart_read_local_result
;USART_b75.ppas,61 :: 		
$0726	$0818			MOVF	RCSTA, 0
$0727	$00F1			MOVWF	STACK_1
$0728	$3000			MOVLW	0
$0729	$18F1			BTFSC	STACK_1, 1
$072A	$3001			MOVLW	1
$072B	$00F1			MOVWF	STACK_1
$072C	$0871			MOVF	STACK_1, 0
$072D	$3A01			XORLW	1
$072E	$1D03			BTFSS	STATUS, Z
$072F	$2F32			GOTO	USART_b75_L_21
$0730	$	USART_b75_L_20:
;USART_b75.ppas,63 :: 		
$0730	$1218			BCF	RCSTA, 4
$0731	$	USART_b75_L_24:
;USART_b75.ppas,64 :: 		
$0731	$	USART_b75_L_25:
$0731	$1618			BSF	RCSTA, 4
$0732	$	USART_b75_L_26:
;USART_b75.ppas,65 :: 		
$0732	$	USART_b75_L_21:
$0732	$	USART_b75_L_22:
$0732	$	USART_b75_L_19:
;USART_b75.ppas,66 :: 		
$0732	$0844			MOVF	_usart_read_local_result, 0
$0733	$00F0			MOVWF	STACK_0
$0734	$0008			RETURN
$0605	$	_mul_32x32_s:
$0605	$1303			BCF	STATUS, RP1
$0606	$1283			BCF	STATUS, RP0
;math.ppas,1675 :: 		
;math.ppas,1680 :: 		
$0607	$01FD			CLRF	STACK_13
;math.ppas,1683 :: 		
$0608	$	_IF_FIRST:
;math.ppas,1684 :: 		
$0608	$1FF3			BTFSS	STACK_3, 7
;math.ppas,1686 :: 		
$0609	$2E17			GOTO	_IF_SECOND
;math.ppas,1691 :: 		
$060A	$	_INVERCE_FIRST:
;math.ppas,1692 :: 		
$060A	$09F0			COMF	STACK_0, F
;math.ppas,1693 :: 		
$060B	$09F1			COMF	STACK_1, F
;math.ppas,1694 :: 		
$060C	$09F2			COMF	STACK_2, F
;math.ppas,1701 :: 		
$060D	$09F3			COMF	STACK_3, F
;math.ppas,1702 :: 		
$060E	$0AF0			INCF	STACK_0, F
;math.ppas,1703 :: 		
$060F	$1903			BTFSC	STATUS, Z
;math.ppas,1704 :: 		
$0610	$0AF1			INCF	STACK_1, F
;math.ppas,1705 :: 		
$0611	$1903			BTFSC	STATUS, Z
;math.ppas,1706 :: 		
$0612	$0AF2			INCF	STACK_2, F
;math.ppas,1707 :: 		
$0613	$1903			BTFSC	STATUS, Z
;math.ppas,1708 :: 		
$0614	$0AF3			INCF	STACK_3, F
;math.ppas,1709 :: 		
$0615	$3081			MOVLW	129
;math.ppas,1711 :: 		
$0616	$07FD			ADDWF	STACK_13, F
;math.ppas,1714 :: 		
$0617	$	_IF_SECOND:
;math.ppas,1715 :: 		
$0617	$1FF7			BTFSS	STACK_7, 7
;math.ppas,1717 :: 		
$0618	$2E25			GOTO	_MULT
;math.ppas,1722 :: 		
$0619	$	_INBERSE_SECOND:
;math.ppas,1723 :: 		
$0619	$09F4			COMF	STACK_4, F
;math.ppas,1724 :: 		
$061A	$09F5			COMF	STACK_5, F
;math.ppas,1725 :: 		
$061B	$09F6			COMF	STACK_6, F
;math.ppas,1732 :: 		
$061C	$09F7			COMF	STACK_7, F
;math.ppas,1733 :: 		
$061D	$0AF4			INCF	STACK_4, F
;math.ppas,1734 :: 		
$061E	$1903			BTFSC	STATUS, Z
;math.ppas,1735 :: 		
$061F	$0AF5			INCF	STACK_5, F
;math.ppas,1736 :: 		
$0620	$1903			BTFSC	STATUS, Z
;math.ppas,1737 :: 		
$0621	$0AF6			INCF	STACK_6, F
;math.ppas,1738 :: 		
$0622	$1903			BTFSC	STATUS, Z
;math.ppas,1739 :: 		
$0623	$0AF7			INCF	STACK_7, F
;math.ppas,1741 :: 		
$0624	$0AFD			INCF	STACK_13, F
;math.ppas,1742 :: 		
$0625	$	_MULT:
;math.ppas,1744 :: 		
$0625	$2675			CALL	_mul_32x32_u
;math.ppas,1748 :: 		
$0626	$1C7D			BTFSS	STACK_13, 0
;math.ppas,1754 :: 		
$0627	$2E3F			GOTO	_EXIT
;math.ppas,1755 :: 		
$0628	$09F0			COMF	STACK_0, F
;math.ppas,1756 :: 		
$0629	$09F1			COMF	STACK_1, F
;math.ppas,1757 :: 		
$062A	$09F2			COMF	STACK_2, F
;math.ppas,1763 :: 		
$062B	$09F3			COMF	STACK_3, F
;math.ppas,1764 :: 		
$062C	$09F8			COMF	STACK_8, F
;math.ppas,1765 :: 		
$062D	$09F9			COMF	STACK_9, F
;math.ppas,1766 :: 		
$062E	$09FA			COMF	STACK_10, F
;math.ppas,1776 :: 		
$062F	$09FB			COMF	STACK_11, F
;math.ppas,1777 :: 		
$0630	$0AF0			INCF	STACK_0, F
;math.ppas,1778 :: 		
$0631	$1903			BTFSC	STATUS, Z
;math.ppas,1779 :: 		
$0632	$0AF1			INCF	STACK_1, F
;math.ppas,1780 :: 		
$0633	$1903			BTFSC	STATUS, Z
;math.ppas,1781 :: 		
$0634	$0AF2			INCF	STACK_2, F
;math.ppas,1782 :: 		
$0635	$1903			BTFSC	STATUS, Z
;math.ppas,1783 :: 		
$0636	$0AF3			INCF	STACK_3, F
;math.ppas,1784 :: 		
$0637	$1903			BTFSC	STATUS, Z
;math.ppas,1785 :: 		
$0638	$0AF8			INCF	STACK_8, F
;math.ppas,1786 :: 		
$0639	$1903			BTFSC	STATUS, Z
;math.ppas,1787 :: 		
$063A	$0AF9			INCF	STACK_9, F
;math.ppas,1788 :: 		
$063B	$1903			BTFSC	STATUS, Z
;math.ppas,1789 :: 		
$063C	$0AFA			INCF	STACK_10, F
;math.ppas,1790 :: 		
$063D	$1903			BTFSC	STATUS, Z
;math.ppas,1791 :: 		
$063E	$0AFB			INCF	STACK_11, F
;math.ppas,1792 :: 		
$063F	$	_EXIT:
;math.ppas,1793 :: 		
$063F	$	math_L_14:
;math.ppas,1794 :: 		
$063F	$0008			RETURN
$06CA	$	_div_16x16_u:
$06CA	$1303			BCF	STATUS, RP1
$06CB	$1283			BCF	STATUS, RP0
;math.ppas,108 :: 		
;math.ppas,110 :: 		
$06CC	$01F8			CLRF	STACK_8
;math.ppas,111 :: 		
$06CD	$01F9			CLRF	STACK_9
;math.ppas,112 :: 		
$06CE	$3010			MOVLW	16
;math.ppas,113 :: 		
$06CF	$00FC			MOVWF	STACK_12
;math.ppas,114 :: 		
$06D0	$0D71			RLF	STACK_1, W
;math.ppas,115 :: 		
$06D1	$0DF8			RLF	STACK_8, F
;math.ppas,116 :: 		
$06D2	$0DF9			RLF	STACK_9, F
;math.ppas,117 :: 		
$06D3	$0874			MOVF	STACK_4, W
;math.ppas,118 :: 		
$06D4	$02F8			SUBWF	STACK_8, F
;math.ppas,119 :: 		
$06D5	$0875			MOVF	STACK_5, W
;math.ppas,120 :: 		
$06D6	$1C03			BTFSS	STATUS, C
;math.ppas,121 :: 		
$06D7	$0F75			INCFSZ	STACK_5, W
;math.ppas,122 :: 		
$06D8	$02F9			SUBWF	STACK_9, F
;math.ppas,123 :: 		
$06D9	$1803			BTFSC	STATUS, C
;math.ppas,124 :: 		
$06DA	$2EE2			GOTO	$+8
;math.ppas,125 :: 		
$06DB	$0874			MOVF	STACK_4, W
;math.ppas,126 :: 		
$06DC	$07F8			ADDWF	STACK_8, F
;math.ppas,127 :: 		
$06DD	$0875			MOVF	STACK_5, W
;math.ppas,128 :: 		
$06DE	$1803			BTFSC	STATUS, C
;math.ppas,129 :: 		
$06DF	$0F75			INCFSZ	STACK_5, W
;math.ppas,130 :: 		
$06E0	$07F9			ADDWF	STACK_9, F
;math.ppas,131 :: 		
$06E1	$1003			BCF	STATUS, C
;math.ppas,132 :: 		
$06E2	$0DF0			RLF	STACK_0, F
;math.ppas,133 :: 		
$06E3	$0DF1			RLF	STACK_1, F
;math.ppas,134 :: 		
$06E4	$0BFC			DECFSZ	STACK_12, F
;math.ppas,135 :: 		
$06E5	$2ED0			GOTO	$-21
;math.ppas,136 :: 		
$06E6	$	math_L_3:
;math.ppas,137 :: 		
$06E6	$0008			RETURN
$0418	$	_div_32x32_s:
$0418	$1303			BCF	STATUS, RP1
$0419	$1283			BCF	STATUS, RP0
;math.ppas,925 :: 		
;math.ppas,928 :: 		
$041A	$	FXD3232S:
;math.ppas,929 :: 		
$041A	$01FC			CLRF	STACK_12
;math.ppas,930 :: 		
$041B	$1BF7			BTFSC	STACK_7, 7
;math.ppas,932 :: 		
$041C	$0AFC			INCF	STACK_12, F
;math.ppas,933 :: 		
$041D	$01FD			CLRF	STACK_13
;math.ppas,934 :: 		
$041E	$01FB			CLRF	STACK_11
;math.ppas,935 :: 		
$041F	$01FA			CLRF	STACK_10
;math.ppas,936 :: 		
$0420	$01F9			CLRF	STACK_9
;math.ppas,937 :: 		
$0421	$01F8			CLRF	STACK_8
;math.ppas,938 :: 		
$0422	$0873			MOVF	STACK_3, W
;math.ppas,939 :: 		
$0423	$0472			IORWF	STACK_2, W
;math.ppas,940 :: 		
$0424	$0471			IORWF	STACK_1, W
;math.ppas,941 :: 		
$0425	$0470			IORWF	STACK_0, W
;math.ppas,942 :: 		
$0426	$1903			BTFSC	STATUS, Z
;math.ppas,943 :: 		
$0427	$2CAC			GOTO	END_ALL
;math.ppas,944 :: 		
$0428	$0873			MOVF	STACK_3, W
;math.ppas,945 :: 		
$0429	$0677			XORWF	STACK_7, W
;math.ppas,946 :: 		
$042A	$00A0			MOVWF	MATH___MATH_TEMPB
;math.ppas,947 :: 		
$042B	$1BA0			BTFSC	MATH___MATH_TEMPB, 7
;math.ppas,951 :: 		
$042C	$09FD			COMF	STACK_13, F
;math.ppas,952 :: 		
$042D	$1FF7			BTFSS	STACK_7, 7
;math.ppas,954 :: 		
$042E	$2C3A			GOTO	CA3232S
;math.ppas,955 :: 		
$042F	$09F4			COMF	STACK_4, F
;math.ppas,956 :: 		
$0430	$09F5			COMF	STACK_5, F
;math.ppas,957 :: 		
$0431	$09F6			COMF	STACK_6, F
;math.ppas,958 :: 		
$0432	$09F7			COMF	STACK_7, F
;math.ppas,959 :: 		
$0433	$0AF4			INCF	STACK_4, F
;math.ppas,960 :: 		
$0434	$1903			BTFSC	STATUS, Z
;math.ppas,961 :: 		
$0435	$0AF5			INCF	STACK_5, F
;math.ppas,962 :: 		
$0436	$1903			BTFSC	STATUS, Z
;math.ppas,963 :: 		
$0437	$0AF6			INCF	STACK_6, F
;math.ppas,964 :: 		
$0438	$1903			BTFSC	STATUS, Z
;math.ppas,966 :: 		
$0439	$0AF7			INCF	STACK_7, F
;math.ppas,967 :: 		
$043A	$	CA3232S:
;math.ppas,968 :: 		
$043A	$1FF3			BTFSS	STACK_3, 7
;math.ppas,970 :: 		
$043B	$2C47			GOTO	C3232SX
;math.ppas,971 :: 		
$043C	$09F0			COMF	STACK_0, F
;math.ppas,972 :: 		
$043D	$09F1			COMF	STACK_1, F
;math.ppas,973 :: 		
$043E	$09F2			COMF	STACK_2, F
;math.ppas,974 :: 		
$043F	$09F3			COMF	STACK_3, F
;math.ppas,975 :: 		
$0440	$0AF0			INCF	STACK_0, F
;math.ppas,976 :: 		
$0441	$1903			BTFSC	STATUS, Z
;math.ppas,977 :: 		
$0442	$0AF1			INCF	STACK_1, F
;math.ppas,978 :: 		
$0443	$1903			BTFSC	STATUS, Z
;math.ppas,979 :: 		
$0444	$0AF2			INCF	STACK_2, F
;math.ppas,980 :: 		
$0445	$1903			BTFSC	STATUS, Z
;math.ppas,982 :: 		
$0446	$0AF3			INCF	STACK_3, F
;math.ppas,983 :: 		
$0447	$	C3232SX:
;math.ppas,984 :: 		
$0447	$0873			MOVF	STACK_3, W
;math.ppas,985 :: 		
$0448	$0477			IORWF	STACK_7, W
;math.ppas,986 :: 		
$0449	$00A0			MOVWF	MATH___MATH_TEMPB
;math.ppas,987 :: 		
$044A	$1BA0			BTFSC	MATH___MATH_TEMPB, 7
;math.ppas,988 :: 		
$044B	$2C68			GOTO	C3232SX1
;math.ppas,989 :: 		
$044C	$	C3232S:
;math.ppas,992 :: 		
$044C	$2186			CALL	_sdiv3232l
;math.ppas,995 :: 		
$044D	$	C3232S2:
;math.ppas,996 :: 		
$044D	$1BFC			BTFSC	STACK_12, 7
;math.ppas,997 :: 		
$044E	$2C85			GOTO	C3232SX4
;math.ppas,998 :: 		
$044F	$	C3232SOK:
;math.ppas,999 :: 		
$044F	$1FFD			BTFSS	STACK_13, 7
;math.ppas,1000 :: 		
$0450	$2CAC			GOTO	END_ALL
;math.ppas,1001 :: 		
$0451	$09F0			COMF	STACK_0, F
;math.ppas,1002 :: 		
$0452	$09F1			COMF	STACK_1, F
;math.ppas,1003 :: 		
$0453	$09F2			COMF	STACK_2, F
;math.ppas,1004 :: 		
$0454	$09F3			COMF	STACK_3, F
;math.ppas,1005 :: 		
$0455	$0AF0			INCF	STACK_0, F
;math.ppas,1006 :: 		
$0456	$1903			BTFSC	STATUS, Z
;math.ppas,1007 :: 		
$0457	$0AF1			INCF	STACK_1, F
;math.ppas,1008 :: 		
$0458	$1903			BTFSC	STATUS, Z
;math.ppas,1009 :: 		
$0459	$0AF2			INCF	STACK_2, F
;math.ppas,1010 :: 		
$045A	$1903			BTFSC	STATUS, Z
;math.ppas,1012 :: 		
$045B	$0AF3			INCF	STACK_3, F
;math.ppas,1013 :: 		
$045C	$09F8			COMF	STACK_8, F
;math.ppas,1014 :: 		
$045D	$09F9			COMF	STACK_9, F
;math.ppas,1015 :: 		
$045E	$09FA			COMF	STACK_10, F
;math.ppas,1016 :: 		
$045F	$09FB			COMF	STACK_11, F
;math.ppas,1017 :: 		
$0460	$0AF8			INCF	STACK_8, F
;math.ppas,1018 :: 		
$0461	$1903			BTFSC	STATUS, Z
;math.ppas,1019 :: 		
$0462	$0AF9			INCF	STACK_9, F
;math.ppas,1020 :: 		
$0463	$1903			BTFSC	STATUS, Z
;math.ppas,1021 :: 		
$0464	$0AFA			INCF	STACK_10, F
;math.ppas,1022 :: 		
$0465	$1903			BTFSC	STATUS, Z
;math.ppas,1024 :: 		
$0466	$0AFB			INCF	STACK_11, F
;math.ppas,1025 :: 		
$0467	$2CAC			GOTO	END_ALL
;math.ppas,1026 :: 		
$0468	$	C3232SX1:
;math.ppas,1027 :: 		
$0468	$1FF7			BTFSS	STACK_7, 7
;math.ppas,1028 :: 		
$0469	$2C7F			GOTO	C3232SX3
;math.ppas,1029 :: 		
$046A	$1BF3			BTFSC	STACK_3, 7
;math.ppas,1030 :: 		
$046B	$2C79			GOTO	C3232SX2
;math.ppas,1031 :: 		
$046C	$0873			MOVF	STACK_3, W
;math.ppas,1032 :: 		
$046D	$00FB			MOVWF	STACK_11
;math.ppas,1033 :: 		
$046E	$0872			MOVF	STACK_2, W
;math.ppas,1034 :: 		
$046F	$00FA			MOVWF	STACK_10
;math.ppas,1035 :: 		
$0470	$0871			MOVF	STACK_1, W
;math.ppas,1036 :: 		
$0471	$00F9			MOVWF	STACK_9
;math.ppas,1037 :: 		
$0472	$0870			MOVF	STACK_0, W
;math.ppas,1038 :: 		
$0473	$00F8			MOVWF	STACK_8
;math.ppas,1039 :: 		
$0474	$01F3			CLRF	STACK_3
;math.ppas,1040 :: 		
$0475	$01F2			CLRF	STACK_2
;math.ppas,1041 :: 		
$0476	$01F1			CLRF	STACK_1
;math.ppas,1042 :: 		
$0477	$01F0			CLRF	STACK_0
;math.ppas,1043 :: 		
$0478	$2C4F			GOTO	C3232SOK
;math.ppas,1044 :: 		
$0479	$	C3232SX2:
;math.ppas,1045 :: 		
$0479	$01F3			CLRF	STACK_3
;math.ppas,1046 :: 		
$047A	$01F2			CLRF	STACK_2
;math.ppas,1047 :: 		
$047B	$01F1			CLRF	STACK_1
;math.ppas,1048 :: 		
$047C	$01F0			CLRF	STACK_0
;math.ppas,1049 :: 		
$047D	$0AF0			INCF	STACK_0, F
;math.ppas,1051 :: 		
$047E	$3400			RETLW	0X00
;math.ppas,1052 :: 		
$047F	$	C3232SX3:
;math.ppas,1053 :: 		
$047F	$09F3			COMF	STACK_3, F
;math.ppas,1054 :: 		
$0480	$09F2			COMF	STACK_2, F
;math.ppas,1055 :: 		
$0481	$09F1			COMF	STACK_1, F
;math.ppas,1057 :: 		
$0482	$09F0			COMF	STACK_0, F
;math.ppas,1059 :: 		
$0483	$17FC			BSF	STACK_12, 7
;math.ppas,1060 :: 		
$0484	$2C4C			GOTO	C3232S
;math.ppas,1061 :: 		
$0485	$	C3232SX4:
;math.ppas,1062 :: 		
$0485	$0AF8			INCF	STACK_8, F
;math.ppas,1063 :: 		
$0486	$1903			BTFSC	STATUS, Z
;math.ppas,1064 :: 		
$0487	$0AF9			INCF	STACK_9, F
;math.ppas,1065 :: 		
$0488	$1903			BTFSC	STATUS, Z
;math.ppas,1066 :: 		
$0489	$0AFA			INCF	STACK_10, F
;math.ppas,1067 :: 		
$048A	$1903			BTFSC	STATUS, Z
;math.ppas,1068 :: 		
$048B	$0AFB			INCF	STACK_11, F
;math.ppas,1069 :: 		
$048C	$0874			MOVF	STACK_4, W
;math.ppas,1070 :: 		
$048D	$0278			SUBWF	STACK_8, W
;math.ppas,1071 :: 		
$048E	$1D03			BTFSS	STATUS, Z
;math.ppas,1072 :: 		
$048F	$2C4F			GOTO	C3232SOK
;math.ppas,1073 :: 		
$0490	$0875			MOVF	STACK_5, W
;math.ppas,1074 :: 		
$0491	$0279			SUBWF	STACK_9, W
;math.ppas,1075 :: 		
$0492	$1D03			BTFSS	STATUS, Z
;math.ppas,1076 :: 		
$0493	$2C4F			GOTO	C3232SOK
;math.ppas,1077 :: 		
$0494	$0876			MOVF	STACK_6, W
;math.ppas,1078 :: 		
$0495	$027A			SUBWF	STACK_10, W
;math.ppas,1079 :: 		
$0496	$1D03			BTFSS	STATUS, Z
;math.ppas,1080 :: 		
$0497	$2C4F			GOTO	C3232SOK
;math.ppas,1081 :: 		
$0498	$0877			MOVF	STACK_7, W
;math.ppas,1082 :: 		
$0499	$027B			SUBWF	STACK_11, W
;math.ppas,1083 :: 		
$049A	$1D03			BTFSS	STATUS, Z
;math.ppas,1084 :: 		
$049B	$2C4F			GOTO	C3232SOK
;math.ppas,1085 :: 		
$049C	$01FB			CLRF	STACK_11
;math.ppas,1086 :: 		
$049D	$01FA			CLRF	STACK_10
;math.ppas,1087 :: 		
$049E	$01F9			CLRF	STACK_9
;math.ppas,1088 :: 		
$049F	$01F8			CLRF	STACK_8
;math.ppas,1089 :: 		
$04A0	$0AF0			INCF	STACK_0, F
;math.ppas,1090 :: 		
$04A1	$1903			BTFSC	STATUS, Z
;math.ppas,1091 :: 		
$04A2	$0AF1			INCF	STACK_1, F
;math.ppas,1092 :: 		
$04A3	$1903			BTFSC	STATUS, Z
;math.ppas,1093 :: 		
$04A4	$0AF2			INCF	STACK_2, F
;math.ppas,1094 :: 		
$04A5	$1903			BTFSC	STATUS, Z
;math.ppas,1095 :: 		
$04A6	$0AF3			INCF	STACK_3, F
;math.ppas,1096 :: 		
$04A7	$1FF3			BTFSS	STACK_3, 7
;math.ppas,1097 :: 		
$04A8	$2C4F			GOTO	C3232SOK
;math.ppas,1098 :: 		
$04A9	$01A0			CLRF	MATH___MATH_TEMPB
;math.ppas,1099 :: 		
$04AA	$1620			BSF	MATH___MATH_TEMPB, 4
;math.ppas,1100 :: 		
$04AB	$34FF			RETLW	0XFF
;math.ppas,1101 :: 		
$04AC	$	END_ALL:
;math.ppas,1102 :: 		
$04AC	$01A0			CLRF	MATH___MATH_TEMPB
;math.ppas,1103 :: 		
$04AD	$1C7C			BTFSS	STACK_12, 0
;math.ppas,1104 :: 		
$04AE	$2CB2			GOTO	AVOID_COMFREM
;math.ppas,1106 :: 		
$04AF	$158A			BSF	PCLATH, 3
$04B0	$202B			CALL	_comfrem
$04B1	$118A			BCF	PCLATH, 3
;math.ppas,1108 :: 		
$04B2	$	AVOID_COMFREM:
;math.ppas,1109 :: 		
$04B2	$3F00			ADDLW	0X00
;math.ppas,1110 :: 		
$04B3	$	math_L_11:
;math.ppas,1111 :: 		
$04B3	$0008			RETURN
$0748	$	_usart_write:
;USART_b75.ppas,40 :: 		
;USART_b75.ppas,42 :: 		
$0748	$	USART_b75_L_14:
$0748	$1303			BCF	STATUS, RP1
$0749	$1683			BSF	STATUS, RP0
$074A	$0818			MOVF	TXSTA, 0
$074B	$00F1			MOVWF	STACK_1
$074C	$3000			MOVLW	0
$074D	$18F1			BTFSC	STACK_1, 1
$074E	$3001			MOVLW	1
$074F	$00F1			MOVWF	STACK_1
$0750	$0871			MOVF	STACK_1, 0
$0751	$3A00			XORLW	0
$0752	$1D03			BTFSS	STATUS, Z
$0753	$2F56			GOTO	USART_b75_L_15
;USART_b75.ppas,43 :: 		
$0754	$0000			NOP
$0755	$2F48			GOTO	USART_b75_L_14
$0756	$	USART_b75_L_15:
;USART_b75.ppas,44 :: 		
$0756	$1283			BCF	STATUS, RP0
$0757	$0844			MOVF	FARG_USART_Write, 0
$0758	$0099			MOVWF	TXREG
$0759	$	USART_b75_L_12:
;USART_b75.ppas,45 :: 		
$0759	$0008			RETURN
$0640	$	_nrm3232:
$0640	$1303			BCF	STATUS, RP1
$0641	$1283			BCF	STATUS, RP0
;math_double.ppas,100 :: 		
;math_double.ppas,108 :: 		
$0642	$01A1			CLRF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,109 :: 		
$0643	$0872			MOVF	STACK_2, W
;math_double.ppas,110 :: 		
$0644	$1D03			BTFSS	STATUS, Z
;math_double.ppas,111 :: 		
$0645	$2E57			GOTO	NORM3232
;math_double.ppas,112 :: 		
$0646	$0871			MOVF	STACK_1, W
;math_double.ppas,113 :: 		
$0647	$00F2			MOVWF	STACK_2
;math_double.ppas,114 :: 		
$0648	$0870			MOVF	STACK_0, W
;math_double.ppas,115 :: 		
$0649	$00F1			MOVWF	STACK_1
;math_double.ppas,116 :: 		
$064A	$01F0			CLRF	STACK_0
;math_double.ppas,118 :: 		
$064B	$15A1			BSF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,119 :: 		
$064C	$0872			MOVF	STACK_2, W
;math_double.ppas,120 :: 		
$064D	$1D03			BTFSS	STATUS, Z
;math_double.ppas,121 :: 		
$064E	$2E57			GOTO	NORM3232
;math_double.ppas,122 :: 		
$064F	$0871			MOVF	STACK_1, W
;math_double.ppas,123 :: 		
$0650	$00F2			MOVWF	STACK_2
;math_double.ppas,124 :: 		
$0651	$01F1			CLRF	STACK_1
;math_double.ppas,125 :: 		
$0652	$11A1			BCF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,127 :: 		
$0653	$1621			BSF	MATH_DOUBLE___MATH_TEMPBD, 4
;math_double.ppas,128 :: 		
$0654	$0872			MOVF	STACK_2, W
;math_double.ppas,129 :: 		
$0655	$1903			BTFSC	STATUS, Z
;math_double.ppas,130 :: 		
$0656	$2E65			GOTO	JPNRES032
;math_double.ppas,131 :: 		
$0657	$	NORM3232:
;math_double.ppas,132 :: 		
$0657	$0821			MOVF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,133 :: 		
$0658	$02F3			SUBWF	STACK_3, F
;math_double.ppas,134 :: 		
$0659	$1D03			BTFSS	STATUS, Z
;math_double.ppas,135 :: 		
$065A	$1C03			BTFSS	STATUS, C
;math_double.ppas,136 :: 		
$065B	$2E69			GOTO	JPNSETFUN32
;math_double.ppas,137 :: 		
$065C	$1003			BCF	STATUS, C
;math_double.ppas,138 :: 		
$065D	$	NORM3232A:
;math_double.ppas,139 :: 		
$065D	$1BF2			BTFSC	STACK_2, 7
;math_double.ppas,140 :: 		
$065E	$2E6F			GOTO	JMPNFIXSIGN32
;math_double.ppas,141 :: 		
$065F	$0DF0			RLF	STACK_0, F
;math_double.ppas,142 :: 		
$0660	$0DF1			RLF	STACK_1, F
;math_double.ppas,143 :: 		
$0661	$0DF2			RLF	STACK_2, F
;math_double.ppas,144 :: 		
$0662	$0BF3			DECFSZ	STACK_3, F
;math_double.ppas,145 :: 		
$0663	$2E5D			GOTO	NORM3232A
;math_double.ppas,146 :: 		
$0664	$2E69			GOTO	JPNSETFUN32
;math_double.ppas,147 :: 		
$0665	$	JPNRES032:
;math_double.ppas,148 :: 		
$0665	$3001			MOVLW	0X01
;math_double.ppas,149 :: 		
$0666	$00FC			MOVWF	STACK_12
;math_double.ppas,151 :: 		
$0667	$275A			CALL	_res032
;math_double.ppas,153 :: 		
$0668	$2E74			GOTO	NORM32EEE
;math_double.ppas,154 :: 		
$0669	$	JPNSETFUN32:
;math_double.ppas,155 :: 		
$0669	$3002			MOVLW	0X02
;math_double.ppas,156 :: 		
$066A	$00FC			MOVWF	STACK_12
;math_double.ppas,158 :: 		
$066B	$158A			BSF	PCLATH, 3
$066C	$200F			CALL	_setfun32
$066D	$118A			BCF	PCLATH, 3
;math_double.ppas,160 :: 		
$066E	$2E74			GOTO	NORM32EEE
;math_double.ppas,161 :: 		
$066F	$	JMPNFIXSIGN32:
;math_double.ppas,162 :: 		
$066F	$3004			MOVLW	0X04
;math_double.ppas,163 :: 		
$0670	$00FC			MOVWF	STACK_12
;math_double.ppas,165 :: 		
$0671	$158A			BSF	PCLATH, 3
$0672	$2053			CALL	_fixsign32
$0673	$118A			BCF	PCLATH, 3
;math_double.ppas,167 :: 		
$0674	$	NORM32EEE:
;math_double.ppas,168 :: 		
$0674	$	math_double_L_5:
;math_double.ppas,169 :: 		
$0674	$0008			RETURN
$0519	$	_nrm4032:
$0519	$1303			BCF	STATUS, RP1
$051A	$1283			BCF	STATUS, RP0
;math_double.ppas,178 :: 		
;math_double.ppas,187 :: 		
$051B	$187C			BTFSC	STACK_12, 0
;math_double.ppas,188 :: 		
$051C	$2D51			GOTO	NRMRND4032
;math_double.ppas,189 :: 		
$051D	$18FC			BTFSC	STACK_12, 1
;math_double.ppas,190 :: 		
$051E	$2D22			GOTO	NRM4032
;math_double.ppas,191 :: 		
$051F	$197C			BTFSC	STACK_12, 2
;math_double.ppas,192 :: 		
$0520	$2D74			GOTO	JMPSETFOV32
;math_double.ppas,193 :: 		
$0521	$2D1B			GOTO	$-6
;math_double.ppas,194 :: 		
$0522	$	NRM4032:
;math_double.ppas,195 :: 		
$0522	$01A1			CLRF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,196 :: 		
$0523	$0872			MOVF	STACK_2, W
;math_double.ppas,197 :: 		
$0524	$1D03			BTFSS	STATUS, Z
;math_double.ppas,198 :: 		
$0525	$2D42			GOTO	NORM4032
;math_double.ppas,199 :: 		
$0526	$0871			MOVF	STACK_1, W
;math_double.ppas,200 :: 		
$0527	$00F2			MOVWF	STACK_2
;math_double.ppas,201 :: 		
$0528	$0870			MOVF	STACK_0, W
;math_double.ppas,202 :: 		
$0529	$00F1			MOVWF	STACK_1
;math_double.ppas,203 :: 		
$052A	$0878			MOVF	STACK_8, W
;math_double.ppas,204 :: 		
$052B	$00F0			MOVWF	STACK_0
;math_double.ppas,205 :: 		
$052C	$01F8			CLRF	STACK_8
;math_double.ppas,207 :: 		
$052D	$15A1			BSF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,208 :: 		
$052E	$0872			MOVF	STACK_2, W
;math_double.ppas,209 :: 		
$052F	$1D03			BTFSS	STATUS, Z
;math_double.ppas,210 :: 		
$0530	$2D42			GOTO	NORM4032
;math_double.ppas,211 :: 		
$0531	$0871			MOVF	STACK_1, W
;math_double.ppas,212 :: 		
$0532	$00F2			MOVWF	STACK_2
;math_double.ppas,213 :: 		
$0533	$0870			MOVF	STACK_0, W
;math_double.ppas,214 :: 		
$0534	$00F1			MOVWF	STACK_1
;math_double.ppas,215 :: 		
$0535	$01F0			CLRF	STACK_0
;math_double.ppas,216 :: 		
$0536	$11A1			BCF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,218 :: 		
$0537	$1621			BSF	MATH_DOUBLE___MATH_TEMPBD, 4
;math_double.ppas,219 :: 		
$0538	$0872			MOVF	STACK_2, W
;math_double.ppas,220 :: 		
$0539	$1D03			BTFSS	STATUS, Z
;math_double.ppas,221 :: 		
$053A	$2D42			GOTO	NORM4032
;math_double.ppas,222 :: 		
$053B	$0871			MOVF	STACK_1, W
;math_double.ppas,223 :: 		
$053C	$00F2			MOVWF	STACK_2
;math_double.ppas,224 :: 		
$053D	$01F1			CLRF	STACK_1
;math_double.ppas,226 :: 		
$053E	$15A1			BSF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,227 :: 		
$053F	$0872			MOVF	STACK_2, W
;math_double.ppas,228 :: 		
$0540	$1903			BTFSC	STATUS, Z
;math_double.ppas,229 :: 		
$0541	$2D64			GOTO	JMPRES032
;math_double.ppas,230 :: 		
$0542	$	NORM4032:
;math_double.ppas,231 :: 		
$0542	$0821			MOVF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,232 :: 		
$0543	$02F3			SUBWF	STACK_3, F
;math_double.ppas,233 :: 		
$0544	$1D03			BTFSS	STATUS, Z
;math_double.ppas,234 :: 		
$0545	$1C03			BTFSS	STATUS, C
;math_double.ppas,235 :: 		
$0546	$2D68			GOTO	JMPSETFUN32
;math_double.ppas,236 :: 		
$0547	$1003			BCF	STATUS, C
;math_double.ppas,237 :: 		
$0548	$	NORM4032A:
;math_double.ppas,238 :: 		
$0548	$1BF2			BTFSC	STACK_2, 7
;math_double.ppas,239 :: 		
$0549	$2D51			GOTO	NRMRND4032
;math_double.ppas,240 :: 		
$054A	$0DF8			RLF	STACK_8, F
;math_double.ppas,241 :: 		
$054B	$0DF0			RLF	STACK_0, F
;math_double.ppas,242 :: 		
$054C	$0DF1			RLF	STACK_1, F
;math_double.ppas,243 :: 		
$054D	$0DF2			RLF	STACK_2, F
;math_double.ppas,244 :: 		
$054E	$0BF3			DECFSZ	STACK_3, F
;math_double.ppas,245 :: 		
$054F	$2D48			GOTO	NORM4032A
;math_double.ppas,246 :: 		
$0550	$2D68			GOTO	JMPSETFUN32
;math_double.ppas,247 :: 		
$0551	$	NRMRND4032:
;math_double.ppas,248 :: 		
$0551	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,249 :: 		
$0552	$1C70			BTFSS	STACK_0, 0
;math_double.ppas,250 :: 		
$0553	$2D6E			GOTO	JMPFIXSIGN32
;math_double.ppas,251 :: 		
$0554	$1FF8			BTFSS	STACK_8, 7
;math_double.ppas,252 :: 		
$0555	$2D6E			GOTO	JMPFIXSIGN32
;math_double.ppas,253 :: 		
$0556	$0AF0			INCF	STACK_0, F
;math_double.ppas,254 :: 		
$0557	$1903			BTFSC	STATUS, Z
;math_double.ppas,255 :: 		
$0558	$0AF1			INCF	STACK_1, F
;math_double.ppas,256 :: 		
$0559	$1903			BTFSC	STATUS, Z
;math_double.ppas,257 :: 		
$055A	$0AF2			INCF	STACK_2, F
;math_double.ppas,258 :: 		
$055B	$1D03			BTFSS	STATUS, Z
;math_double.ppas,259 :: 		
$055C	$2D6E			GOTO	JMPFIXSIGN32
;math_double.ppas,260 :: 		
$055D	$0CF2			RRF	STACK_2, F
;math_double.ppas,261 :: 		
$055E	$0CF1			RRF	STACK_1, F
;math_double.ppas,262 :: 		
$055F	$0CF0			RRF	STACK_0, F
;math_double.ppas,263 :: 		
$0560	$0AF3			INCF	STACK_3, F
;math_double.ppas,264 :: 		
$0561	$1903			BTFSC	STATUS, Z
;math_double.ppas,265 :: 		
$0562	$2D74			GOTO	JMPSETFOV32
;math_double.ppas,266 :: 		
$0563	$2D6E			GOTO	JMPFIXSIGN32
;math_double.ppas,267 :: 		
$0564	$	JMPRES032:
;math_double.ppas,268 :: 		
$0564	$3001			MOVLW	0X01
;math_double.ppas,269 :: 		
$0565	$00FC			MOVWF	STACK_12
;math_double.ppas,271 :: 		
$0566	$275A			CALL	_res032
;math_double.ppas,273 :: 		
$0567	$2D79			GOTO	NRM4032EEE
;math_double.ppas,274 :: 		
$0568	$	JMPSETFUN32:
;math_double.ppas,275 :: 		
$0568	$3002			MOVLW	0X02
;math_double.ppas,276 :: 		
$0569	$00FC			MOVWF	STACK_12
;math_double.ppas,278 :: 		
$056A	$158A			BSF	PCLATH, 3
$056B	$200F			CALL	_setfun32
$056C	$118A			BCF	PCLATH, 3
;math_double.ppas,280 :: 		
$056D	$2D79			GOTO	NRM4032EEE
;math_double.ppas,281 :: 		
$056E	$	JMPFIXSIGN32:
;math_double.ppas,282 :: 		
$056E	$3004			MOVLW	0X04
;math_double.ppas,283 :: 		
$056F	$00FC			MOVWF	STACK_12
;math_double.ppas,285 :: 		
$0570	$158A			BSF	PCLATH, 3
$0571	$2053			CALL	_fixsign32
$0572	$118A			BCF	PCLATH, 3
;math_double.ppas,287 :: 		
$0573	$2D79			GOTO	NRM4032EEE
;math_double.ppas,288 :: 		
$0574	$	JMPSETFOV32:
;math_double.ppas,289 :: 		
$0574	$3008			MOVLW	0X08
;math_double.ppas,290 :: 		
$0575	$00FC			MOVWF	STACK_12
;math_double.ppas,292 :: 		
$0576	$158A			BSF	PCLATH, 3
$0577	$201D			CALL	_setfov32
$0578	$118A			BCF	PCLATH, 3
;math_double.ppas,294 :: 		
$0579	$	NRM4032EEE:
;math_double.ppas,295 :: 		
$0579	$0000			NOP
;math_double.ppas,296 :: 		
$057A	$	math_double_L_6:
;math_double.ppas,297 :: 		
$057A	$0008			RETURN
$0859	$	_setfdz32:
$0859	$1303			BCF	STATUS, RP1
$085A	$1283			BCF	STATUS, RP0
;math_double.ppas,35 :: 		
;math_double.ppas,38 :: 		
$085B	$15FB			BSF	STACK_11, 3
;math_double.ppas,39 :: 		
$085C	$30FF			MOVLW	0XFF
;math_double.ppas,40 :: 		
$085D	$	math_double_L_1:
;math_double.ppas,41 :: 		
$085D	$0008			RETURN
$0800	$	_setiov3224:
$0800	$1303			BCF	STATUS, RP1
$0801	$1283			BCF	STATUS, RP0
;math_double.ppas,888 :: 		
;math_double.ppas,894 :: 		
$0802	$147B			BSF	STACK_11, 0
;math_double.ppas,895 :: 		
$0803	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,897 :: 		
$0804	$280D			GOTO	SETIOV3224EEE
;math_double.ppas,898 :: 		
$0805	$01F2			CLRF	STACK_2
;math_double.ppas,899 :: 		
$0806	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,900 :: 		
$0807	$30FF			MOVLW	0XFF
;math_double.ppas,901 :: 		
$0808	$00F2			MOVWF	STACK_2
;math_double.ppas,902 :: 		
$0809	$00F1			MOVWF	STACK_1
;math_double.ppas,903 :: 		
$080A	$00F0			MOVWF	STACK_0
;math_double.ppas,904 :: 		
$080B	$0DFA			RLF	STACK_10, F
;math_double.ppas,905 :: 		
$080C	$0CF2			RRF	STACK_2, F
;math_double.ppas,906 :: 		
$080D	$	SETIOV3224EEE:
;math_double.ppas,907 :: 		
$080D	$30FF			MOVLW	0XFF
;math_double.ppas,908 :: 		
$080E	$	math_double_L_11:
;math_double.ppas,909 :: 		
$080E	$0008			RETURN
$0846	$	_spi_init:
;SPI_b64c7.ppas,49 :: 		
;SPI_b64c7.ppas,53 :: 		
$0846	$1303			BCF	STATUS, RP1
$0847	$1683			BSF	STATUS, RP0
$0848	$1387			BCF	TRISC, 7
$0849	$	SPI_b64c7_L_18:
;SPI_b64c7.ppas,54 :: 		
$0849	$1306			BCF	TRISB, 6
$084A	$	SPI_b64c7_L_20:
;SPI_b64c7.ppas,55 :: 		
$084A	$	SPI_b64c7_L_21:
$084A	$1606			BSF	TRISB, 4
$084B	$	SPI_b64c7_L_22:
;SPI_b64c7.ppas,57 :: 		
$084B	$1283			BCF	STATUS, RP0
$084C	$0194			CLRF	SSPCON, 1
;SPI_b64c7.ppas,58 :: 		
$084D	$3040			MOVLW	64
$084E	$1683			BSF	STATUS, RP0
$084F	$0094			MOVWF	SSPSTAT
;SPI_b64c7.ppas,59 :: 		
$0850	$1283			BCF	STATUS, RP0
$0851	$1694			BSF	SSPCON, 5
$0852	$	SPI_b64c7_L_16:
;SPI_b64c7.ppas,60 :: 		
$0852	$0008			RETURN
$0735	$	_spi_write:
;SPI_b64c7.ppas,65 :: 		
;SPI_b64c7.ppas,66 :: 		
$0735	$1303			BCF	STATUS, RP1
$0736	$1283			BCF	STATUS, RP0
$0737	$0837			MOVF	FARG_SPI_write, 0
$0738	$0093			MOVWF	SSPBUF
;SPI_b64c7.ppas,67 :: 		
$0739	$	SPI_b64c7_L_25:
$0739	$1683			BSF	STATUS, RP0
$073A	$0814			MOVF	SSPSTAT, 0
$073B	$00F1			MOVWF	STACK_1
$073C	$3001			MOVLW	1
$073D	$05F1			ANDWF	STACK_1, 1
$073E	$0871			MOVF	STACK_1, 0
$073F	$3A00			XORLW	0
$0740	$1D03			BTFSS	STATUS, Z
$0741	$2F44			GOTO	SPI_b64c7_L_26
;SPI_b64c7.ppas,68 :: 		
$0742	$0000			NOP
$0743	$2F39			GOTO	SPI_b64c7_L_25
$0744	$	SPI_b64c7_L_26:
;SPI_b64c7.ppas,69 :: 		
$0744	$1283			BCF	STATUS, RP0
$0745	$0813			MOVF	SSPBUF, 0
$0746	$00B8			MOVWF	_spi_write_local_temp
$0747	$	SPI_b64c7_L_23:
;SPI_b64c7.ppas,70 :: 		
$0747	$0008			RETURN
$057B	$	_usart_read_text:
;USART_b75.ppas,78 :: 		
;USART_b75.ppas,79 :: 		
$057B	$1303			BCF	STATUS, RP1
$057C	$1283			BCF	STATUS, RP0
$057D	$01B9			CLRF	_usart_read_text_local_i, 1
;USART_b75.ppas,80 :: 		
$057E	$01BA			CLRF	_usart_read_text_local_j, 1
;USART_b75.ppas,81 :: 		
$057F	$01BD			CLRF	_usart_read_text_local_lasti, 1
;USART_b75.ppas,82 :: 		
$0580	$0838			MOVF	FARG_Usart_Read_Text+1, 0
$0581	$0084			MOVWF	FSR
$0582	$0800			MOVF	INDF, 0
$0583	$00BC			MOVWF	_usart_read_text_local_data2
;USART_b75.ppas,83 :: 		
$0584	$	USART_b75_L_29:
;USART_b75.ppas,85 :: 		
$0584	$158A			BSF	PCLATH, 3
$0585	$2039			CALL	_usart_data_ready
$0586	$118A			BCF	PCLATH, 3
$0587	$0870			MOVF	STACK_0, 0
$0588	$3A00			XORLW	0
$0589	$1903			BTFSC	STATUS, Z
$058A	$2DB6			GOTO	USART_b75_L_34
$058B	$	USART_b75_L_33:
;USART_b75.ppas,87 :: 		
$058B	$2722			CALL	_usart_read
$058C	$0870			MOVF	STACK_0, 0
$058D	$00BB			MOVWF	_usart_read_text_local_data
;USART_b75.ppas,88 :: 		
$058E	$0839			MOVF	_usart_read_text_local_i, 0
$058F	$0737			ADDWF	FARG_Usart_Read_Text, 0
$0590	$00F1			MOVWF	STACK_1
$0591	$0871			MOVF	STACK_1, 0
$0592	$0084			MOVWF	FSR
$0593	$0871			MOVF	STACK_1, 0
$0594	$0084			MOVWF	FSR
$0595	$0870			MOVF	STACK_0, 0
$0596	$0080			MOVWF	INDF
;USART_b75.ppas,89 :: 		
$0597	$083B			MOVF	_usart_read_text_local_data, 0
$0598	$063C			XORWF	_usart_read_text_local_data2, 0
$0599	$1D03			BTFSS	STATUS, Z
$059A	$2DA0			GOTO	USART_b75_L_37
$059B	$	USART_b75_L_36:
;USART_b75.ppas,91 :: 		
$059B	$083A			MOVF	_usart_read_text_local_j, 0
$059C	$0239			SUBWF	_usart_read_text_local_i, 0
$059D	$00BD			MOVWF	_usart_read_text_local_lasti
;USART_b75.ppas,92 :: 		
$059E	$0ABA			INCF	_usart_read_text_local_j, 1
;USART_b75.ppas,93 :: 		
$059F	$2DA2			GOTO	USART_b75_L_38
;USART_b75.ppas,94 :: 		
$05A0	$	USART_b75_L_37:
;USART_b75.ppas,96 :: 		
$05A0	$01BA			CLRF	_usart_read_text_local_j, 1
;USART_b75.ppas,97 :: 		
$05A1	$01BD			CLRF	_usart_read_text_local_lasti, 1
;USART_b75.ppas,98 :: 		
$05A2	$	USART_b75_L_38:
;USART_b75.ppas,100 :: 		
$05A2	$083A			MOVF	_usart_read_text_local_j, 0
$05A3	$0738			ADDWF	FARG_Usart_Read_Text+1, 0
$05A4	$0084			MOVWF	FSR
$05A5	$0800			MOVF	INDF, 0
$05A6	$00F1			MOVWF	STACK_1
$05A7	$0871			MOVF	STACK_1, 0
$05A8	$00BC			MOVWF	_usart_read_text_local_data2
;USART_b75.ppas,102 :: 		
$05A9	$0871			MOVF	STACK_1, 0
$05AA	$3A00			XORLW	0
$05AB	$1D03			BTFSS	STATUS, Z
$05AC	$2DAE			GOTO	USART_b75_L_40
$05AD	$	USART_b75_L_39:
;USART_b75.ppas,103 :: 		
$05AD	$2DB7			GOTO	USART_b75_L_30
$05AE	$	USART_b75_L_40:
$05AE	$	USART_b75_L_41:
;USART_b75.ppas,105 :: 		
$05AE	$0AB9			INCF	_usart_read_text_local_i, 1
;USART_b75.ppas,106 :: 		
$05AF	$0839			MOVF	_usart_read_text_local_i, 0
$05B0	$3C14			SUBLW	20
$05B1	$1803			BTFSC	STATUS, C
$05B2	$2DB6			GOTO	USART_b75_L_43
$05B3	$	USART_b75_L_42:
;USART_b75.ppas,108 :: 		
$05B3	$3013			MOVLW	19
$05B4	$00BD			MOVWF	_usart_read_text_local_lasti
;USART_b75.ppas,109 :: 		
$05B5	$2DB7			GOTO	USART_b75_L_30
;USART_b75.ppas,110 :: 		
$05B6	$	USART_b75_L_43:
$05B6	$	USART_b75_L_44:
;USART_b75.ppas,111 :: 		
$05B6	$	USART_b75_L_34:
$05B6	$	USART_b75_L_35:
;USART_b75.ppas,112 :: 		
$05B6	$2D84			GOTO	USART_b75_L_29
$05B7	$	USART_b75_L_30:
;USART_b75.ppas,113 :: 		
$05B7	$083D			MOVF	_usart_read_text_local_lasti, 0
$05B8	$0737			ADDWF	FARG_Usart_Read_Text, 0
$05B9	$00F0			MOVWF	STACK_0
$05BA	$0870			MOVF	STACK_0, 0
$05BB	$0084			MOVWF	FSR
$05BC	$0870			MOVF	STACK_0, 0
$05BD	$0084			MOVWF	FSR
$05BE	$0180			CLRF	INDF, 1
$05BF	$	USART_b75_L_27:
;USART_b75.ppas,114 :: 		
$05BF	$0008			RETURN
$02B4	$	_strtoint:
;conv.ppas,343 :: 		
;conv.ppas,345 :: 		
$02B4	$1303			BCF	STATUS, RP1
$02B5	$1283			BCF	STATUS, RP0
$02B6	$01B8			CLRF	_strtoint_local_result
$02B7	$01B9			CLRF	_strtoint_local_result+1
;conv.ppas,346 :: 		
$02B8	$3010			MOVLW	16
$02B9	$00BC			MOVWF	_strtoint_local_ep
$02BA	$3027			MOVLW	39
$02BB	$00BD			MOVWF	_strtoint_local_ep+1
;conv.ppas,347 :: 		
$02BC	$01BA			CLRF	_strtoint_local_i
$02BD	$01BB			CLRF	_strtoint_local_i+1
;conv.ppas,348 :: 		
$02BE	$01C0			CLRF	_strtoint_local_tmp
$02BF	$01C1			CLRF	_strtoint_local_tmp+1
$02C0	$01C2			CLRF	_strtoint_local_tmp+2
$02C1	$01C3			CLRF	_strtoint_local_tmp+3
;conv.ppas,349 :: 		
$02C2	$01BE			CLRF	_strtoint_local_negative
$02C3	$01BF			CLRF	_strtoint_local_negative+1
;conv.ppas,353 :: 		
$02C4	$	conv_L_172:
$02C4	$083A			MOVF	_strtoint_local_i, 0
$02C5	$0737			ADDWF	FARG_StrToInt, 0
$02C6	$0084			MOVWF	FSR
$02C7	$0800			MOVF	INDF, 0
$02C8	$00F4			MOVWF	STACK_4
$02C9	$0874			MOVF	STACK_4, 0
$02CA	$3A00			XORLW	0
$02CB	$1903			BTFSC	STATUS, Z
$02CC	$2B30			GOTO	conv_L_173
;conv.ppas,355 :: 		
$02CD	$083A			MOVF	_strtoint_local_i, 0
$02CE	$0737			ADDWF	FARG_StrToInt, 0
$02CF	$0084			MOVWF	FSR
$02D0	$0800			MOVF	INDF, 0
$02D1	$00F4			MOVWF	STACK_4
$02D2	$0874			MOVF	STACK_4, 0
$02D3	$3A2D			XORLW	45
$02D4	$1D03			BTFSS	STATUS, Z
$02D5	$2ADD			GOTO	conv_L_177
$02D6	$	conv_L_176:
;conv.ppas,357 :: 		
$02D6	$30FF			MOVLW	255
$02D7	$00BE			MOVWF	_strtoint_local_negative
$02D8	$01BF			CLRF	_strtoint_local_negative+1
;conv.ppas,358 :: 		
$02D9	$0ABA			INCF	_strtoint_local_i, 1
$02DA	$1903			BTFSC	STATUS, Z
$02DB	$0ABB			INCF	_strtoint_local_i+1, 1
;conv.ppas,359 :: 		
$02DC	$2AC4			GOTO	conv_L_172
;conv.ppas,360 :: 		
$02DD	$	conv_L_177:
$02DD	$	conv_L_178:
;conv.ppas,361 :: 		
$02DD	$083A			MOVF	_strtoint_local_i, 0
$02DE	$0737			ADDWF	FARG_StrToInt, 0
$02DF	$0084			MOVWF	FSR
$02E0	$0800			MOVF	INDF, 0
$02E1	$00F4			MOVWF	STACK_4
$02E2	$0874			MOVF	STACK_4, 0
$02E3	$3A20			XORLW	32
$02E4	$1903			BTFSC	STATUS, Z
$02E5	$2B20			GOTO	conv_L_180
$02E6	$	conv_L_179:
;conv.ppas,362 :: 		
$02E6	$083A			MOVF	_strtoint_local_i, 0
$02E7	$0737			ADDWF	FARG_StrToInt, 0
$02E8	$0084			MOVWF	FSR
$02E9	$0800			MOVF	INDF, 0
$02EA	$00F0			MOVWF	STACK_0
$02EB	$3030			MOVLW	48
$02EC	$00F8			MOVWF	STACK_8
$02ED	$01F9			CLRF	STACK_8+1
$02EE	$01FA			CLRF	STACK_8+2
$02EF	$01FB			CLRF	STACK_8+3
$02F0	$0870			MOVF	STACK_0, 0
$02F1	$00F4			MOVWF	STACK_4
$02F2	$01F5			CLRF	STACK_4+1
$02F3	$01F6			CLRF	STACK_4+2
$02F4	$01F7			CLRF	STACK_4+3
$02F5	$0874			MOVF	STACK_4, 0
$02F6	$00F0			MOVWF	STACK_0
$02F7	$0875			MOVF	STACK_4+1, 0
$02F8	$00F1			MOVWF	STACK_0+1
$02F9	$0876			MOVF	STACK_4+2, 0
$02FA	$00F2			MOVWF	STACK_0+2
$02FB	$0877			MOVF	STACK_4+3, 0
$02FC	$00F3			MOVWF	STACK_0+3
$02FD	$0878			MOVF	STACK_8, 0
$02FE	$02F0			SUBWF	STACK_0, 1
$02FF	$0879			MOVF	STACK_8+1, 0
$0300	$1C03			BTFSS	STATUS, C
$0301	$0F79			INCFSZ	STACK_8+1, 0
$0302	$02F1			SUBWF	STACK_0+1, 1
$0303	$087A			MOVF	STACK_8+2, 0
$0304	$1C03			BTFSS	STATUS, C
$0305	$0F7A			INCFSZ	STACK_8+2, 0
$0306	$02F2			SUBWF	STACK_0+2, 1
$0307	$087B			MOVF	STACK_8+3, 0
$0308	$1C03			BTFSS	STATUS, C
$0309	$0F7B			INCFSZ	STACK_8+3, 0
$030A	$02F3			SUBWF	STACK_0+3, 1
$030B	$083C			MOVF	_strtoint_local_ep, 0
$030C	$00F4			MOVWF	STACK_4
$030D	$083D			MOVF	_strtoint_local_ep+1, 0
$030E	$00F5			MOVWF	STACK_4+1
$030F	$01F6			CLRF	STACK_4+2
$0310	$01F7			CLRF	STACK_4+3
$0311	$2605			CALL	_mul_32x32_s
$0312	$0870			MOVF	STACK_0, 0
$0313	$07C0			ADDWF	_strtoint_local_tmp, 1
$0314	$0871			MOVF	STACK_0+1, 0
$0315	$1803			BTFSC	STATUS, C
$0316	$0F71			INCFSZ	STACK_0+1, 0
$0317	$07C1			ADDWF	_strtoint_local_tmp+1, 1
$0318	$0872			MOVF	STACK_0+2, 0
$0319	$1803			BTFSC	STATUS, C
$031A	$0F72			INCFSZ	STACK_0+2, 0
$031B	$07C2			ADDWF	_strtoint_local_tmp+2, 1
$031C	$0873			MOVF	STACK_0+3, 0
$031D	$1803			BTFSC	STATUS, C
$031E	$0F73			INCFSZ	STACK_0+3, 0
$031F	$07C3			ADDWF	_strtoint_local_tmp+3, 1
$0320	$	conv_L_180:
$0320	$	conv_L_181:
;conv.ppas,363 :: 		
$0320	$300A			MOVLW	10
$0321	$00F4			MOVWF	STACK_4
$0322	$01F5			CLRF	STACK_4+1
$0323	$083C			MOVF	_strtoint_local_ep, 0
$0324	$00F0			MOVWF	STACK_0
$0325	$083D			MOVF	_strtoint_local_ep+1, 0
$0326	$00F1			MOVWF	STACK_0+1
$0327	$26CA			CALL	_div_16x16_u
$0328	$0870			MOVF	STACK_0, 0
$0329	$00BC			MOVWF	_strtoint_local_ep
$032A	$0871			MOVF	STACK_0+1, 0
$032B	$00BD			MOVWF	_strtoint_local_ep+1
;conv.ppas,365 :: 		
$032C	$0ABA			INCF	_strtoint_local_i, 1
$032D	$1903			BTFSC	STATUS, Z
$032E	$0ABB			INCF	_strtoint_local_i+1, 1
;conv.ppas,366 :: 		
$032F	$2AC4			GOTO	conv_L_172
$0330	$	conv_L_173:
;conv.ppas,370 :: 		
$0330	$083E			MOVF	_strtoint_local_negative, 0
$0331	$043F			IORWF	_strtoint_local_negative+1, 0
$0332	$1903			BTFSC	STATUS, Z
$0333	$2B38			GOTO	conv_L_183
$0334	$	conv_L_182:
$0334	$3006			MOVLW	6
$0335	$00BC			MOVWF	_strtoint_local_ep
$0336	$01BD			CLRF	_strtoint_local_ep+1
$0337	$2B3B			GOTO	conv_L_184
;conv.ppas,371 :: 		
$0338	$	conv_L_183:
$0338	$3005			MOVLW	5
$0339	$00BC			MOVWF	_strtoint_local_ep
$033A	$01BD			CLRF	_strtoint_local_ep+1
$033B	$	conv_L_184:
;conv.ppas,373 :: 		
$033B	$	conv_L_186:
$033B	$083B			MOVF	_strtoint_local_i+1, 0
$033C	$063D			XORWF	_strtoint_local_ep+1, 0
$033D	$1D03			BTFSS	STATUS, Z
$033E	$2B41			GOTO	L_StrToInt_20
$033F	$083C			MOVF	_strtoint_local_ep, 0
$0340	$063A			XORWF	_strtoint_local_i, 0
$0341	$	L_StrToInt_20:
$0341	$1903			BTFSC	STATUS, Z
$0342	$2B5D			GOTO	conv_L_187
;conv.ppas,375 :: 		
$0343	$300A			MOVLW	10
$0344	$00F4			MOVWF	STACK_4
$0345	$01F5			CLRF	STACK_4+1
$0346	$01F6			CLRF	STACK_4+2
$0347	$01F7			CLRF	STACK_4+3
$0348	$0840			MOVF	_strtoint_local_tmp, 0
$0349	$00F0			MOVWF	STACK_0
$034A	$0841			MOVF	_strtoint_local_tmp+1, 0
$034B	$00F1			MOVWF	STACK_0+1
$034C	$0842			MOVF	_strtoint_local_tmp+2, 0
$034D	$00F2			MOVWF	STACK_0+2
$034E	$0843			MOVF	_strtoint_local_tmp+3, 0
$034F	$00F3			MOVWF	STACK_0+3
$0350	$2418			CALL	_div_32x32_s
$0351	$0870			MOVF	STACK_0, 0
$0352	$00C0			MOVWF	_strtoint_local_tmp
$0353	$0871			MOVF	STACK_0+1, 0
$0354	$00C1			MOVWF	_strtoint_local_tmp+1
$0355	$0872			MOVF	STACK_0+2, 0
$0356	$00C2			MOVWF	_strtoint_local_tmp+2
$0357	$0873			MOVF	STACK_0+3, 0
$0358	$00C3			MOVWF	_strtoint_local_tmp+3
;conv.ppas,376 :: 		
$0359	$0ABA			INCF	_strtoint_local_i, 1
$035A	$1903			BTFSC	STATUS, Z
$035B	$0ABB			INCF	_strtoint_local_i+1, 1
;conv.ppas,377 :: 		
$035C	$2B3B			GOTO	conv_L_186
$035D	$	conv_L_187:
;conv.ppas,380 :: 		
$035D	$0840			MOVF	_strtoint_local_tmp, 0
$035E	$00B8			MOVWF	_strtoint_local_result
$035F	$0841			MOVF	_strtoint_local_tmp+1, 0
$0360	$00B9			MOVWF	_strtoint_local_result+1
;conv.ppas,382 :: 		
$0361	$3000			MOVLW	0
$0362	$063F			XORWF	_strtoint_local_negative+1, 0
$0363	$1D03			BTFSS	STATUS, Z
$0364	$2B67			GOTO	L_StrToInt_21
$0365	$30FF			MOVLW	255
$0366	$063E			XORWF	_strtoint_local_negative, 0
$0367	$	L_StrToInt_21:
$0367	$1D03			BTFSS	STATUS, Z
$0368	$2B71			GOTO	conv_L_191
$0369	$	conv_L_190:
;conv.ppas,383 :: 		
$0369	$0838			MOVF	_strtoint_local_result, 0
$036A	$3C00			SUBLW	0
$036B	$00B8			MOVWF	_strtoint_local_result
$036C	$0839			MOVF	_strtoint_local_result+1, 0
$036D	$1C03			BTFSS	STATUS, C
$036E	$3F01			ADDLW	1
$036F	$01B9			CLRF	_strtoint_local_result+1
$0370	$02B9			SUBWF	_strtoint_local_result+1, 1
$0371	$	conv_L_191:
$0371	$	conv_L_192:
$0371	$	conv_L_170:
;conv.ppas,384 :: 		
$0371	$0838			MOVF	_strtoint_local_result, 0
$0372	$00F0			MOVWF	STACK_0
$0373	$0839			MOVF	_strtoint_local_result+1, 0
$0374	$00F1			MOVWF	STACK_0+1
$0375	$0008			RETURN
$06E7	$	_usart_write_text:
;USART_b75.ppas,121 :: 		
;USART_b75.ppas,122 :: 		
$06E7	$1303			BCF	STATUS, RP1
$06E8	$1283			BCF	STATUS, RP0
$06E9	$01B8			CLRF	_usart_write_text_local_i, 1
;USART_b75.ppas,123 :: 		
$06EA	$0837			MOVF	FARG_Usart_Write_Text, 0
$06EB	$0084			MOVWF	FSR
$06EC	$0800			MOVF	INDF, 0
$06ED	$00B9			MOVWF	_usart_write_text_local_data
;USART_b75.ppas,124 :: 		
$06EE	$	USART_b75_L_47:
$06EE	$0839			MOVF	_usart_write_text_local_data, 0
$06EF	$3A00			XORLW	0
$06F0	$1903			BTFSC	STATUS, Z
$06F1	$2EFC			GOTO	USART_b75_L_48
;USART_b75.ppas,126 :: 		
$06F2	$0839			MOVF	_usart_write_text_local_data, 0
$06F3	$00C4			MOVWF	FARG_USART_Write
$06F4	$2748			CALL	_usart_write
;USART_b75.ppas,127 :: 		
$06F5	$0AB8			INCF	_usart_write_text_local_i, 1
;USART_b75.ppas,128 :: 		
$06F6	$0838			MOVF	_usart_write_text_local_i, 0
$06F7	$0737			ADDWF	FARG_Usart_Write_Text, 0
$06F8	$0084			MOVWF	FSR
$06F9	$0800			MOVF	INDF, 0
$06FA	$00B9			MOVWF	_usart_write_text_local_data
;USART_b75.ppas,129 :: 		
$06FB	$2EEE			GOTO	USART_b75_L_47
$06FC	$	USART_b75_L_48:
$06FC	$	USART_b75_L_45:
;USART_b75.ppas,130 :: 		
$06FC	$0008			RETURN
$06FD	$	_usart_init:
;USART_b75.ppas,22 :: 		
;USART_b75.ppas,24 :: 		
$06FD	$	USART_b75_L_1:
$06FD	$1303			BCF	STATUS, RP1
$06FE	$1683			BSF	STATUS, RP0
$06FF	$1698			BSF	TXSTA, 5
$0700	$	USART_b75_L_2:
;USART_b75.ppas,25 :: 		
$0700	$3090			MOVLW	144
$0701	$1283			BCF	STATUS, RP0
$0702	$0098			MOVWF	RCSTA
;USART_b75.ppas,31 :: 		
$0703	$	USART_b75_L_3:
$0703	$1683			BSF	STATUS, RP0
$0704	$1686			BSF	TRISB, 5
$0705	$	USART_b75_L_4:
;USART_b75.ppas,32 :: 		
$0705	$	USART_b75_L_5:
$0705	$1786			BSF	TRISB, 7
$0706	$	USART_b75_L_6:
;USART_b75.ppas,35 :: 		
$0706	$	USART_b75_L_8:
$0706	$1283			BCF	STATUS, RP0
$0707	$080C			MOVF	PIR1, 0
$0708	$00F1			MOVWF	STACK_1
$0709	$3000			MOVLW	0
$070A	$1AF1			BTFSC	STACK_1, 5
$070B	$3001			MOVLW	1
$070C	$00F1			MOVWF	STACK_1
$070D	$0871			MOVF	STACK_1, 0
$070E	$3A01			XORLW	1
$070F	$1903			BTFSC	STATUS, Z
$0710	$2F06			GOTO	USART_b75_L_8
;USART_b75.ppas,36 :: 		
$0711	$	USART_b75_L_9:
$0711	$	USART_b75_L_0:
;USART_b75.ppas,37 :: 		
$0711	$0008			RETURN
$06AC	$	_int2double:
$06AC	$1303			BCF	STATUS, RP1
$06AD	$1283			BCF	STATUS, RP0
;math_double.ppas,1681 :: 		
;math_double.ppas,1687 :: 		
$06AE	$0870			MOVF	STACK_0, W
;math_double.ppas,1688 :: 		
$06AF	$00F8			MOVWF	STACK_8
;math_double.ppas,1689 :: 		
$06B0	$0871			MOVF	STACK_1, W
;math_double.ppas,1690 :: 		
$06B1	$00F0			MOVWF	STACK_0
;math_double.ppas,1691 :: 		
$06B2	$01F1			CLRF	STACK_1
;math_double.ppas,1692 :: 		
$06B3	$01F2			CLRF	STACK_2
;math_double.ppas,1694 :: 		
$06B4	$01F3			CLRF	STACK_3
;math_double.ppas,1695 :: 		
$06B5	$	FLO1632:
;math_double.ppas,1696 :: 		
$06B5	$01FB			CLRF	STACK_11
;math_double.ppas,1698 :: 		
$06B6	$01FC			CLRF	STACK_12
;math_double.ppas,1699 :: 		
$06B7	$3096			MOVLW	150
;math_double.ppas,1700 :: 		
$06B8	$00F3			MOVWF	STACK_3
;math_double.ppas,1701 :: 		
$06B9	$01FA			CLRF	STACK_10
;math_double.ppas,1702 :: 		
$06BA	$1FF0			BTFSS	STACK_0, 7
;math_double.ppas,1704 :: 		
$06BB	$2EC2			GOTO	FLO1632EEE
;math_double.ppas,1705 :: 		
$06BC	$09F8			COMF	STACK_8, F
;math_double.ppas,1707 :: 		
$06BD	$09F0			COMF	STACK_0, F
;math_double.ppas,1708 :: 		
$06BE	$0AF8			INCF	STACK_8, F
;math_double.ppas,1709 :: 		
$06BF	$1903			BTFSC	STATUS, Z
;math_double.ppas,1711 :: 		
$06C0	$0AF0			INCF	STACK_0, F
;math_double.ppas,1712 :: 		
$06C1	$17FA			BSF	STACK_10, 7
;math_double.ppas,1713 :: 		
$06C2	$	FLO1632EEE:
;math_double.ppas,1714 :: 		
$06C2	$0870			MOVF	STACK_0, W
;math_double.ppas,1715 :: 		
$06C3	$00F1			MOVWF	STACK_1
;math_double.ppas,1716 :: 		
$06C4	$0878			MOVF	STACK_8, W
;math_double.ppas,1717 :: 		
$06C5	$00F0			MOVWF	STACK_0
;math_double.ppas,1718 :: 		
$06C6	$01F8			CLRF	STACK_8
;math_double.ppas,1719 :: 		
$06C7	$01F2			CLRF	STACK_2
;math_double.ppas,1721 :: 		
$06C8	$2640			CALL	_nrm3232
$06C9	$	math_double_L_18:
;math_double.ppas,1722 :: 		
$06C9	$0008			RETURN
$0712	$	_byte2double:
$0712	$1303			BCF	STATUS, RP1
$0713	$1283			BCF	STATUS, RP0
;math_double.ppas,1649 :: 		
;math_double.ppas,1656 :: 		
$0714	$	FLO08U32:
;math_double.ppas,1657 :: 		
$0714	$0870			MOVF	STACK_0, W
;math_double.ppas,1659 :: 		
$0715	$00F8			MOVWF	STACK_8
;math_double.ppas,1660 :: 		
$0716	$01FB			CLRF	STACK_11
;math_double.ppas,1662 :: 		
$0717	$01FC			CLRF	STACK_12
;math_double.ppas,1663 :: 		
$0718	$309E			MOVLW	0X9E
;math_double.ppas,1664 :: 		
$0719	$00F3			MOVWF	STACK_3
;math_double.ppas,1665 :: 		
$071A	$01FA			CLRF	STACK_10
;math_double.ppas,1666 :: 		
$071B	$01F2			CLRF	STACK_2
;math_double.ppas,1667 :: 		
$071C	$01F1			CLRF	STACK_1
;math_double.ppas,1668 :: 		
$071D	$01F0			CLRF	STACK_0
;math_double.ppas,1669 :: 		
$071E	$3002			MOVLW	0X02
;math_double.ppas,1670 :: 		
$071F	$00FC			MOVWF	STACK_12
;math_double.ppas,1672 :: 		
$0720	$2519			CALL	_nrm4032
$0721	$	math_double_L_17:
;math_double.ppas,1673 :: 		
$0721	$0008			RETURN
$04B4	$	_mul_32x32_fp:
$04B4	$1303			BCF	STATUS, RP1
$04B5	$1283			BCF	STATUS, RP0
;math_double.ppas,527 :: 		
;math_double.ppas,541 :: 		
$04B6	$	FPM32:
;math_double.ppas,542 :: 		
$04B6	$01FB			CLRF	STACK_11
;math_double.ppas,543 :: 		
$04B7	$0873			MOVF	STACK_3, W
;math_double.ppas,544 :: 		
$04B8	$1D03			BTFSS	STATUS, Z
;math_double.ppas,545 :: 		
$04B9	$0877			MOVF	STACK_7, W
;math_double.ppas,546 :: 		
$04BA	$1903			BTFSC	STATUS, Z
;math_double.ppas,547 :: 		
$04BB	$2D0B			GOTO	JPMRES032
;math_double.ppas,548 :: 		
$04BC	$	M32BNE0:
;math_double.ppas,549 :: 		
$04BC	$0872			MOVF	STACK_2, W
;math_double.ppas,550 :: 		
$04BD	$0676			XORWF	STACK_6, W
;math_double.ppas,551 :: 		
$04BE	$00FA			MOVWF	STACK_10
;math_double.ppas,552 :: 		
$04BF	$0877			MOVF	STACK_7, W
;math_double.ppas,553 :: 		
$04C0	$07F3			ADDWF	STACK_3, F
;math_double.ppas,554 :: 		
$04C1	$307E			MOVLW	126
;math_double.ppas,555 :: 		
$04C2	$1C03			BTFSS	STATUS, C
;math_double.ppas,556 :: 		
$04C3	$2CC8			GOTO	MTUN32
;math_double.ppas,557 :: 		
$04C4	$02F3			SUBWF	STACK_3, F
;math_double.ppas,558 :: 		
$04C5	$1803			BTFSC	STATUS, C
;math_double.ppas,559 :: 		
$04C6	$2D0E			GOTO	JPMSETFOV32
;math_double.ppas,560 :: 		
$04C7	$2CCB			GOTO	MOK32
;math_double.ppas,561 :: 		
$04C8	$	MTUN32:
;math_double.ppas,562 :: 		
$04C8	$02F3			SUBWF	STACK_3, F
;math_double.ppas,563 :: 		
$04C9	$1C03			BTFSS	STATUS, C
;math_double.ppas,564 :: 		
$04CA	$2D13			GOTO	JPMSETFUN32
;math_double.ppas,565 :: 		
$04CB	$	MOK32:
;math_double.ppas,566 :: 		
$04CB	$0872			MOVF	STACK_2, W
;math_double.ppas,567 :: 		
$04CC	$00F8			MOVWF	STACK_8
;math_double.ppas,568 :: 		
$04CD	$0871			MOVF	STACK_1, W
;math_double.ppas,569 :: 		
$04CE	$00FC			MOVWF	STACK_12
;math_double.ppas,570 :: 		
$04CF	$0870			MOVF	STACK_0, W
;math_double.ppas,571 :: 		
$04D0	$00FD			MOVWF	STACK_13
;math_double.ppas,572 :: 		
$04D1	$17F8			BSF	STACK_8, 7
;math_double.ppas,573 :: 		
$04D2	$17F6			BSF	STACK_6, 7
;math_double.ppas,574 :: 		
$04D3	$1003			BCF	STATUS, C
;math_double.ppas,575 :: 		
$04D4	$01F2			CLRF	STACK_2
;math_double.ppas,576 :: 		
$04D5	$01F1			CLRF	STACK_1
;math_double.ppas,577 :: 		
$04D6	$01F0			CLRF	STACK_0
;math_double.ppas,578 :: 		
$04D7	$3018			MOVLW	24
;math_double.ppas,579 :: 		
$04D8	$00A1			MOVWF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,580 :: 		
$04D9	$	MLOOP32:
;math_double.ppas,581 :: 		
$04D9	$1C7D			BTFSS	STACK_13, 0
;math_double.ppas,582 :: 		
$04DA	$2CE5			GOTO	MNOADD32
;math_double.ppas,583 :: 		
$04DB	$	MADD32:
;math_double.ppas,584 :: 		
$04DB	$0874			MOVF	STACK_4, W
;math_double.ppas,585 :: 		
$04DC	$07F0			ADDWF	STACK_0, F
;math_double.ppas,586 :: 		
$04DD	$0875			MOVF	STACK_5, W
;math_double.ppas,587 :: 		
$04DE	$1803			BTFSC	STATUS, C
;math_double.ppas,588 :: 		
$04DF	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,589 :: 		
$04E0	$07F1			ADDWF	STACK_1, F
;math_double.ppas,590 :: 		
$04E1	$0876			MOVF	STACK_6, W
;math_double.ppas,591 :: 		
$04E2	$1803			BTFSC	STATUS, C
;math_double.ppas,592 :: 		
$04E3	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,593 :: 		
$04E4	$07F2			ADDWF	STACK_2, F
;math_double.ppas,594 :: 		
$04E5	$	MNOADD32:
;math_double.ppas,595 :: 		
$04E5	$0CF2			RRF	STACK_2, F
;math_double.ppas,596 :: 		
$04E6	$0CF1			RRF	STACK_1, F
;math_double.ppas,597 :: 		
$04E7	$0CF0			RRF	STACK_0, F
;math_double.ppas,598 :: 		
$04E8	$0CF8			RRF	STACK_8, F
;math_double.ppas,599 :: 		
$04E9	$0CFC			RRF	STACK_12, F
;math_double.ppas,600 :: 		
$04EA	$0CFD			RRF	STACK_13, F
;math_double.ppas,601 :: 		
$04EB	$1003			BCF	STATUS, C
;math_double.ppas,602 :: 		
$04EC	$0BA1			DECFSZ	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,603 :: 		
$04ED	$2CD9			GOTO	MLOOP32
;math_double.ppas,604 :: 		
$04EE	$1BF2			BTFSC	STACK_2, 7
;math_double.ppas,605 :: 		
$04EF	$2CF5			GOTO	MROUND32
;math_double.ppas,606 :: 		
$04F0	$0DF8			RLF	STACK_8, F
;math_double.ppas,607 :: 		
$04F1	$0DF0			RLF	STACK_0, F
;math_double.ppas,608 :: 		
$04F2	$0DF1			RLF	STACK_1, F
;math_double.ppas,609 :: 		
$04F3	$0DF2			RLF	STACK_2, F
;math_double.ppas,610 :: 		
$04F4	$03F3			DECF	STACK_3, F
;math_double.ppas,611 :: 		
$04F5	$	MROUND32:
;math_double.ppas,612 :: 		
$04F5	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,613 :: 		
$04F6	$1C70			BTFSS	STACK_0, 0
;math_double.ppas,614 :: 		
$04F7	$2D07			GOTO	MUL32OK
;math_double.ppas,615 :: 		
$04F8	$1FF8			BTFSS	STACK_8, 7
;math_double.ppas,616 :: 		
$04F9	$2D07			GOTO	MUL32OK
;math_double.ppas,617 :: 		
$04FA	$0AF0			INCF	STACK_0, F
;math_double.ppas,618 :: 		
$04FB	$1903			BTFSC	STATUS, Z
;math_double.ppas,619 :: 		
$04FC	$0AF1			INCF	STACK_1, F
;math_double.ppas,620 :: 		
$04FD	$1903			BTFSC	STATUS, Z
;math_double.ppas,621 :: 		
$04FE	$0AF2			INCF	STACK_2, F
;math_double.ppas,622 :: 		
$04FF	$1D03			BTFSS	STATUS, Z
;math_double.ppas,623 :: 		
$0500	$2D07			GOTO	MUL32OK
;math_double.ppas,624 :: 		
$0501	$0CF2			RRF	STACK_2, F
;math_double.ppas,625 :: 		
$0502	$0CF1			RRF	STACK_1, F
;math_double.ppas,626 :: 		
$0503	$0CF0			RRF	STACK_0, F
;math_double.ppas,627 :: 		
$0504	$0AF3			INCF	STACK_3, F
;math_double.ppas,628 :: 		
$0505	$1903			BTFSC	STATUS, Z
;math_double.ppas,629 :: 		
$0506	$2D0E			GOTO	JPMSETFOV32
;math_double.ppas,630 :: 		
$0507	$	MUL32OK:
;math_double.ppas,631 :: 		
$0507	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,632 :: 		
$0508	$13F2			BCF	STACK_2, 7
;math_double.ppas,634 :: 		
$0509	$3000			MOVLW	0X00
;math_double.ppas,635 :: 		
$050A	$2D17			GOTO	MUL32EEE
;math_double.ppas,636 :: 		
$050B	$	JPMRES032:
;math_double.ppas,638 :: 		
$050B	$3001			MOVLW	0X01
;math_double.ppas,640 :: 		
$050C	$275A			CALL	_res032
;math_double.ppas,642 :: 		
$050D	$2D17			GOTO	MUL32EEE
;math_double.ppas,643 :: 		
$050E	$	JPMSETFOV32:
;math_double.ppas,645 :: 		
$050E	$3002			MOVLW	0X02
;math_double.ppas,647 :: 		
$050F	$158A			BSF	PCLATH, 3
$0510	$201D			CALL	_setfov32
$0511	$118A			BCF	PCLATH, 3
;math_double.ppas,649 :: 		
$0512	$2D17			GOTO	MUL32EEE
;math_double.ppas,650 :: 		
$0513	$	JPMSETFUN32:
;math_double.ppas,652 :: 		
$0513	$3004			MOVLW	0X04
;math_double.ppas,654 :: 		
$0514	$158A			BSF	PCLATH, 3
$0515	$200F			CALL	_setfun32
$0516	$118A			BCF	PCLATH, 3
;math_double.ppas,656 :: 		
$0517	$	MUL32EEE:
;math_double.ppas,657 :: 		
$0517	$0000			NOP
;math_double.ppas,658 :: 		
$0518	$	math_double_L_9:
;math_double.ppas,659 :: 		
$0518	$0008			RETURN
$0376	$	_div_32x32_fp:
$0376	$1303			BCF	STATUS, RP1
$0377	$1283			BCF	STATUS, RP0
;math_double.ppas,671 :: 		
;math_double.ppas,685 :: 		
$0378	$	FPD32:
;math_double.ppas,686 :: 		
$0378	$0877			MOVF	STACK_7, W
;math_double.ppas,687 :: 		
$0379	$1903			BTFSC	STATUS, Z
;math_double.ppas,689 :: 		
$037A	$2C05			GOTO	JPDSETFDZ32
;math_double.ppas,690 :: 		
$037B	$0873			MOVF	STACK_3, W
;math_double.ppas,691 :: 		
$037C	$1903			BTFSC	STATUS, Z
;math_double.ppas,692 :: 		
$037D	$2C0A			GOTO	JPDRES032
;math_double.ppas,693 :: 		
$037E	$	D32BNE0:
;math_double.ppas,694 :: 		
$037E	$0872			MOVF	STACK_2, W
;math_double.ppas,695 :: 		
$037F	$0676			XORWF	STACK_6, W
;math_double.ppas,696 :: 		
$0380	$3980			ANDLW	128
;math_double.ppas,697 :: 		
$0381	$00FA			MOVWF	STACK_10
;math_double.ppas,698 :: 		
$0382	$17F2			BSF	STACK_2, 7
;math_double.ppas,699 :: 		
$0383	$17F6			BSF	STACK_6, 7
;math_double.ppas,700 :: 		
$0384	$	TALIGN32:
;math_double.ppas,701 :: 		
$0384	$01A1			CLRF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,702 :: 		
$0385	$0872			MOVF	STACK_2, W
;math_double.ppas,703 :: 		
$0386	$00F8			MOVWF	STACK_8
;math_double.ppas,704 :: 		
$0387	$0871			MOVF	STACK_1, W
;math_double.ppas,705 :: 		
$0388	$00FC			MOVWF	STACK_12
;math_double.ppas,706 :: 		
$0389	$0870			MOVF	STACK_0, W
;math_double.ppas,708 :: 		
$038A	$00FD			MOVWF	STACK_13
;math_double.ppas,709 :: 		
$038B	$0874			MOVF	STACK_4, W
;math_double.ppas,710 :: 		
$038C	$02FD			SUBWF	STACK_13, F
;math_double.ppas,711 :: 		
$038D	$0875			MOVF	STACK_5, W
;math_double.ppas,712 :: 		
$038E	$1C03			BTFSS	STATUS, C
;math_double.ppas,713 :: 		
$038F	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,714 :: 		
$0390	$	TS1ALIGN32:
;math_double.ppas,715 :: 		
$0390	$02FC			SUBWF	STACK_12, F
;math_double.ppas,716 :: 		
$0391	$0876			MOVF	STACK_6, W
;math_double.ppas,717 :: 		
$0392	$1C03			BTFSS	STATUS, C
;math_double.ppas,718 :: 		
$0393	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,719 :: 		
$0394	$	TS2ALIGN32:
;math_double.ppas,720 :: 		
$0394	$02F8			SUBWF	STACK_8, F
;math_double.ppas,721 :: 		
$0395	$01F8			CLRF	STACK_8
;math_double.ppas,722 :: 		
$0396	$01FC			CLRF	STACK_12
;math_double.ppas,723 :: 		
$0397	$01FD			CLRF	STACK_13
;math_double.ppas,724 :: 		
$0398	$1C03			BTFSS	STATUS, C
;math_double.ppas,726 :: 		
$0399	$2BA1			GOTO	DALIGN32OK
;math_double.ppas,727 :: 		
$039A	$1003			BCF	STATUS, C
;math_double.ppas,728 :: 		
$039B	$0CF2			RRF	STACK_2, F
;math_double.ppas,729 :: 		
$039C	$0CF1			RRF	STACK_1, F
;math_double.ppas,730 :: 		
$039D	$0CF0			RRF	STACK_0, F
;math_double.ppas,731 :: 		
$039E	$0CF8			RRF	STACK_8, F
;math_double.ppas,732 :: 		
$039F	$3001			MOVLW	0X01
;math_double.ppas,733 :: 		
$03A0	$00A1			MOVWF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,734 :: 		
$03A1	$	DALIGN32OK:
;math_double.ppas,735 :: 		
$03A1	$0877			MOVF	STACK_7, W
;math_double.ppas,736 :: 		
$03A2	$02F3			SUBWF	STACK_3, F
;math_double.ppas,737 :: 		
$03A3	$1C03			BTFSS	STATUS, C
;math_double.ppas,738 :: 		
$03A4	$2BAB			GOTO	ALTB32
;math_double.ppas,739 :: 		
$03A5	$	AGEB32:
;math_double.ppas,740 :: 		
$03A5	$307E			MOVLW	126
;math_double.ppas,741 :: 		
$03A6	$0721			ADDWF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,742 :: 		
$03A7	$07F3			ADDWF	STACK_3, F
;math_double.ppas,743 :: 		
$03A8	$1803			BTFSC	STATUS, C
;math_double.ppas,744 :: 		
$03A9	$2C0D			GOTO	JPDSETFOV32
;math_double.ppas,745 :: 		
$03AA	$2BB0			GOTO	DARGOK32
;math_double.ppas,746 :: 		
$03AB	$	ALTB32:
;math_double.ppas,747 :: 		
$03AB	$307E			MOVLW	126
;math_double.ppas,748 :: 		
$03AC	$0721			ADDWF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,749 :: 		
$03AD	$07F3			ADDWF	STACK_3, F
;math_double.ppas,750 :: 		
$03AE	$1C03			BTFSS	STATUS, C
;math_double.ppas,751 :: 		
$03AF	$2C12			GOTO	JPDSETFUN32
;math_double.ppas,752 :: 		
$03B0	$	DARGOK32:
;math_double.ppas,754 :: 		
$03B0	$3018			MOVLW	24
;math_double.ppas,755 :: 		
$03B1	$07FA			ADDWF	STACK_10, F
;math_double.ppas,756 :: 		
$03B2	$	DLOOP32:
;math_double.ppas,757 :: 		
$03B2	$0DFD			RLF	STACK_13, F
;math_double.ppas,758 :: 		
$03B3	$0DFC			RLF	STACK_12, F
;math_double.ppas,759 :: 		
$03B4	$0DF8			RLF	STACK_8, F
;math_double.ppas,760 :: 		
$03B5	$0DF0			RLF	STACK_0, F
;math_double.ppas,761 :: 		
$03B6	$0DF1			RLF	STACK_1, F
;math_double.ppas,762 :: 		
$03B7	$0DF2			RLF	STACK_2, F
;math_double.ppas,764 :: 		
$03B8	$0DA1			RLF	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,765 :: 		
$03B9	$0874			MOVF	STACK_4, W
;math_double.ppas,766 :: 		
$03BA	$02F0			SUBWF	STACK_0, F
;math_double.ppas,767 :: 		
$03BB	$0875			MOVF	STACK_5, W
;math_double.ppas,768 :: 		
$03BC	$1C03			BTFSS	STATUS, C
;math_double.ppas,769 :: 		
$03BD	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,770 :: 		
$03BE	$	DS132:
;math_double.ppas,771 :: 		
$03BE	$02F1			SUBWF	STACK_1, F
;math_double.ppas,772 :: 		
$03BF	$0876			MOVF	STACK_6, W
;math_double.ppas,773 :: 		
$03C0	$1C03			BTFSS	STATUS, C
;math_double.ppas,774 :: 		
$03C1	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,775 :: 		
$03C2	$	DS232:
;math_double.ppas,776 :: 		
$03C2	$02F2			SUBWF	STACK_2, F
;math_double.ppas,777 :: 		
$03C3	$0D76			RLF	STACK_6, W
;math_double.ppas,778 :: 		
$03C4	$04A1			IORWF	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,779 :: 		
$03C5	$1C21			BTFSS	MATH_DOUBLE___MATH_TEMPBD, 0
;math_double.ppas,780 :: 		
$03C6	$2BC9			GOTO	DREST32
;math_double.ppas,781 :: 		
$03C7	$147D			BSF	STACK_13, 0
;math_double.ppas,782 :: 		
$03C8	$2BD4			GOTO	DOK32
;math_double.ppas,783 :: 		
$03C9	$	DREST32:
;math_double.ppas,784 :: 		
$03C9	$0874			MOVF	STACK_4, W
;math_double.ppas,785 :: 		
$03CA	$07F0			ADDWF	STACK_0, F
;math_double.ppas,786 :: 		
$03CB	$0875			MOVF	STACK_5, W
;math_double.ppas,787 :: 		
$03CC	$1803			BTFSC	STATUS, C
;math_double.ppas,788 :: 		
$03CD	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,789 :: 		
$03CE	$	DAREST32:
;math_double.ppas,790 :: 		
$03CE	$07F1			ADDWF	STACK_1, F
;math_double.ppas,791 :: 		
$03CF	$0876			MOVF	STACK_6, W
;math_double.ppas,792 :: 		
$03D0	$1803			BTFSC	STATUS, C
;math_double.ppas,793 :: 		
$03D1	$0A76			INCF	STACK_6, W
;math_double.ppas,794 :: 		
$03D2	$07F2			ADDWF	STACK_2, F
;math_double.ppas,795 :: 		
$03D3	$107D			BCF	STACK_13, 0
;math_double.ppas,797 :: 		
$03D4	$	DOK32:
;math_double.ppas,798 :: 		
$03D4	$03FA			DECF	STACK_10, F
;math_double.ppas,799 :: 		
$03D5	$301F			MOVLW	31
;math_double.ppas,800 :: 		
$03D6	$057A			ANDWF	STACK_10, W
;math_double.ppas,801 :: 		
$03D7	$1D03			BTFSS	STATUS, Z
;math_double.ppas,802 :: 		
$03D8	$2BB2			GOTO	DLOOP32
;math_double.ppas,803 :: 		
$03D9	$	DROUND32:
;math_double.ppas,804 :: 		
$03D9	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,805 :: 		
$03DA	$1C7D			BTFSS	STACK_13, 0
;math_double.ppas,806 :: 		
$03DB	$2BFB			GOTO	DIV32OK
;math_double.ppas,807 :: 		
$03DC	$1003			BCF	STATUS, C
;math_double.ppas,808 :: 		
$03DD	$0DF0			RLF	STACK_0, F
;math_double.ppas,809 :: 		
$03DE	$0DF1			RLF	STACK_1, F
;math_double.ppas,810 :: 		
$03DF	$0DF2			RLF	STACK_2, F
;math_double.ppas,812 :: 		
$03E0	$0DA1			RLF	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,813 :: 		
$03E1	$0874			MOVF	STACK_4, W
;math_double.ppas,814 :: 		
$03E2	$02F0			SUBWF	STACK_0, F
;math_double.ppas,815 :: 		
$03E3	$0875			MOVF	STACK_5, W
;math_double.ppas,816 :: 		
$03E4	$1C03			BTFSS	STATUS, C
;math_double.ppas,817 :: 		
$03E5	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,818 :: 		
$03E6	$02F1			SUBWF	STACK_1, F
;math_double.ppas,819 :: 		
$03E7	$0876			MOVF	STACK_6, W
;math_double.ppas,820 :: 		
$03E8	$1C03			BTFSS	STATUS, C
;math_double.ppas,821 :: 		
$03E9	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,822 :: 		
$03EA	$02F2			SUBWF	STACK_2, F
;math_double.ppas,823 :: 		
$03EB	$0D76			RLF	STACK_6, W
;math_double.ppas,824 :: 		
$03EC	$0421			IORWF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,825 :: 		
$03ED	$3901			ANDLW	0X01
;math_double.ppas,826 :: 		
$03EE	$07FD			ADDWF	STACK_13, F
;math_double.ppas,827 :: 		
$03EF	$1803			BTFSC	STATUS, C
;math_double.ppas,828 :: 		
$03F0	$0AFC			INCF	STACK_12, F
;math_double.ppas,829 :: 		
$03F1	$1903			BTFSC	STATUS, Z
;math_double.ppas,830 :: 		
$03F2	$0AF8			INCF	STACK_8, F
;math_double.ppas,831 :: 		
$03F3	$1D03			BTFSS	STATUS, Z
;math_double.ppas,832 :: 		
$03F4	$2BFB			GOTO	DIV32OK
;math_double.ppas,833 :: 		
$03F5	$0CF8			RRF	STACK_8, F
;math_double.ppas,834 :: 		
$03F6	$0CFC			RRF	STACK_12, F
;math_double.ppas,835 :: 		
$03F7	$0CFD			RRF	STACK_13, F
;math_double.ppas,836 :: 		
$03F8	$0AF3			INCF	STACK_3, F
;math_double.ppas,837 :: 		
$03F9	$1903			BTFSC	STATUS, Z
;math_double.ppas,838 :: 		
$03FA	$2C0D			GOTO	JPDSETFOV32
;math_double.ppas,839 :: 		
$03FB	$	DIV32OK:
;math_double.ppas,840 :: 		
$03FB	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,841 :: 		
$03FC	$13F8			BCF	STACK_8, 7
;math_double.ppas,842 :: 		
$03FD	$0878			MOVF	STACK_8, W
;math_double.ppas,843 :: 		
$03FE	$00F2			MOVWF	STACK_2
;math_double.ppas,844 :: 		
$03FF	$087C			MOVF	STACK_12, W
;math_double.ppas,845 :: 		
$0400	$00F1			MOVWF	STACK_1
;math_double.ppas,846 :: 		
$0401	$087D			MOVF	STACK_13, W
;math_double.ppas,848 :: 		
$0402	$00F0			MOVWF	STACK_0
;math_double.ppas,850 :: 		
$0403	$3000			MOVLW	0X00
;math_double.ppas,851 :: 		
$0404	$2C16			GOTO	DIV32EEE
;math_double.ppas,852 :: 		
$0405	$	JPDSETFDZ32:
;math_double.ppas,854 :: 		
$0405	$3001			MOVLW	0X01
;math_double.ppas,856 :: 		
$0406	$158A			BSF	PCLATH, 3
$0407	$2059			CALL	_setfdz32
$0408	$118A			BCF	PCLATH, 3
;math_double.ppas,858 :: 		
$0409	$2C16			GOTO	DIV32EEE
;math_double.ppas,859 :: 		
$040A	$	JPDRES032:
;math_double.ppas,861 :: 		
$040A	$3002			MOVLW	0X02
;math_double.ppas,863 :: 		
$040B	$275A			CALL	_res032
;math_double.ppas,865 :: 		
$040C	$2C16			GOTO	DIV32EEE
;math_double.ppas,866 :: 		
$040D	$	JPDSETFOV32:
;math_double.ppas,868 :: 		
$040D	$3004			MOVLW	0X04
;math_double.ppas,870 :: 		
$040E	$158A			BSF	PCLATH, 3
$040F	$201D			CALL	_setfov32
$0410	$118A			BCF	PCLATH, 3
;math_double.ppas,872 :: 		
$0411	$2C16			GOTO	DIV32EEE
;math_double.ppas,873 :: 		
$0412	$	JPDSETFUN32:
;math_double.ppas,875 :: 		
$0412	$3008			MOVLW	0X08
;math_double.ppas,877 :: 		
$0413	$158A			BSF	PCLATH, 3
$0414	$200F			CALL	_setfun32
$0415	$118A			BCF	PCLATH, 3
;math_double.ppas,879 :: 		
$0416	$	DIV32EEE:
;math_double.ppas,880 :: 		
$0416	$0000			NOP
;math_double.ppas,881 :: 		
$0417	$	math_double_L_10:
;math_double.ppas,882 :: 		
$0417	$0008			RETURN
$05C0	$	_double2byte:
$05C0	$1303			BCF	STATUS, RP1
$05C1	$1283			BCF	STATUS, RP0
;math_double.ppas,1545 :: 		
;math_double.ppas,1552 :: 		
$05C2	$	INT32U08:
;math_double.ppas,1553 :: 		
$05C2	$01FB			CLRF	STACK_11
;math_double.ppas,1554 :: 		
$05C3	$01FC			CLRF	STACK_12
;math_double.ppas,1556 :: 		
$05C4	$01FA			CLRF	STACK_10
;math_double.ppas,1557 :: 		
$05C5	$0873			MOVF	STACK_3, W
;math_double.ppas,1558 :: 		
$05C6	$1903			BTFSC	STATUS, Z
;math_double.ppas,1560 :: 		
$05C7	$2DED			GOTO	IRES008
;math_double.ppas,1561 :: 		
$05C8	$13FA			BCF	STACK_10, 7
;math_double.ppas,1563 :: 		
$05C9	$17F2			BSF	STACK_2, 7
;math_double.ppas,1564 :: 		
$05CA	$3086			MOVLW	134
;math_double.ppas,1565 :: 		
$05CB	$02F3			SUBWF	STACK_3, F
;math_double.ppas,1566 :: 		
$05CC	$1BF3			BTFSC	STACK_3, 7
;math_double.ppas,1567 :: 		
$05CD	$2DD1			GOTO	SETEXP08
;math_double.ppas,1568 :: 		
$05CE	$1903			BTFSC	STATUS, Z
;math_double.ppas,1569 :: 		
$05CF	$2DD1			GOTO	SETEXP08
;math_double.ppas,1570 :: 		
$05D0	$2DEF			GOTO	SETIOV08
;math_double.ppas,1571 :: 		
$05D1	$	SETEXP08:
;math_double.ppas,1572 :: 		
$05D1	$09F3			COMF	STACK_3, F
;math_double.ppas,1574 :: 		
$05D2	$0AF3			INCF	STACK_3, F
;math_double.ppas,1575 :: 		
$05D3	$3008			MOVLW	8
;math_double.ppas,1576 :: 		
$05D4	$0273			SUBWF	STACK_3, W
;math_double.ppas,1577 :: 		
$05D5	$1C03			BTFSS	STATUS, C
;math_double.ppas,1578 :: 		
$05D6	$2DDE			GOTO	TSHIFT3208
;math_double.ppas,1579 :: 		
$05D7	$00F3			MOVWF	STACK_3
;math_double.ppas,1580 :: 		
$05D8	$0DF2			RLF	STACK_2, F
;math_double.ppas,1582 :: 		
$05D9	$01F2			CLRF	STACK_2
;math_double.ppas,1583 :: 		
$05DA	$0873			MOVF	STACK_3, W
;math_double.ppas,1584 :: 		
$05DB	$1D03			BTFSS	STATUS, Z
;math_double.ppas,1585 :: 		
$05DC	$1003			BCF	STATUS, C
;math_double.ppas,1586 :: 		
$05DD	$2DE5			GOTO	SHIFT3208OK
;math_double.ppas,1587 :: 		
$05DE	$	TSHIFT3208:
;math_double.ppas,1588 :: 		
$05DE	$0873			MOVF	STACK_3, W
;math_double.ppas,1589 :: 		
$05DF	$1903			BTFSC	STATUS, Z
;math_double.ppas,1590 :: 		
$05E0	$2DE5			GOTO	SHIFT3208OK
;math_double.ppas,1591 :: 		
$05E1	$	SHIFT3208:
;math_double.ppas,1592 :: 		
$05E1	$1003			BCF	STATUS, C
;math_double.ppas,1593 :: 		
$05E2	$0CF2			RRF	STACK_2, F
;math_double.ppas,1594 :: 		
$05E3	$0BF3			DECFSZ	STACK_3, F
;math_double.ppas,1595 :: 		
$05E4	$2DE1			GOTO	SHIFT3208
;math_double.ppas,1596 :: 		
$05E5	$	SHIFT3208OK:
;math_double.ppas,1597 :: 		
$05E5	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,1598 :: 		
$05E6	$1C72			BTFSS	STACK_2, 0
;math_double.ppas,1599 :: 		
$05E7	$2DED			GOTO	INT3208OK
;math_double.ppas,1600 :: 		
$05E8	$1C03			BTFSS	STATUS, C
;math_double.ppas,1601 :: 		
$05E9	$2DED			GOTO	INT3208OK
;math_double.ppas,1602 :: 		
$05EA	$0AF2			INCF	STACK_2, F
;math_double.ppas,1603 :: 		
$05EB	$1903			BTFSC	STATUS, Z
;math_double.ppas,1604 :: 		
$05EC	$2DF4			GOTO	JPKSETIOV3224_
;math_double.ppas,1605 :: 		
$05ED	$	INT3208OK:
;math_double.ppas,1606 :: 		
$05ED	$	IRES008:
;math_double.ppas,1607 :: 		
$05ED	$01F1			CLRF	STACK_1
;math_double.ppas,1608 :: 		
$05EE	$2DF7			GOTO	INT3208EOK
;math_double.ppas,1609 :: 		
$05EF	$	SETIOV08:
;math_double.ppas,1610 :: 		
$05EF	$147B			BSF	STACK_11, 0
;math_double.ppas,1611 :: 		
$05F0	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,1613 :: 		
$05F1	$2DFA			GOTO	INT3208EER
;math_double.ppas,1614 :: 		
$05F2	$01F1			CLRF	STACK_1
;math_double.ppas,1615 :: 		
$05F3	$2DFA			GOTO	INT3208EER
;math_double.ppas,1616 :: 		
$05F4	$	JPKSETIOV3224_:
;math_double.ppas,1617 :: 		
$05F4	$3001			MOVLW	0X01
;math_double.ppas,1618 :: 		
$05F5	$00FC			MOVWF	STACK_12
;math_double.ppas,1619 :: 		
$05F6	$2DFC			GOTO	INT3208EEE
;math_double.ppas,1620 :: 		
$05F7	$	INT3208EOK:
;math_double.ppas,1621 :: 		
$05F7	$3000			MOVLW	0X00
;math_double.ppas,1622 :: 		
$05F8	$00FC			MOVWF	STACK_12
;math_double.ppas,1623 :: 		
$05F9	$2DFC			GOTO	INT3208EEE
;math_double.ppas,1624 :: 		
$05FA	$	INT3208EER:
;math_double.ppas,1625 :: 		
$05FA	$30FF			MOVLW	0XFF
;math_double.ppas,1626 :: 		
$05FB	$00FC			MOVWF	STACK_12
;math_double.ppas,1629 :: 		
$05FC	$	INT3208EEE:
;math_double.ppas,1631 :: 		
$05FC	$08FC			MOVF	STACK_12, F
;math_double.ppas,1632 :: 		
$05FD	$1903			BTFSC	STATUS, Z
;math_double.ppas,1633 :: 		
$05FE	$2E02			GOTO	L_DOUBLE2BYTE_0
;math_double.ppas,1635 :: 		
$05FF	$158A			BSF	PCLATH, 3
$0600	$2000			CALL	_setiov3224
$0601	$118A			BCF	PCLATH, 3
;math_double.ppas,1637 :: 		
$0602	$	L_DOUBLE2BYTE_0:
;math_double.ppas,1638 :: 		
$0602	$0872			MOVF	STACK_2, W
;math_double.ppas,1639 :: 		
$0603	$00F0			MOVWF	STACK_0
;math_double.ppas,1640 :: 		
$0604	$	math_double_L_16:
;math_double.ppas,1641 :: 		
$0604	$0008			RETURN
$0004	$	_main:
;motores.pbas,8 :: 		main:
$0004	$	_main_main:
;motores.pbas,9 :: 		TRISA=%11111111
$0004	$30FF			MOVLW	255
$0005	$1303			BCF	STATUS, RP1
$0006	$1683			BSF	STATUS, RP0
$0007	$0085			MOVWF	TRISA
;motores.pbas,10 :: 		TRISB=%00111111
$0008	$303F			MOVLW	63
$0009	$0086			MOVWF	TRISB
;motores.pbas,11 :: 		TRISC=%00000000
$000A	$0187			CLRF	TRISC, 1
;motores.pbas,12 :: 		INTCON=%00000000
$000B	$018B			CLRF	INTCON, 1
;motores.pbas,13 :: 		ANSEL=%00000000
$000C	$1703			BSF	STATUS, RP1
$000D	$1283			BCF	STATUS, RP0
$000E	$019E			CLRF	ANSEL, 1
;motores.pbas,14 :: 		ANSELH=%00000000
$000F	$019F			CLRF	ANSELH, 1
;motores.pbas,15 :: 		portA=0
$0010	$1303			BCF	STATUS, RP1
$0011	$0185			CLRF	PORTA, 1
;motores.pbas,16 :: 		portB=0
$0012	$0186			CLRF	PORTB, 1
;motores.pbas,17 :: 		portC=0
$0013	$0187			CLRF	PORTC, 1
;motores.pbas,19 :: 		USART_INIT(9600)
$0014	$3019			MOVLW	25
$0015	$1683			BSF	STATUS, RP0
$0016	$0099			MOVWF	SPBRG
$0017	$1518			BSF	TXSTA, BRGH
$0018	$26FD			CALL	_usart_init
;motores.pbas,21 :: 		portc.0 = 1 portc.1 = 1 portc.2 = 1
$0019	$	motores_L_1:
$0019	$1407			BSF	PORTC, 0
$001A	$	motores_L_2:
$001A	$	motores_L_3:
$001A	$1487			BSF	PORTC, 1
$001B	$	motores_L_4:
$001B	$	motores_L_5:
$001B	$1507			BSF	PORTC, 2
$001C	$	motores_L_6:
;motores.pbas,23 :: 		SPI_INIT
$001C	$158A			BSF	PCLATH, 3
$001D	$2046			CALL	_spi_init
$001E	$118A			BCF	PCLATH, 3
;motores.pbas,25 :: 		clearbit(portc,0) Spi_Write(17) Spi_Write(0) setbit(portc,0)
$001F	$1007			BCF	PORTC, 0
$0020	$3011			MOVLW	17
$0021	$00B7			MOVWF	FARG_SPI_write
$0022	$2735			CALL	_spi_write
$0023	$01B7			CLRF	FARG_SPI_write, 1
$0024	$2735			CALL	_spi_write
$0025	$1407			BSF	PORTC, 0
;motores.pbas,26 :: 		clearbit(portc,1) Spi_Write(17) Spi_Write(0) setbit(portc,1)
$0026	$1087			BCF	PORTC, 1
$0027	$3011			MOVLW	17
$0028	$00B7			MOVWF	FARG_SPI_write
$0029	$2735			CALL	_spi_write
$002A	$01B7			CLRF	FARG_SPI_write, 1
$002B	$2735			CALL	_spi_write
$002C	$1487			BSF	PORTC, 1
;motores.pbas,27 :: 		clearbit(portc,2) Spi_Write(17) Spi_Write(0) setbit(portc,2)
$002D	$1107			BCF	PORTC, 2
$002E	$3011			MOVLW	17
$002F	$00B7			MOVWF	FARG_SPI_write
$0030	$2735			CALL	_spi_write
$0031	$01B7			CLRF	FARG_SPI_write, 1
$0032	$2735			CALL	_spi_write
$0033	$1507			BSF	PORTC, 2
;motores.pbas,29 :: 		executa:
$0034	$	_main_executa:
;motores.pbas,30 :: 		if Usart_Data_Ready() > 0 then
$0034	$158A			BSF	PCLATH, 3
$0035	$2039			CALL	_usart_data_ready
$0036	$118A			BCF	PCLATH, 3
$0037	$0870			MOVF	STACK_0, 0
$0038	$3C00			SUBLW	0
$0039	$1803			BTFSC	STATUS, C
$003A	$2984			GOTO	motores_L_8
$003B	$	motores_L_7:
;motores.pbas,31 :: 		Usart_Read_Text(recebe,"/")
$003B	$3022			MOVLW	_recebe
$003C	$00B7			MOVWF	FARG_Usart_Read_Text
$003D	$302F			MOVLW	47
$003E	$00B1			MOVWF	?main_Local_Text+0
$003F	$01B2			CLRF	?main_Local_Text+1
$0040	$3031			MOVLW	?main_Local_Text
$0041	$00B8			MOVWF	FARG_Usart_Read_Text+1
$0042	$257B			CALL	_usart_read_text
;motores.pbas,32 :: 		valor = StrToInt(recebe)
$0043	$3022			MOVLW	_recebe
$0044	$00B7			MOVWF	FARG_StrToInt
$0045	$22B4			CALL	_strtoint
$0046	$0870			MOVF	STACK_0, 0
$0047	$00A9			MOVWF	_valor
$0048	$0871			MOVF	STACK_0+1, 0
$0049	$00AA			MOVWF	_valor+1
;motores.pbas,35 :: 		if (valor > 9) and (valor < 46) then
$004A	$3080			MOVLW	128
$004B	$00F5			MOVWF	STACK_5
$004C	$3080			MOVLW	128
$004D	$0671			XORWF	STACK_0+1, 0
$004E	$0275			SUBWF	STACK_5, 0
$004F	$1D03			BTFSS	STATUS, Z
$0050	$2853			GOTO	L_main_0
$0051	$0870			MOVF	STACK_0, 0
$0052	$3C09			SUBLW	9
$0053	$	L_main_0:
$0053	$30FF			MOVLW	255
$0054	$1803			BTFSC	STATUS, C
$0055	$3000			MOVLW	0
$0056	$00F5			MOVWF	STACK_5
$0057	$3080			MOVLW	128
$0058	$0671			XORWF	STACK_0+1, 0
$0059	$00F4			MOVWF	STACK_4
$005A	$3080			MOVLW	128
$005B	$0274			SUBWF	STACK_4, 0
$005C	$1D03			BTFSS	STATUS, Z
$005D	$2860			GOTO	L_main_1
$005E	$302E			MOVLW	46
$005F	$0270			SUBWF	STACK_0, 0
$0060	$	L_main_1:
$0060	$30FF			MOVLW	255
$0061	$1803			BTFSC	STATUS, C
$0062	$3000			MOVLW	0
$0063	$00F4			MOVWF	STACK_4
$0064	$0874			MOVF	STACK_4, 0
$0065	$0575			ANDWF	STACK_5, 0
$0066	$00F0			MOVWF	STACK_0
$0067	$1903			BTFSC	STATUS, Z
$0068	$2984			GOTO	motores_L_11
$0069	$	motores_L_10:
;motores.pbas,37 :: 		if (valor >= 10) And (valor < 16) then
$0069	$3080			MOVLW	128
$006A	$062A			XORWF	_valor+1, 0
$006B	$00F4			MOVWF	STACK_4
$006C	$3080			MOVLW	128
$006D	$0274			SUBWF	STACK_4, 0
$006E	$1D03			BTFSS	STATUS, Z
$006F	$2872			GOTO	L_main_2
$0070	$300A			MOVLW	10
$0071	$0229			SUBWF	_valor, 0
$0072	$	L_main_2:
$0072	$30FF			MOVLW	255
$0073	$1C03			BTFSS	STATUS, C
$0074	$3000			MOVLW	0
$0075	$00F4			MOVWF	STACK_4
$0076	$3080			MOVLW	128
$0077	$062A			XORWF	_valor+1, 0
$0078	$00F0			MOVWF	STACK_0
$0079	$3080			MOVLW	128
$007A	$0270			SUBWF	STACK_0, 0
$007B	$1D03			BTFSS	STATUS, Z
$007C	$287F			GOTO	L_main_3
$007D	$3010			MOVLW	16
$007E	$0229			SUBWF	_valor, 0
$007F	$	L_main_3:
$007F	$30FF			MOVLW	255
$0080	$1803			BTFSC	STATUS, C
$0081	$3000			MOVLW	0
$0082	$00F0			MOVWF	STACK_0
$0083	$0874			MOVF	STACK_4, 0
$0084	$05F0			ANDWF	STACK_0, 1
$0085	$1903			BTFSC	STATUS, Z
$0086	$288E			GOTO	motores_L_14
$0087	$	motores_L_13:
;motores.pbas,38 :: 		mcp = 1
$0087	$3001			MOVLW	1
$0088	$00AB			MOVWF	_mcp
$0089	$01AC			CLRF	_mcp+1
;motores.pbas,39 :: 		valor = valor - 10
$008A	$300A			MOVLW	10
$008B	$02A9			SUBWF	_valor, 1
$008C	$1C03			BTFSS	STATUS, C
$008D	$03AA			DECF	_valor+1, 1
$008E	$	motores_L_14:
;motores.pbas,40 :: 		end if
$008E	$	motores_L_15:
;motores.pbas,41 :: 		if (valor >= 20) And (valor < 26) then
$008E	$3080			MOVLW	128
$008F	$062A			XORWF	_valor+1, 0
$0090	$00F4			MOVWF	STACK_4
$0091	$3080			MOVLW	128
$0092	$0274			SUBWF	STACK_4, 0
$0093	$1D03			BTFSS	STATUS, Z
$0094	$2897			GOTO	L_main_4
$0095	$3014			MOVLW	20
$0096	$0229			SUBWF	_valor, 0
$0097	$	L_main_4:
$0097	$30FF			MOVLW	255
$0098	$1C03			BTFSS	STATUS, C
$0099	$3000			MOVLW	0
$009A	$00F4			MOVWF	STACK_4
$009B	$3080			MOVLW	128
$009C	$062A			XORWF	_valor+1, 0
$009D	$00F0			MOVWF	STACK_0
$009E	$3080			MOVLW	128
$009F	$0270			SUBWF	STACK_0, 0
$00A0	$1D03			BTFSS	STATUS, Z
$00A1	$28A4			GOTO	L_main_5
$00A2	$301A			MOVLW	26
$00A3	$0229			SUBWF	_valor, 0
$00A4	$	L_main_5:
$00A4	$30FF			MOVLW	255
$00A5	$1803			BTFSC	STATUS, C
$00A6	$3000			MOVLW	0
$00A7	$00F0			MOVWF	STACK_0
$00A8	$0874			MOVF	STACK_4, 0
$00A9	$05F0			ANDWF	STACK_0, 1
$00AA	$1903			BTFSC	STATUS, Z
$00AB	$28B3			GOTO	motores_L_17
$00AC	$	motores_L_16:
;motores.pbas,42 :: 		mcp = 2
$00AC	$3002			MOVLW	2
$00AD	$00AB			MOVWF	_mcp
$00AE	$01AC			CLRF	_mcp+1
;motores.pbas,43 :: 		valor = valor - 20
$00AF	$3014			MOVLW	20
$00B0	$02A9			SUBWF	_valor, 1
$00B1	$1C03			BTFSS	STATUS, C
$00B2	$03AA			DECF	_valor+1, 1
$00B3	$	motores_L_17:
;motores.pbas,44 :: 		end if
$00B3	$	motores_L_18:
;motores.pbas,45 :: 		if (valor >= 30) And (valor < 36) then
$00B3	$3080			MOVLW	128
$00B4	$062A			XORWF	_valor+1, 0
$00B5	$00F4			MOVWF	STACK_4
$00B6	$3080			MOVLW	128
$00B7	$0274			SUBWF	STACK_4, 0
$00B8	$1D03			BTFSS	STATUS, Z
$00B9	$28BC			GOTO	L_main_6
$00BA	$301E			MOVLW	30
$00BB	$0229			SUBWF	_valor, 0
$00BC	$	L_main_6:
$00BC	$30FF			MOVLW	255
$00BD	$1C03			BTFSS	STATUS, C
$00BE	$3000			MOVLW	0
$00BF	$00F4			MOVWF	STACK_4
$00C0	$3080			MOVLW	128
$00C1	$062A			XORWF	_valor+1, 0
$00C2	$00F0			MOVWF	STACK_0
$00C3	$3080			MOVLW	128
$00C4	$0270			SUBWF	STACK_0, 0
$00C5	$1D03			BTFSS	STATUS, Z
$00C6	$28C9			GOTO	L_main_7
$00C7	$3024			MOVLW	36
$00C8	$0229			SUBWF	_valor, 0
$00C9	$	L_main_7:
$00C9	$30FF			MOVLW	255
$00CA	$1803			BTFSC	STATUS, C
$00CB	$3000			MOVLW	0
$00CC	$00F0			MOVWF	STACK_0
$00CD	$0874			MOVF	STACK_4, 0
$00CE	$05F0			ANDWF	STACK_0, 1
$00CF	$1903			BTFSC	STATUS, Z
$00D0	$28D8			GOTO	motores_L_20
$00D1	$	motores_L_19:
;motores.pbas,46 :: 		mcp = 3
$00D1	$3003			MOVLW	3
$00D2	$00AB			MOVWF	_mcp
$00D3	$01AC			CLRF	_mcp+1
;motores.pbas,47 :: 		valor = valor - 30
$00D4	$301E			MOVLW	30
$00D5	$02A9			SUBWF	_valor, 1
$00D6	$1C03			BTFSS	STATUS, C
$00D7	$03AA			DECF	_valor+1, 1
$00D8	$	motores_L_20:
;motores.pbas,48 :: 		end if
$00D8	$	motores_L_21:
;motores.pbas,49 :: 		if (valor >= 40) And (valor < 46) then
$00D8	$3080			MOVLW	128
$00D9	$062A			XORWF	_valor+1, 0
$00DA	$00F4			MOVWF	STACK_4
$00DB	$3080			MOVLW	128
$00DC	$0274			SUBWF	STACK_4, 0
$00DD	$1D03			BTFSS	STATUS, Z
$00DE	$28E1			GOTO	L_main_8
$00DF	$3028			MOVLW	40
$00E0	$0229			SUBWF	_valor, 0
$00E1	$	L_main_8:
$00E1	$30FF			MOVLW	255
$00E2	$1C03			BTFSS	STATUS, C
$00E3	$3000			MOVLW	0
$00E4	$00F4			MOVWF	STACK_4
$00E5	$3080			MOVLW	128
$00E6	$062A			XORWF	_valor+1, 0
$00E7	$00F0			MOVWF	STACK_0
$00E8	$3080			MOVLW	128
$00E9	$0270			SUBWF	STACK_0, 0
$00EA	$1D03			BTFSS	STATUS, Z
$00EB	$28EE			GOTO	L_main_9
$00EC	$302E			MOVLW	46
$00ED	$0229			SUBWF	_valor, 0
$00EE	$	L_main_9:
$00EE	$30FF			MOVLW	255
$00EF	$1803			BTFSC	STATUS, C
$00F0	$3000			MOVLW	0
$00F1	$00F0			MOVWF	STACK_0
$00F2	$0874			MOVF	STACK_4, 0
$00F3	$05F0			ANDWF	STACK_0, 1
$00F4	$1903			BTFSC	STATUS, Z
$00F5	$28FD			GOTO	motores_L_23
$00F6	$	motores_L_22:
;motores.pbas,50 :: 		mcp = 4
$00F6	$3004			MOVLW	4
$00F7	$00AB			MOVWF	_mcp
$00F8	$01AC			CLRF	_mcp+1
;motores.pbas,51 :: 		valor = valor - 40
$00F9	$3028			MOVLW	40
$00FA	$02A9			SUBWF	_valor, 1
$00FB	$1C03			BTFSS	STATUS, C
$00FC	$03AA			DECF	_valor+1, 1
$00FD	$	motores_L_23:
;motores.pbas,52 :: 		end if
$00FD	$	motores_L_24:
;motores.pbas,54 :: 		valorConvertido = (valor * 255) / 5
$00FD	$0829			MOVF	_valor, 0
$00FE	$00F0			MOVWF	STACK_0
$00FF	$082A			MOVF	_valor+1, 0
$0100	$00F1			MOVWF	STACK_0+1
$0101	$26AC			CALL	_int2double
$0102	$0870			MOVF	STACK_0, 0
$0103	$00B3			MOVWF	FLOC_main+2
$0104	$0871			MOVF	STACK_0+1, 0
$0105	$00B4			MOVWF	FLOC_main+3
$0106	$0872			MOVF	STACK_0+2, 0
$0107	$00B5			MOVWF	FLOC_main+4
$0108	$0873			MOVF	STACK_0+3, 0
$0109	$00B6			MOVWF	FLOC_main+5
$010A	$30FF			MOVLW	255
$010B	$00F0			MOVWF	STACK_0
$010C	$2712			CALL	_byte2double
$010D	$0833			MOVF	FLOC_main+2, 0
$010E	$00F4			MOVWF	STACK_4
$010F	$0834			MOVF	FLOC_main+3, 0
$0110	$00F5			MOVWF	STACK_4+1
$0111	$0835			MOVF	FLOC_main+4, 0
$0112	$00F6			MOVWF	STACK_4+2
$0113	$0836			MOVF	FLOC_main+5, 0
$0114	$00F7			MOVWF	STACK_4+3
$0115	$24B4			CALL	_mul_32x32_fp
$0116	$0870			MOVF	STACK_0, 0
$0117	$00B3			MOVWF	FLOC_main+2
$0118	$0871			MOVF	STACK_0+1, 0
$0119	$00B4			MOVWF	FLOC_main+3
$011A	$0872			MOVF	STACK_0+2, 0
$011B	$00B5			MOVWF	FLOC_main+4
$011C	$0873			MOVF	STACK_0+3, 0
$011D	$00B6			MOVWF	FLOC_main+5
$011E	$3005			MOVLW	5
$011F	$00F0			MOVWF	STACK_0
$0120	$2712			CALL	_byte2double
$0121	$0870			MOVF	STACK_0, 0
$0122	$00F4			MOVWF	STACK_4
$0123	$0871			MOVF	STACK_0+1, 0
$0124	$00F5			MOVWF	STACK_4+1
$0125	$0872			MOVF	STACK_0+2, 0
$0126	$00F6			MOVWF	STACK_4+2
$0127	$0873			MOVF	STACK_0+3, 0
$0128	$00F7			MOVWF	STACK_4+3
$0129	$0833			MOVF	FLOC_main+2, 0
$012A	$00F0			MOVWF	STACK_0
$012B	$0834			MOVF	FLOC_main+3, 0
$012C	$00F1			MOVWF	STACK_0+1
$012D	$0835			MOVF	FLOC_main+4, 0
$012E	$00F2			MOVWF	STACK_0+2
$012F	$0836			MOVF	FLOC_main+5, 0
$0130	$00F3			MOVWF	STACK_0+3
$0131	$2376			CALL	_div_32x32_fp
$0132	$0870			MOVF	STACK_0, 0
$0133	$00AD			MOVWF	_valorconvertido
$0134	$0871			MOVF	STACK_0+1, 0
$0135	$00AE			MOVWF	_valorconvertido+1
$0136	$0872			MOVF	STACK_0+2, 0
$0137	$00AF			MOVWF	_valorconvertido+2
$0138	$0873			MOVF	STACK_0+3, 0
$0139	$00B0			MOVWF	_valorconvertido+3
;motores.pbas,56 :: 		if mcp = 1 then
$013A	$3000			MOVLW	0
$013B	$062C			XORWF	_mcp+1, 0
$013C	$1D03			BTFSS	STATUS, Z
$013D	$2940			GOTO	L_main_10
$013E	$3001			MOVLW	1
$013F	$062B			XORWF	_mcp, 0
$0140	$	L_main_10:
$0140	$1D03			BTFSS	STATUS, Z
$0141	$2943			GOTO	motores_L_26
$0142	$	motores_L_25:
;motores.pbas,57 :: 		clearbit(portc,0)
$0142	$1007			BCF	PORTC, 0
$0143	$	motores_L_26:
;motores.pbas,58 :: 		end if
$0143	$	motores_L_27:
;motores.pbas,59 :: 		if mcp = 2 then
$0143	$3000			MOVLW	0
$0144	$062C			XORWF	_mcp+1, 0
$0145	$1D03			BTFSS	STATUS, Z
$0146	$2949			GOTO	L_main_11
$0147	$3002			MOVLW	2
$0148	$062B			XORWF	_mcp, 0
$0149	$	L_main_11:
$0149	$1D03			BTFSS	STATUS, Z
$014A	$294C			GOTO	motores_L_29
$014B	$	motores_L_28:
;motores.pbas,60 :: 		clearbit(portc,1)
$014B	$1087			BCF	PORTC, 1
$014C	$	motores_L_29:
;motores.pbas,61 :: 		end if
$014C	$	motores_L_30:
;motores.pbas,62 :: 		if mcp = 3 then
$014C	$3000			MOVLW	0
$014D	$062C			XORWF	_mcp+1, 0
$014E	$1D03			BTFSS	STATUS, Z
$014F	$2952			GOTO	L_main_12
$0150	$3003			MOVLW	3
$0151	$062B			XORWF	_mcp, 0
$0152	$	L_main_12:
$0152	$1D03			BTFSS	STATUS, Z
$0153	$2955			GOTO	motores_L_32
$0154	$	motores_L_31:
;motores.pbas,63 :: 		clearbit(portc,2)
$0154	$1107			BCF	PORTC, 2
$0155	$	motores_L_32:
;motores.pbas,64 :: 		end if
$0155	$	motores_L_33:
;motores.pbas,66 :: 		if mcp = 4 then
$0155	$3000			MOVLW	0
$0156	$062C			XORWF	_mcp+1, 0
$0157	$1D03			BTFSS	STATUS, Z
$0158	$295B			GOTO	L_main_13
$0159	$3004			MOVLW	4
$015A	$062B			XORWF	_mcp, 0
$015B	$	L_main_13:
$015B	$1D03			BTFSS	STATUS, Z
$015C	$2960			GOTO	motores_L_35
$015D	$	motores_L_34:
;motores.pbas,67 :: 		portc.0 = 0
$015D	$1007			BCF	PORTC, 0
$015E	$	motores_L_38:
;motores.pbas,68 :: 		portc.1 = 0
$015E	$1087			BCF	PORTC, 1
$015F	$	motores_L_40:
;motores.pbas,69 :: 		portc.2 = 0
$015F	$1107			BCF	PORTC, 2
$0160	$	motores_L_42:
$0160	$	motores_L_35:
;motores.pbas,70 :: 		end if
$0160	$	motores_L_36:
;motores.pbas,72 :: 		spi_write(17)
$0160	$3011			MOVLW	17
$0161	$00B7			MOVWF	FARG_SPI_write
$0162	$2735			CALL	_spi_write
;motores.pbas,73 :: 		spi_Write(valorConvertido)
$0163	$082D			MOVF	_valorconvertido, 0
$0164	$00F0			MOVWF	STACK_0
$0165	$082E			MOVF	_valorconvertido+1, 0
$0166	$00F1			MOVWF	STACK_0+1
$0167	$082F			MOVF	_valorconvertido+2, 0
$0168	$00F2			MOVWF	STACK_0+2
$0169	$0830			MOVF	_valorconvertido+3, 0
$016A	$00F3			MOVWF	STACK_0+3
$016B	$25C0			CALL	_double2byte
$016C	$0870			MOVF	STACK_0, 0
$016D	$00B7			MOVWF	FARG_SPI_write
$016E	$2735			CALL	_spi_write
;motores.pbas,75 :: 		portc.0 = 1
$016F	$	motores_L_43:
$016F	$1407			BSF	PORTC, 0
$0170	$	motores_L_44:
;motores.pbas,76 :: 		portc.1 = 1
$0170	$	motores_L_45:
$0170	$1487			BSF	PORTC, 1
$0171	$	motores_L_46:
;motores.pbas,77 :: 		portc.2 = 1
$0171	$	motores_L_47:
$0171	$1507			BSF	PORTC, 2
$0172	$	motores_L_48:
;motores.pbas,79 :: 		delay_ms(10)
$0172	$300D			MOVLW	13
$0173	$00FB			MOVWF	STACK_11
$0174	$30FF			MOVLW	255
$0175	$00FA			MOVWF	STACK_10
$0176	$0BFB			DECFSZ	STACK_11, F
$0177	$2979			GOTO	$+2
$0178	$297C			GOTO	$+4
$0179	$0BFA			DECFSZ	STACK_10, F
$017A	$2979			GOTO	$-1
$017B	$2976			GOTO	$-5
$017C	$30F3			MOVLW	243
$017D	$00FA			MOVWF	STACK_10
$017E	$0BFA			DECFSZ	STACK_10, F
$017F	$297E			GOTO	$-1
$0180	$0000			NOP
;motores.pbas,81 :: 		Usart_Write_Text(recebe)
$0181	$3022			MOVLW	_recebe
$0182	$00B7			MOVWF	FARG_Usart_Write_Text
$0183	$26E7			CALL	_usart_write_text
$0184	$	motores_L_11:
;motores.pbas,83 :: 		end if
$0184	$	motores_L_12:
$0184	$	motores_L_8:
;motores.pbas,85 :: 		end if
$0184	$	motores_L_9:
;motores.pbas,87 :: 		goto executa
$0184	$2834			GOTO	_main_executa
$0185	$2985			GOTO	$
